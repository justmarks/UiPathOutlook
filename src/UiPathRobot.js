!function(e){var n={};function r(t){if(n[t])return n[t].exports;var i=n[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=n,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)r.d(t,i,function(n){return e[n]}.bind(null,i));return t},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="",r(r.s="./src/SDK/uipathRobot.ts")}({"./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/ApplicationInsights.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/ApplicationInsights.js ***!
  \****************************************************************************************************************/
/*! exports provided: ApplicationInsights */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationInsights", function() { return ApplicationInsights; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n/* harmony import */ var _Telemetry_PageViewManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Telemetry/PageViewManager */ "./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewManager.js");\n/* harmony import */ var _Telemetry_PageVisitTimeManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Telemetry/PageVisitTimeManager */ "./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageVisitTimeManager.js");\n/* harmony import */ var _Telemetry_PageViewPerformanceManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Telemetry/PageViewPerformanceManager */ "./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js");\n/**\r\n * ApplicationInsights.ts\r\n * @copyright Microsoft 2018\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n"use strict";\r\nvar durationProperty = "duration";\r\nvar ApplicationInsights = /** @class */ (function () {\r\n    function ApplicationInsights() {\r\n        this.identifier = "ApplicationInsightsAnalytics"; // do not change name or priority\r\n        this.priority = 180; // take from reserved priority range 100- 200\r\n        this.autoRoutePVDelay = 500; // ms; Time to wait after a route change before triggering a pageview to allow DOM changes to take place\r\n        this._isInitialized = false;\r\n        // Counts number of trackAjax invokations.\r\n        // By default we only monitor X ajax call per view to avoid too much load.\r\n        // Default value is set in config.\r\n        // This counter keeps increasing even after the limit is reached.\r\n        this._trackAjaxAttempts = 0;\r\n        // array with max length of 2 that store current url and previous url for SPA page route change trackPageview use.\r\n        this._prevUri = typeof window === "object" && window.location && window.location.href || "";\r\n        this.initialize = this._initialize.bind(this);\r\n    }\r\n    ApplicationInsights.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.disableExceptionTracking = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.autoTrackPageVisitTime = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        config.overridePageViewDuration = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].stringToBoolOrDefault(config.overridePageViewDuration);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.isCookieUseDisabled = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        config.enableAutoRouteTracking = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].stringToBoolOrDefault(config.enableAutoRouteTracking);\r\n        config.namePrefix = config.namePrefix || "";\r\n        return config;\r\n    };\r\n    ApplicationInsights.prototype.processTelemetry = function (env) {\r\n        var doNotSendItem = false;\r\n        var telemetryInitializersCount = this._telemetryInitializers.length;\r\n        for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n            var telemetryInitializer = this._telemetryInitializers[i];\r\n            if (telemetryInitializer) {\r\n                try {\r\n                    if (telemetryInitializer.apply(null, [env]) === false) {\r\n                        doNotSendItem = true;\r\n                        break;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // log error but dont stop executing rest of the telemetry initializers\r\n                    // doNotSendItem = true;\r\n                    this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].TelemetryInitializerFailed, "One of telemetry initializers failed, telemetry item will not be sent: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].dump(e) }, true);\r\n                }\r\n            }\r\n        }\r\n        if (!doNotSendItem && !_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(env);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    ApplicationInsights.prototype.trackEvent = function (event, customProperties) {\r\n        try {\r\n            var telemetryItem = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["TelemetryItemCreator"].create(event, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Event"].dataType, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Event"].envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].TrackTraceFailed, "trackTrace failed, trace will not be collected: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].dump(e) });\r\n        }\r\n    };\r\n    /**\r\n      * Start timing an extended event. Call `stopTrackEvent` to log the event when it ends.\r\n      * @param   name    A string that identifies this event uniquely within the document.\r\n    */\r\n    ApplicationInsights.prototype.startTrackEvent = function (name) {\r\n        try {\r\n            this._eventTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].StartTrackEventFailed, "startTrackEvent failed, event will not be collected: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        try {\r\n            this._eventTracking.stop(name, undefined, properties); // Todo: Fix to pass measurements once type is updated\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].StopTrackEventFailed, "stopTrackEvent failed, event will not be collected: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a diagnostic message\r\n     * @param {ITraceTelemetry} trace\r\n     * @param ICustomProperties.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackTrace = function (trace, customProperties) {\r\n        try {\r\n            var telemetryItem = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["TelemetryItemCreator"].create(trace, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Trace"].dataType, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Trace"].envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].TrackTraceFailed, "trackTrace failed, trace will not be collected: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a numeric value that is not associated with a specific event. Typically\r\n     * used to send regular reports of performance indicators. To send single measurement, just\r\n     * use the name and average fields of {@link IMetricTelemetry}. If you take measurements\r\n     * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements\r\n     * and sending the resulting average at intervals\r\n     * @param {IMetricTelemetry} metric input object argument. Only name and average are mandatory.\r\n     * @param {{[key: string]: any}} customProperties additional data used to filter metrics in the\r\n     * portal. Defaults to empty.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackMetric = function (metric, customProperties) {\r\n        try {\r\n            var telemetryItem = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["TelemetryItemCreator"].create(metric, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Metric"].dataType, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Metric"].envelopeType, this._logger, customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].TrackMetricFailed, "trackMetric failed, metric will not be collected: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Logs that a page or other item was viewed.\r\n     * @param IPageViewTelemetry The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param customProperties Additional data used to filter events and metrics. Defaults to empty.\r\n     * If a user wants to provide duration for pageLoad, it\'ll have to be in pageView.properties.duration\r\n     */\r\n    ApplicationInsights.prototype.trackPageView = function (pageView, customProperties) {\r\n        try {\r\n            var inPv = pageView || {};\r\n            this._pageViewManager.trackPageView(inPv, tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, inPv.properties, inPv.measurements, customProperties));\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(inPv.name, inPv.uri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].TrackPVFailed, "trackPageView failed, page view will not be collected: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Create a page view telemetry item and send it to the SDK pipeline through the core.track API\r\n     * @param pageView Page view item to be sent\r\n     * @param properties Custom properties (Part C) that a user can add to the telemetry item\r\n     * @param systemProperties System level properties (Part A) that a user can add to the telemetry item\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewInternal = function (pageView, properties, systemProperties) {\r\n        if (typeof document !== "undefined") {\r\n            pageView.refUri = pageView.refUri === undefined ? document.referrer : pageView.refUri;\r\n        }\r\n        var telemetryItem = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["TelemetryItemCreator"].create(pageView, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["PageView"].dataType, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["PageView"].envelopeType, this._logger, properties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n        // reset ajaxes counter\r\n        this._trackAjaxAttempts = 0;\r\n    };\r\n    /**\r\n     * @ignore INTERNAL ONLY\r\n     * @param pageViewPerformance\r\n     * @param properties\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewPerformanceInternal = function (pageViewPerformance, properties, systemProperties) {\r\n        var telemetryItem = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["TelemetryItemCreator"].create(pageViewPerformance, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["PageViewPerformance"].dataType, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["PageViewPerformance"].envelopeType, this._logger, properties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Send browser performance metrics.\r\n     * @param pageViewPerformance\r\n     * @param customProperties\r\n     */\r\n    ApplicationInsights.prototype.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n        try {\r\n            this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n            this.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].TrackPVFailed, "trackPageViewPerformance failed, page view will not be collected: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don\'t want to calculate the duration yourself. This method doesn\'t send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    ApplicationInsights.prototype.startTrackPage = function (name) {\r\n        try {\r\n            if (typeof name !== "string") {\r\n                name = window.document && window.document.title || "";\r\n            }\r\n            this._pageTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].StartTrackFailed, "startTrackPage failed, page view may not be collected: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackPage = function (name, url, properties, measurement) {\r\n        try {\r\n            if (typeof name !== "string") {\r\n                name = window.document && window.document.title || "";\r\n            }\r\n            if (typeof url !== "string") {\r\n                url = window.location && window.location.href || "";\r\n            }\r\n            this._pageTracking.stop(name, url, properties, measurement);\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(name, url);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].StopTrackFailed, "stopTrackPage failed, page view will not be collected: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].dump(e) });\r\n        }\r\n    };\r\n    /**\r\n    * @ignore INTERNAL ONLY\r\n    * @param exception\r\n    * @param properties\r\n    * @param systemProperties\r\n    */\r\n    ApplicationInsights.prototype.sendExceptionInternal = function (exception, customProperties, systemProperties) {\r\n        var exceptionPartB = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Exception"](this._logger, exception.exception || new Error(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].NotSpecified), exception.properties, exception.measurements, exception.severityLevel, exception.id).toInterface();\r\n        var telemetryItem = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["TelemetryItemCreator"].create(exceptionPartB, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Exception"].dataType, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Exception"].envelopeType, this._logger, customProperties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Log an exception you have caught.\r\n     *\r\n     * @param {IExceptionTelemetry} exception   Object which contains exception to be sent\r\n     * @param {{[key: string]: any}} customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     *\r\n     * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackException = function (exception, customProperties) {\r\n        try {\r\n            this.sendExceptionInternal(exception, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].TrackExceptionFailed, "trackException failed, exception will not be collected: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Custom error handler for Application Insights Analytics\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype._onerror = function (exception) {\r\n        try {\r\n            var properties_1 = {\r\n                url: (exception && exception.url) || document.URL,\r\n                lineNumber: exception.lineNumber,\r\n                columnNumber: exception.columnNumber,\r\n                message: exception.message\r\n            };\r\n            if (_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception.error)) {\r\n                this._sendCORSException(properties_1.url);\r\n            }\r\n            else {\r\n                if (!_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].isError(exception.error)) {\r\n                    var stack = "window.onerror@" + properties_1.url + ":" + exception.lineNumber + ":" + (exception.columnNumber || 0);\r\n                    exception.error = new Error(exception.message);\r\n                    exception.error.stack = stack;\r\n                }\r\n                this.trackException({ exception: exception.error, severityLevel: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["SeverityLevel"].Error }, properties_1);\r\n            }\r\n        }\r\n        catch (e) {\r\n            var errorString = exception.error ?\r\n                (exception.error.name + ", " + exception.error.message)\r\n                : "null";\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].ExceptionWhileLoggingError, "_onError threw exception while logging error, error will not be collected: "\r\n                + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].dump(e), errorString: errorString });\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (this._isInitialized) {\r\n            return;\r\n        }\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(core)) {\r\n            throw Error("Error initializing");\r\n        }\r\n        this.core = core;\r\n        this._logger = core.logger;\r\n        this._globalconfig = {\r\n            instrumentationKey: config.instrumentationKey,\r\n            endpointUrl: config.endpointUrl || "https://dc.services.visualstudio.com/v2/track"\r\n        };\r\n        this.config = config.extensionConfig && config.extensionConfig[this.identifier] ? config.extensionConfig[this.identifier] : {};\r\n        // load default values if specified\r\n        var defaults = ApplicationInsights.getDefaultConfig();\r\n        if (defaults !== undefined) {\r\n            for (var field in defaults) {\r\n                // for each unspecified field, set the default value\r\n                this.config[field] = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["ConfigurationManager"].getConfig(config, field, this.identifier, defaults[field]);\r\n            }\r\n            if (this._globalconfig) {\r\n                for (var field in defaults) {\r\n                    if (this._globalconfig[field] === undefined) {\r\n                        this._globalconfig[field] = defaults[field];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isCookieUseDisabled) {\r\n            _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].disableCookies();\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isStorageUseDisabled) {\r\n            _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].disableStorage();\r\n        }\r\n        var configGetters = {\r\n            instrumentationKey: function () { return config.instrumentationKey; },\r\n            accountId: function () { return _this.config.accountId || config.accountId; },\r\n            sessionRenewalMs: function () { return _this.config.sessionRenewalMs || config.sessionRenewalMs; },\r\n            sessionExpirationMs: function () { return _this.config.sessionExpirationMs || config.sessionExpirationMs; },\r\n            sampleRate: function () { return _this.config.samplingPercentage || config.samplingPercentage; },\r\n            cookieDomain: function () { return _this.config.cookieDomain || config.cookieDomain; },\r\n            sdkExtension: function () { return _this.config.sdkExtension || config.sdkExtension; },\r\n            isBrowserLinkTrackingEnabled: function () { return _this.config.isBrowserLinkTrackingEnabled || config.isBrowserLinkTrackingEnabled; },\r\n            appId: function () { return _this.config.appId || config.appId; }\r\n        };\r\n        this._pageViewPerformanceManager = new _Telemetry_PageViewPerformanceManager__WEBPACK_IMPORTED_MODULE_5__["PageViewPerformanceManager"](this.core);\r\n        this._pageViewManager = new _Telemetry_PageViewManager__WEBPACK_IMPORTED_MODULE_3__["PageViewManager"](this, this.config.overridePageViewDuration, this.core, this._pageViewPerformanceManager);\r\n        this._pageVisitTimeManager = new _Telemetry_PageVisitTimeManager__WEBPACK_IMPORTED_MODULE_4__["PageVisitTimeManager"](this._logger, function (pageName, pageUrl, pageVisitTime) { return _this.trackPageVisitTime(pageName, pageUrl, pageVisitTime); });\r\n        this._telemetryInitializers = [];\r\n        this._addDefaultTelemetryInitializers(configGetters);\r\n        this._eventTracking = new Timing(this._logger, "trackEvent");\r\n        this._eventTracking.action =\r\n            function (name, url, duration, properties) {\r\n                if (!properties) {\r\n                    properties = {};\r\n                }\r\n                properties[durationProperty] = duration.toString();\r\n                _this.trackEvent({ name: name, properties: properties });\r\n            };\r\n        // initialize page view timing\r\n        this._pageTracking = new Timing(this._logger, "trackPageView");\r\n        this._pageTracking.action = function (name, url, duration, properties, measurements) {\r\n            // duration must be a custom property in order for the collector to extract it\r\n            if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(properties)) {\r\n                properties = {};\r\n            }\r\n            properties[durationProperty] = duration.toString();\r\n            var pageViewItem = {\r\n                name: name,\r\n                uri: url,\r\n                properties: properties,\r\n                measurements: measurements\r\n            };\r\n            _this.sendPageViewInternal(pageViewItem);\r\n        };\r\n        var instance = this;\r\n        if (this.config.disableExceptionTracking === false &&\r\n            !this.config.autoExceptionInstrumented) {\r\n            // We want to enable exception auto collection and it has not been done so yet\r\n            var onerror_1 = "onerror";\r\n            var originalOnError_1 = window[onerror_1];\r\n            window.onerror = function (message, url, lineNumber, columnNumber, error) {\r\n                var handled = originalOnError_1 && originalOnError_1(message, url, lineNumber, columnNumber, error);\r\n                if (handled !== true) {\r\n                    instance._onerror({\r\n                        message: message,\r\n                        url: url,\r\n                        lineNumber: lineNumber,\r\n                        columnNumber: columnNumber,\r\n                        error: error\r\n                    });\r\n                }\r\n                return handled;\r\n            };\r\n            this.config.autoExceptionInstrumented = true;\r\n        }\r\n        /**\r\n         * Create a custom "locationchange" event which is triggered each time the history object is changed\r\n         */\r\n        if (this.config.enableAutoRouteTracking === true\r\n            && typeof history === "object" && typeof history.pushState === "function" && typeof history.replaceState === "function"\r\n            && typeof window === "object"\r\n            && typeof Event !== "undefined") {\r\n            var _self_1 = this;\r\n            // Find the properties plugin\r\n            extensions.forEach(function (extension) {\r\n                if (extension.identifier === _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["PropertiesPluginIdentifier"]) {\r\n                    _this._properties = extension;\r\n                }\r\n            });\r\n            history.pushState = (function (f) { return function pushState() {\r\n                var ret = f.apply(this, arguments);\r\n                window.dispatchEvent(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].createDomEvent(_self_1.config.namePrefix + "pushState"));\r\n                window.dispatchEvent(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].createDomEvent(_self_1.config.namePrefix + "locationchange"));\r\n                return ret;\r\n            }; })(history.pushState);\r\n            history.replaceState = (function (f) { return function replaceState() {\r\n                var ret = f.apply(this, arguments);\r\n                window.dispatchEvent(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].createDomEvent(_self_1.config.namePrefix + "replaceState"));\r\n                window.dispatchEvent(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].createDomEvent(_self_1.config.namePrefix + "locationchange"));\r\n                return ret;\r\n            }; })(history.replaceState);\r\n            window.addEventListener(_self_1.config.namePrefix + "popstate", function () {\r\n                window.dispatchEvent(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].createDomEvent(_self_1.config.namePrefix + "locationchange"));\r\n            });\r\n            window.addEventListener(_self_1.config.namePrefix + "locationchange", function () {\r\n                if (_self_1._properties && _self_1._properties.context && _self_1._properties.context.telemetryTrace) {\r\n                    _self_1._properties.context.telemetryTrace.traceID = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Util"].generateW3CId();\r\n                    _self_1._properties.context.telemetryTrace.name = window.location && window.location.pathname || "_unknown_";\r\n                }\r\n                if (_this._currUri) {\r\n                    _this._prevUri = _this._currUri;\r\n                    _this._currUri = window.location && window.location.href || "";\r\n                }\r\n                else {\r\n                    _this._currUri = window.location && window.location.href || "";\r\n                }\r\n                setTimeout((function (uri) {\r\n                    // todo: override start time so that it is not affected by autoRoutePVDelay\r\n                    _self_1.trackPageView({ refUri: uri, properties: { duration: 0 } }); // SPA route change loading durations are undefined, so send 0\r\n                }).bind(_this, _this._prevUri), _self_1.autoRoutePVDelay);\r\n            });\r\n        }\r\n        this._isInitialized = true;\r\n    };\r\n    /**\r\n     * Log a page visit time\r\n     * @param    pageName    Name of page\r\n     * @param    pageVisitDuration Duration of visit to the page in milleseconds\r\n     */\r\n    ApplicationInsights.prototype.trackPageVisitTime = function (pageName, pageUrl, pageVisitTime) {\r\n        var properties = { PageName: pageName, PageUrl: pageUrl };\r\n        this.trackMetric({\r\n            name: "PageVisitTime",\r\n            average: pageVisitTime,\r\n            max: pageVisitTime,\r\n            min: pageVisitTime,\r\n            sampleCount: 1\r\n        }, properties);\r\n    };\r\n    ApplicationInsights.prototype._addDefaultTelemetryInitializers = function (configGetters) {\r\n        if (!configGetters.isBrowserLinkTrackingEnabled()) {\r\n            var browserLinkPaths_1 = [\'/browserLinkSignalR/\', \'/__browserLink/\'];\r\n            var dropBrowserLinkRequests = function (envelope) {\r\n                if (envelope.baseType === _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["RemoteDependencyData"].dataType) {\r\n                    var remoteData = envelope.baseData;\r\n                    if (remoteData) {\r\n                        for (var i = 0; i < browserLinkPaths_1.length; i++) {\r\n                            if (remoteData.target && remoteData.target.indexOf(browserLinkPaths_1[i]) >= 0) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            };\r\n            this._addTelemetryInitializer(dropBrowserLinkRequests);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype._addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._sendCORSException = function (url) {\r\n        var exception = {\r\n            message: "Script error: The browser\'s same-origin policy prevents us from getting the details of this exception. Consider using the \'crossorigin\' attribute.",\r\n            url: url,\r\n            lineNumber: 0,\r\n            columnNumber: 0,\r\n            error: undefined\r\n        };\r\n        var telemetryItem = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["TelemetryItemCreator"].create(exception, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Exception"].dataType, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Exception"].envelopeType, this._logger, { url: url });\r\n        this.core.track(telemetryItem);\r\n    };\r\n    ApplicationInsights.Version = "2.2.1"; // Not currently used anywhere\r\n    return ApplicationInsights;\r\n}());\r\n\r\n/**\r\n * Used to record timed events and page views.\r\n */\r\nvar Timing = /** @class */ (function () {\r\n    function Timing(logger, name) {\r\n        this._name = name;\r\n        this._events = {};\r\n        this._logger = logger;\r\n    }\r\n    Timing.prototype.start = function (name) {\r\n        if (typeof this._events[name] !== "undefined") {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].StartCalledMoreThanOnce, "start was called more than once for this event without calling stop.", { name: this._name, key: name }, true);\r\n        }\r\n        this._events[name] = +new Date;\r\n    };\r\n    Timing.prototype.stop = function (name, url, properties, measurements) {\r\n        var start = this._events[name];\r\n        if (isNaN(start)) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].StopCalledWithoutStart, "stop was called without a corresponding start.", { name: this._name, key: name }, true);\r\n        }\r\n        else {\r\n            var end = +new Date;\r\n            var duration = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["DateTimeUtils"].GetDuration(start, end);\r\n            this.action(name, url, duration, properties, measurements);\r\n        }\r\n        delete this._events[name];\r\n        this._events[name] = undefined;\r\n    };\r\n    return Timing;\r\n}());\r\n//# sourceMappingURL=ApplicationInsights.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/ApplicationInsights.js?')},"./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewManager.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewManager.js ***!
  \**********************************************************************************************************************/
/*! exports provided: PageViewManager */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageViewManager", function() { return PageViewManager; });\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n/**\r\n* Class encapsulates sending page views and page view performance telemetry.\r\n*/\r\nvar PageViewManager = /** @class */ (function () {\r\n    function PageViewManager(appInsights, overridePageViewDuration, core, pageViewPerformanceManager) {\r\n        this.pageViewPerformanceSent = false;\r\n        this.overridePageViewDuration = false;\r\n        this.overridePageViewDuration = overridePageViewDuration;\r\n        this.appInsights = appInsights;\r\n        this._pageViewPerformanceManager = pageViewPerformanceManager;\r\n        if (core) {\r\n            this._channel = function () { return (core.getTransmissionControls()); };\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    /**\r\n    * Currently supported cases:\r\n    * 1) (default case) track page view called with default parameters, overridePageViewDuration = false. Page view is sent with page view performance when navigation timing data is available.\r\n    *    a. If navigation timing is not supported then page view is sent right away with undefined duration. Page view performance is not sent.\r\n    * 2) overridePageViewDuration = true, custom duration provided. Custom duration is used, page view sends right away.\r\n    * 3) overridePageViewDuration = true, custom duration NOT provided. Page view is sent right away, duration is time spent from page load till now (or undefined if navigation timing is not supported).\r\n    * 4) overridePageViewDuration = false, custom duration is provided. Page view is sent right away with custom duration.\r\n    *\r\n    * In all cases page view performance is sent once (only for the 1st call of trackPageView), or not sent if navigation timing is not supported.\r\n    */\r\n    PageViewManager.prototype.trackPageView = function (pageView, customProperties) {\r\n        var _this = this;\r\n        var name = pageView.name;\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(name) || typeof name !== "string") {\r\n            pageView.name = window.document && window.document.title || "";\r\n        }\r\n        var uri = pageView.uri;\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(uri) || typeof uri !== "string") {\r\n            pageView.uri = window.location && window.location.href || "";\r\n        }\r\n        // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n        // do not provide the duration, set duration to undefined\r\n        // Also this is case 4\r\n        if (!this._pageViewPerformanceManager.isPerformanceTimingSupported()) {\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].NavigationTimingNotSupported, "trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.");\r\n            return;\r\n        }\r\n        var pageViewSent = false;\r\n        var customDuration = undefined;\r\n        // if the performance timing is supported by the browser, calculate the custom duration\r\n        var start = this._pageViewPerformanceManager.getPerformanceTiming().navigationStart;\r\n        customDuration = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].GetDuration(start, +new Date);\r\n        if (!this._pageViewPerformanceManager.shouldCollectDuration(customDuration)) {\r\n            customDuration = undefined;\r\n        }\r\n        // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n        // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n        var duration = undefined;\r\n        if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(customProperties) &&\r\n            !_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(customProperties.duration)) {\r\n            duration = customProperties.duration;\r\n        }\r\n        if (this.overridePageViewDuration || !isNaN(duration)) {\r\n            if (isNaN(duration)) {\r\n                // case 3\r\n                if (!customProperties) {\r\n                    customProperties = {};\r\n                }\r\n                customProperties["duration"] = customDuration;\r\n            }\r\n            // case 2\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            pageViewSent = true;\r\n        }\r\n        // now try to send the page view performance telemetry\r\n        var maxDurationLimit = 60000;\r\n        if (!customProperties) {\r\n            customProperties = {};\r\n        }\r\n        var handle = setInterval((function () {\r\n            try {\r\n                if (_this._pageViewPerformanceManager.isPerformanceTimingDataReady()) {\r\n                    clearInterval(handle);\r\n                    var pageViewPerformance = {\r\n                        name: name,\r\n                        uri: uri\r\n                    };\r\n                    _this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n                    if (!pageViewPerformance.isValid && !pageViewSent) {\r\n                        // If navigation timing gives invalid numbers, then go back to "override page view duration" mode.\r\n                        // That\'s the best value we can get that makes sense.\r\n                        customProperties["duration"] = customDuration;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                    else {\r\n                        if (!pageViewSent) {\r\n                            customProperties["duration"] = pageViewPerformance.durationMs;\r\n                            _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        }\r\n                        if (!_this.pageViewPerformanceSent) {\r\n                            _this.appInsights.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n                            _this.pageViewPerformanceSent = true;\r\n                        }\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n                else if (_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].GetDuration(start, +new Date) > maxDurationLimit) {\r\n                    // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                    // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                    clearInterval(handle);\r\n                    if (!pageViewSent) {\r\n                        customProperties["duration"] = maxDurationLimit;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                _this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].TrackPVFailedCalc, "trackPageView failed on page load calculation: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e) });\r\n            }\r\n        }), 100);\r\n    };\r\n    return PageViewManager;\r\n}());\r\n\r\n//# sourceMappingURL=PageViewManager.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewManager.js?')},"./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js ***!
  \*********************************************************************************************************************************/
/*! exports provided: PageViewPerformanceManager */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageViewPerformanceManager", function() { return PageViewPerformanceManager; });\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n/**\r\n* Class encapsulates sending page view performance telemetry.\r\n*/\r\nvar PageViewPerformanceManager = /** @class */ (function () {\r\n    function PageViewPerformanceManager(core) {\r\n        this.MAX_DURATION_ALLOWED = 3600000; // 1h\r\n        if (core) {\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    PageViewPerformanceManager.prototype.populatePageViewPerformanceEvent = function (pageViewPerformance) {\r\n        pageViewPerformance.isValid = false;\r\n        /*\r\n         * http://www.w3.org/TR/navigation-timing/#processing-model\r\n         *  |-navigationStart\r\n         *  |             |-connectEnd\r\n         *  |             ||-requestStart\r\n         *  |             ||             |-responseStart\r\n         *  |             ||             |              |-responseEnd\r\n         *  |             ||             |              |\r\n         *  |             ||             |              |         |-loadEventEnd\r\n         *  |---network---||---request---|---response---|---dom---|\r\n         *  |--------------------------total----------------------|\r\n         */\r\n        var timing = this.getPerformanceTiming();\r\n        if (timing) {\r\n            var total = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].GetDuration(timing.navigationStart, timing.loadEventEnd);\r\n            var network = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].GetDuration(timing.navigationStart, timing.connectEnd);\r\n            var request = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].GetDuration(timing.requestStart, timing.responseStart);\r\n            var response = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].GetDuration(timing.responseStart, timing.responseEnd);\r\n            var dom = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].GetDuration(timing.responseEnd, timing.loadEventEnd);\r\n            if (total == 0) {\r\n                this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].ErrorPVCalc, "error calculating page view performance.", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (!this.shouldCollectDuration(total, network, request, response, dom)) {\r\n                this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].InvalidDurationValue, "Invalid page load duration value. Browser perf data won\'t be sent.", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                // in this case, don\'t report client performance from this page\r\n                this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].ClientPerformanceMathError, "client performance math error.", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else {\r\n                pageViewPerformance.durationMs = total;\r\n                // // convert to timespans\r\n                pageViewPerformance.perfTotal = pageViewPerformance.duration = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].msToTimeSpan(total);\r\n                pageViewPerformance.networkConnect = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].msToTimeSpan(network);\r\n                pageViewPerformance.sentRequest = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].msToTimeSpan(request);\r\n                pageViewPerformance.receivedResponse = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].msToTimeSpan(response);\r\n                pageViewPerformance.domProcessing = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].msToTimeSpan(dom);\r\n                pageViewPerformance.isValid = true;\r\n            }\r\n        }\r\n    };\r\n    PageViewPerformanceManager.prototype.getPerformanceTiming = function () {\r\n        if (this.isPerformanceTimingSupported()) {\r\n            return window.performance.timing;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n    * Returns true is window performance timing API is supported, false otherwise.\r\n    */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingSupported = function () {\r\n        return typeof window != "undefined" && window.performance && window.performance.timing;\r\n    };\r\n    /**\r\n    * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.\r\n    * Returns true if ready, false otherwise.\r\n    */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingDataReady = function () {\r\n        var timing = window.performance.timing;\r\n        return timing.domainLookupStart > 0\r\n            && timing.navigationStart > 0\r\n            && timing.responseStart > 0\r\n            && timing.requestStart > 0\r\n            && timing.loadEventEnd > 0\r\n            && timing.responseEnd > 0\r\n            && timing.connectEnd > 0\r\n            && timing.domLoading > 0;\r\n    };\r\n    /**\r\n    * This method tells if given durations should be excluded from collection.\r\n    */\r\n    PageViewPerformanceManager.prototype.shouldCollectDuration = function () {\r\n        var durations = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            durations[_i] = arguments[_i];\r\n        }\r\n        // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n        var botAgentNames = [\'googlebot\', \'adsbot-google\', \'apis-google\', \'mediapartners-google\'];\r\n        var userAgent = navigator.userAgent;\r\n        var isGoogleBot = false;\r\n        if (userAgent) {\r\n            for (var i_1 = 0; i_1 < botAgentNames.length; i_1++) {\r\n                isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i_1]) !== -1;\r\n            }\r\n        }\r\n        if (isGoogleBot) {\r\n            // Don\'t report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n            return false;\r\n        }\r\n        else {\r\n            // for other page views, don\'t report if it\'s outside of a reasonable range\r\n            for (var i = 0; i < durations.length; i++) {\r\n                if (durations[i] >= this.MAX_DURATION_ALLOWED) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return PageViewPerformanceManager;\r\n}());\r\n\r\n//# sourceMappingURL=PageViewPerformanceManager.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js?')},"./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageVisitTimeManager.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageVisitTimeManager.js ***!
  \***************************************************************************************************************************/
/*! exports provided: PageVisitTimeManager, PageVisitData */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageVisitTimeManager", function() { return PageVisitTimeManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageVisitData", function() { return PageVisitData; });\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * Used to track page visit durations\r\n */\r\nvar PageVisitTimeManager = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of PageVisitTimeManager\r\n     * @param pageVisitTimeTrackingHandler Delegate that will be called to send telemetry data to AI (when trackPreviousPageVisit is called)\r\n     * @returns {}\r\n     */\r\n    function PageVisitTimeManager(logger, pageVisitTimeTrackingHandler) {\r\n        this.prevPageVisitDataKeyName = "prevPageVisitData";\r\n        this.pageVisitTimeTrackingHandler = pageVisitTimeTrackingHandler;\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n    * Tracks the previous page visit time telemetry (if exists) and starts timing of new page visit time\r\n    * @param currentPageName Name of page to begin timing for visit duration\r\n    * @param currentPageUrl Url of page to begin timing for visit duration\r\n    */\r\n    PageVisitTimeManager.prototype.trackPreviousPageVisit = function (currentPageName, currentPageUrl) {\r\n        try {\r\n            // Restart timer for new page view\r\n            var prevPageVisitTimeData = this.restartPageVisitTimer(currentPageName, currentPageUrl);\r\n            // If there was a page already being timed, track the visit time for it now.\r\n            if (prevPageVisitTimeData) {\r\n                this.pageVisitTimeTrackingHandler(prevPageVisitTimeData.pageName, prevPageVisitTimeData.pageUrl, prevPageVisitTimeData.pageVisitTime);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole("Auto track page visit time failed, metric will not be collected: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e));\r\n        }\r\n    };\r\n    /**\r\n     * Stops timing of current page (if exists) and starts timing for duration of visit to pageName\r\n     * @param pageName Name of page to begin timing visit duration\r\n     * @returns {PageVisitData} Page visit data (including duration) of pageName from last call to start or restart, if exists. Null if not.\r\n     */\r\n    PageVisitTimeManager.prototype.restartPageVisitTimer = function (pageName, pageUrl) {\r\n        try {\r\n            var prevPageVisitData = this.stopPageVisitTimer();\r\n            this.startPageVisitTimer(pageName, pageUrl);\r\n            return prevPageVisitData;\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole("Call to restart failed: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e));\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Starts timing visit duration of pageName\r\n     * @param pageName\r\n     * @returns {}\r\n     */\r\n    PageVisitTimeManager.prototype.startPageVisitTimer = function (pageName, pageUrl) {\r\n        try {\r\n            if (_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].canUseSessionStorage()) {\r\n                if (_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getSessionStorage(this._logger, this.prevPageVisitDataKeyName) != null) {\r\n                    throw new Error("Cannot call startPageVisit consecutively without first calling stopPageVisit");\r\n                }\r\n                var currPageVisitData = new PageVisitData(pageName, pageUrl);\r\n                var currPageVisitDataStr = JSON.stringify(currPageVisitData);\r\n                _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].setSessionStorage(this._logger, this.prevPageVisitDataKeyName, currPageVisitDataStr);\r\n            }\r\n        }\r\n        catch (e) {\r\n            //TODO: Remove this catch in next phase, since if start is called twice in a row the exception needs to be propagated out\r\n            this._logger.warnToConsole("Call to start failed: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e));\r\n        }\r\n    };\r\n    /**\r\n     * Stops timing of current page, if exists.\r\n     * @returns {PageVisitData} Page visit data (including duration) of pageName from call to start, if exists. Null if not.\r\n     */\r\n    PageVisitTimeManager.prototype.stopPageVisitTimer = function () {\r\n        try {\r\n            if (_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].canUseSessionStorage()) {\r\n                // Define end time of page\'s visit\r\n                var pageVisitEndTime = Date.now();\r\n                // Try to retrieve  page name and start time from session storage\r\n                var pageVisitDataJsonStr = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getSessionStorage(this._logger, this.prevPageVisitDataKeyName);\r\n                if (pageVisitDataJsonStr) {\r\n                    // if previous page data exists, set end time of visit\r\n                    var prevPageVisitData = JSON.parse(pageVisitDataJsonStr);\r\n                    prevPageVisitData.pageVisitTime = pageVisitEndTime - prevPageVisitData.pageVisitStartTime;\r\n                    // Remove data from storage since we already used it\r\n                    _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].removeSessionStorage(this._logger, this.prevPageVisitDataKeyName);\r\n                    // Return page visit data\r\n                    return prevPageVisitData;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole("Stop page visit timer failed: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e));\r\n            return null;\r\n        }\r\n    };\r\n    return PageVisitTimeManager;\r\n}());\r\n\r\nvar PageVisitData = /** @class */ (function () {\r\n    function PageVisitData(pageName, pageUrl) {\r\n        this.pageVisitStartTime = Date.now();\r\n        this.pageName = pageName;\r\n        this.pageUrl = pageUrl;\r\n    }\r\n    return PageVisitData;\r\n}());\r\n\r\n//# sourceMappingURL=PageVisitTimeManager.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageVisitTimeManager.js?')},"./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/applicationinsights-analytics-js.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/applicationinsights-analytics-js.js ***!
  \***************************************************************************************************************/
/*! exports provided: ApplicationInsights */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _JavaScriptSDK_ApplicationInsights__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./JavaScriptSDK/ApplicationInsights */ "./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/ApplicationInsights.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ApplicationInsights", function() { return _JavaScriptSDK_ApplicationInsights__WEBPACK_IMPORTED_MODULE_0__["ApplicationInsights"]; });\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n//# sourceMappingURL=applicationinsights-analytics-js.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/applicationinsights-analytics-js.js?')},"./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/EnvelopeCreator.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/EnvelopeCreator.js ***!
  \********************************************************************************************/
/*! exports provided: EnvelopeCreator, DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EnvelopeCreator", function() { return EnvelopeCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DependencyEnvelopeCreator", function() { return DependencyEnvelopeCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventEnvelopeCreator", function() { return EventEnvelopeCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExceptionEnvelopeCreator", function() { return ExceptionEnvelopeCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MetricEnvelopeCreator", function() { return MetricEnvelopeCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageViewEnvelopeCreator", function() { return PageViewEnvelopeCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageViewPerformanceEnvelopeCreator", function() { return PageViewPerformanceEnvelopeCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TraceEnvelopeCreator", function() { return TraceEnvelopeCreator; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n\r\n\r\n\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar baseType = "baseType";\r\nvar baseData = "baseData";\r\nvar EnvelopeCreator = /** @class */ (function () {\r\n    function EnvelopeCreator() {\r\n    }\r\n    EnvelopeCreator.extractProperties = function (data) {\r\n        var customProperties = null;\r\n        for (var key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                var value = data[key];\r\n                if (typeof value !== "number") {\r\n                    if (!customProperties) {\r\n                        customProperties = {};\r\n                    }\r\n                    customProperties[key] = value;\r\n                }\r\n            }\r\n        }\r\n        return customProperties;\r\n    };\r\n    EnvelopeCreator.extractPropsAndMeasurements = function (data, properties, measurements) {\r\n        if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(data)) {\r\n            for (var key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    var value = data[key];\r\n                    if (typeof value === "number") {\r\n                        measurements[key] = value;\r\n                    }\r\n                    else if (typeof value === "string") {\r\n                        properties[key] = value;\r\n                    }\r\n                    else {\r\n                        properties[key] = JSON.stringify(value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\n    EnvelopeCreator.createEnvelope = function (logger, envelopeType, telemetryItem, data) {\r\n        var envelope = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Envelope"](logger, data, envelopeType);\r\n        envelope.iKey = telemetryItem.iKey;\r\n        var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, "");\r\n        envelope.name = envelope.name.replace("{0}", iKeyNoDashes);\r\n        // extract all extensions from ctx\r\n        EnvelopeCreator.extractPartAExtensions(telemetryItem, envelope);\r\n        // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n        if (!telemetryItem.tags) {\r\n            telemetryItem.tags = [];\r\n        }\r\n        return envelope;\r\n    };\r\n    /*\r\n     * Maps Part A data from CS 4.0\r\n     */\r\n    EnvelopeCreator.extractPartAExtensions = function (item, env) {\r\n        // todo: switch to keys from common in this method\r\n        if (!env.tags) {\r\n            env.tags = {};\r\n        }\r\n        if (!item.ext) {\r\n            item.ext = {};\r\n        }\r\n        if (!item.tags) {\r\n            item.tags = [];\r\n        }\r\n        if (item.ext.user) {\r\n            if (item.ext.user.authId) {\r\n                env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].userAuthUserId] = item.ext.user.authId;\r\n            }\r\n            var userId = item.ext.user.id || item.ext.user.localId;\r\n            if (userId) {\r\n                env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].userId] = userId;\r\n            }\r\n        }\r\n        if (item.ext.app) {\r\n            if (item.ext.app.sesId) {\r\n                env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].sessionId] = item.ext.app.sesId;\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.id || item.ext.device.localId) {\r\n                env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].deviceId] = item.ext.device.id || item.ext.device.localId;\r\n            }\r\n            if (item.ext.device.deviceClass) {\r\n                env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].deviceType] = item.ext.device.deviceClass;\r\n            }\r\n            if (item.ext.device.ip) {\r\n                env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].deviceIp] = item.ext.device.ip;\r\n            }\r\n        }\r\n        if (item.ext.web) {\r\n            var web = item.ext.web;\r\n            if (web.browserLang) {\r\n                env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].deviceLanguage] = web.browserLang;\r\n            }\r\n            if (web.browserVer) {\r\n                env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].deviceBrowserVersion] = web.browserVer;\r\n            }\r\n            if (web.browser) {\r\n                env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].deviceBrowser] = web.browser;\r\n            }\r\n            env.data = env.data || {};\r\n            env.data.baseData = env.data.baseData || {};\r\n            env.data.baseData.properties = env.data.baseData.properties || {};\r\n            if (web.domain) {\r\n                env.data.baseData.properties[\'domain\'] = web.domain;\r\n            }\r\n            if (web.isManual) {\r\n                env.data.baseData.properties[\'isManual\'] = web.isManual.toString();\r\n            }\r\n            if (web.screenRes) {\r\n                env.data.baseData.properties[\'screenRes\'] = web.screenRes;\r\n            }\r\n            if (web.userConsent) {\r\n                env.data.baseData.properties[\'userConsent\'] = web.userConsent.toString();\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.model) {\r\n                env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].deviceModel] = item.ext.device.model;\r\n            }\r\n        }\r\n        if (item.ext.os && item.ext.os.name) {\r\n            env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].deviceOS] = item.ext.os.name;\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.deviceType) {\r\n                env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].deviceType] = item.ext.device.deviceType;\r\n            }\r\n        }\r\n        // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n        if (item.ext.trace) {\r\n            if (item.ext.trace.parentID) {\r\n                env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].operationParentId] = item.ext.trace.parentID;\r\n            }\r\n            if (item.ext.trace.name) {\r\n                env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].operationName] = item.ext.trace.name;\r\n            }\r\n            if (item.ext.trace.traceID) {\r\n                env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].operationId] = item.ext.trace.traceID;\r\n            }\r\n        }\r\n        // Sample 4.0 schema\r\n        //  {\r\n        //     "time" : "2018-09-05T22:51:22.4936Z",\r\n        //     "name" : "MetricWithNamespace",\r\n        //     "iKey" : "ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e",\r\n        //     "ext": {  "cloud": {\r\n        //          "role": "WATSON3",\r\n        //          "roleInstance": "CO4AEAP00000260"\r\n        //      },\r\n        //      "device": {}, "correlation": {} },\r\n        //      "tags": [\r\n        //        { "amazon.region" : "east2" },\r\n        //        { "os.expid" : "wp:02df239" }\r\n        //     ]\r\n        //   }\r\n        var tgs = {};\r\n        var _loop_1 = function (i) {\r\n            var tg = item.tags[i];\r\n            // Object.keys returns an array of keys\r\n            Object.keys(tg).forEach(function (key) {\r\n                tgs[key] = tg[key];\r\n            });\r\n            item.tags.splice(i, 1);\r\n        };\r\n        // deals with tags.push({object})\r\n        for (var i = item.tags.length - 1; i >= 0; i--) {\r\n            _loop_1(i);\r\n        }\r\n        // deals with tags[key]=value\r\n        for (var tg in item.tags) {\r\n            tgs[tg] = item.tags[tg];\r\n        }\r\n        env.tags = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, env.tags, tgs);\r\n        if (!env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].internalSdkVersion]) {\r\n            // Append a version in case it is not already set\r\n            env.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].internalSdkVersion] = "javascript:" + EnvelopeCreator.Version;\r\n        }\r\n    };\r\n    EnvelopeCreator.Version = "2.2.1";\r\n    return EnvelopeCreator;\r\n}());\r\n\r\nvar DependencyEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DependencyEnvelopeCreator, _super);\r\n    function DependencyEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DependencyEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].TelemetryEnvelopeInvalid, "telemetryItem.baseData cannot be null.");\r\n        }\r\n        var customMeasurements = telemetryItem.baseData.measurements || {};\r\n        var customProperties = telemetryItem.baseData.properties || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var bd = telemetryItem.baseData;\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(bd)) {\r\n            logger.warnToConsole("Invalid input for dependency data");\r\n            return null;\r\n        }\r\n        var id = bd.id;\r\n        var absoluteUrl = bd.target;\r\n        var command = bd.name;\r\n        var duration = bd.duration;\r\n        var success = bd.success;\r\n        var resultCode = bd.responseCode;\r\n        var requestAPI = bd.type;\r\n        var correlationContext = bd.correlationContext;\r\n        var method = bd.properties && bd.properties[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["HttpMethod"]] ? bd.properties[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["HttpMethod"]] : "GET";\r\n        var baseData = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["RemoteDependencyData"](logger, id, absoluteUrl, command, duration, success, resultCode, method, requestAPI, correlationContext, customProperties, customMeasurements);\r\n        var data = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Data"](_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["RemoteDependencyData"].dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["RemoteDependencyData"].envelopeType, telemetryItem, data);\r\n    };\r\n    DependencyEnvelopeCreator.DependencyEnvelopeCreator = new DependencyEnvelopeCreator();\r\n    return DependencyEnvelopeCreator;\r\n}(EnvelopeCreator));\r\n\r\nvar EventEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](EventEnvelopeCreator, _super);\r\n    function EventEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EventEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].TelemetryEnvelopeInvalid, "telemetryItem.baseData cannot be null.");\r\n        }\r\n        var customProperties = {};\r\n        var customMeasurements = {};\r\n        if (telemetryItem.baseType !== _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Event"].dataType) {\r\n            customProperties[\'baseTypeSource\'] = telemetryItem.baseType; // save the passed in base type as a property\r\n        }\r\n        if (telemetryItem.baseType === _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Event"].dataType) {\r\n            customProperties = telemetryItem.baseData.properties || {};\r\n            customMeasurements = telemetryItem.baseData.measurements || {};\r\n        }\r\n        else {\r\n            if (telemetryItem.baseData) {\r\n                EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.baseData, customProperties, customMeasurements);\r\n            }\r\n        }\r\n        // Exract root level properties from part C telemetryItem.data\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var eventName = telemetryItem.baseData.name;\r\n        var baseData = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Event"](logger, eventName, customProperties, customMeasurements);\r\n        var data = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Data"](_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Event"].dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Event"].envelopeType, telemetryItem, data);\r\n    };\r\n    EventEnvelopeCreator.EventEnvelopeCreator = new EventEnvelopeCreator();\r\n    return EventEnvelopeCreator;\r\n}(EnvelopeCreator));\r\n\r\nvar ExceptionEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ExceptionEnvelopeCreator, _super);\r\n    function ExceptionEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ExceptionEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].TelemetryEnvelopeInvalid, "telemetryItem.baseData cannot be null.");\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var baseData = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Exception"].CreateFromInterface(logger, bd);\r\n        var data = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Data"](_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Exception"].dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Exception"].envelopeType, telemetryItem, data);\r\n    };\r\n    ExceptionEnvelopeCreator.ExceptionEnvelopeCreator = new ExceptionEnvelopeCreator();\r\n    return ExceptionEnvelopeCreator;\r\n}(EnvelopeCreator));\r\n\r\nvar MetricEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MetricEnvelopeCreator, _super);\r\n    function MetricEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MetricEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].TelemetryEnvelopeInvalid, "telemetryItem.baseData cannot be null.");\r\n        }\r\n        var props = telemetryItem.baseData.properties || {};\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        customProperties = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, props, customProperties);\r\n        var name = telemetryItem.baseData.name;\r\n        var average = telemetryItem.baseData.average;\r\n        var sampleCount = telemetryItem.baseData.sampleCount;\r\n        var min = telemetryItem.baseData.min;\r\n        var max = telemetryItem.baseData.max;\r\n        var baseData = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Metric"](logger, name, average, sampleCount, min, max, customProperties);\r\n        var data = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Data"](_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Metric"].dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Metric"].envelopeType, telemetryItem, data);\r\n    };\r\n    MetricEnvelopeCreator.MetricEnvelopeCreator = new MetricEnvelopeCreator();\r\n    return MetricEnvelopeCreator;\r\n}(EnvelopeCreator));\r\n\r\nvar PageViewEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](PageViewEnvelopeCreator, _super);\r\n    function PageViewEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].TelemetryEnvelopeInvalid, "telemetryItem.baseData cannot be null.");\r\n        }\r\n        // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n        var duration = undefined;\r\n        if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(telemetryItem.baseData) &&\r\n            !_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(telemetryItem.baseData.properties) &&\r\n            !_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(telemetryItem.baseData.properties.duration)) {\r\n            duration = telemetryItem.baseData.properties.duration;\r\n            delete telemetryItem.baseData.properties.duration;\r\n        }\r\n        else if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(telemetryItem.data) &&\r\n            !_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(telemetryItem.data["duration"])) {\r\n            duration = telemetryItem.data["duration"];\r\n            delete telemetryItem.data["duration"];\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel\r\n        var currentContextId;\r\n        if (telemetryItem.ext && telemetryItem.ext.trace && telemetryItem.ext.trace.traceID) {\r\n            currentContextId = telemetryItem.ext.trace.traceID;\r\n        }\r\n        var id = bd.id || currentContextId;\r\n        var name = bd.name;\r\n        var url = bd.uri;\r\n        var properties = bd.properties || {};\r\n        var measurements = bd.measurements || {};\r\n        // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(bd.refUri)) {\r\n            properties["refUri"] = bd.refUri;\r\n        }\r\n        // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(bd.pageType)) {\r\n            properties["pageType"] = bd.pageType;\r\n        }\r\n        // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(bd.isLoggedIn)) {\r\n            properties["isLoggedIn"] = bd.isLoggedIn.toString();\r\n        }\r\n        // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(bd.properties)) {\r\n            var pageTags = bd.properties;\r\n            for (var key in pageTags) {\r\n                if (pageTags.hasOwnProperty(key)) {\r\n                    properties[key] = pageTags[key];\r\n                }\r\n            }\r\n        }\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, properties, measurements);\r\n        var baseData = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["PageView"](logger, name, url, duration, properties, measurements, id);\r\n        var data = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Data"](_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["PageView"].dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["PageView"].envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewEnvelopeCreator.PageViewEnvelopeCreator = new PageViewEnvelopeCreator();\r\n    return PageViewEnvelopeCreator;\r\n}(EnvelopeCreator));\r\n\r\nvar PageViewPerformanceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](PageViewPerformanceEnvelopeCreator, _super);\r\n    function PageViewPerformanceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewPerformanceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].TelemetryEnvelopeInvalid, "telemetryItem.baseData cannot be null.");\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var name = bd.name;\r\n        var url = bd.uri || bd.url;\r\n        var properties = bd.properties || {};\r\n        var measurements = bd.measurements || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, properties, measurements);\r\n        var baseData = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["PageViewPerformance"](logger, name, url, undefined, properties, measurements, bd);\r\n        var data = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Data"](_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["PageViewPerformance"].dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["PageViewPerformance"].envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator = new PageViewPerformanceEnvelopeCreator();\r\n    return PageViewPerformanceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\n\r\nvar TraceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TraceEnvelopeCreator, _super);\r\n    function TraceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TraceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].TelemetryEnvelopeInvalid, "telemetryItem.baseData cannot be null.");\r\n        }\r\n        var message = telemetryItem.baseData.message;\r\n        var severityLevel = telemetryItem.baseData.severityLevel;\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        var props = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, customProperties, telemetryItem.baseData.properties);\r\n        var baseData = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Trace"](logger, message, severityLevel, props);\r\n        var data = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Data"](_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Trace"].dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Trace"].envelopeType, telemetryItem, data);\r\n    };\r\n    TraceEnvelopeCreator.TraceEnvelopeCreator = new TraceEnvelopeCreator();\r\n    return TraceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\n\r\n//# sourceMappingURL=EnvelopeCreator.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/EnvelopeCreator.js?')},"./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Offline.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Offline.js ***!
  \************************************************************************************/
/*! exports provided: OfflineListener, Offline */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OfflineListener", function() { return OfflineListener; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Offline", function() { return Offline; });\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n\r\n/**\r\n * @description Monitors browser for offline events\r\n * @export default - Offline: Static instance of OfflineListener\r\n * @class OfflineListener\r\n */\r\nvar OfflineListener = /** @class */ (function () {\r\n    function OfflineListener() {\r\n        this._onlineStatus = true;\r\n        try {\r\n            if (typeof window === \'undefined\') {\r\n                this.isListening = false;\r\n            }\r\n            else if (window && window.addEventListener) {\r\n                window.addEventListener(\'online\', this._setOnline.bind(this), false);\r\n                window.addEventListener(\'offline\', this._setOffline.bind(this), false);\r\n                this.isListening = true;\r\n            }\r\n            else if (document && document.body) {\r\n                document.body.ononline = this._setOnline.bind(this);\r\n                document.body.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else if (document) {\r\n                document.ononline = this._setOnline.bind(this);\r\n                document.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else {\r\n                // Could not find a place to add event listener\r\n                this.isListening = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            //this makes react-native less angry\r\n            this.isListening = false;\r\n        }\r\n    }\r\n    OfflineListener.prototype._setOnline = function () {\r\n        this._onlineStatus = true;\r\n    };\r\n    OfflineListener.prototype._setOffline = function () {\r\n        this._onlineStatus = false;\r\n    };\r\n    OfflineListener.prototype.isOnline = function () {\r\n        if (this.isListening) {\r\n            return this._onlineStatus;\r\n        }\r\n        else if (navigator && !_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].isNullOrUndefined(navigator.onLine)) {\r\n            return navigator.onLine;\r\n        }\r\n        else {\r\n            // Cannot determine online status - report as online\r\n            return true;\r\n        }\r\n    };\r\n    OfflineListener.prototype.isOffline = function () {\r\n        return !this.isOnline();\r\n    };\r\n    OfflineListener.Offline = new OfflineListener;\r\n    return OfflineListener;\r\n}());\r\n\r\nvar Offline = OfflineListener.Offline;\r\n//# sourceMappingURL=Offline.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Offline.js?')},"./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/SendBuffer.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/SendBuffer.js ***!
  \***************************************************************************************/
/*! exports provided: ArraySendBuffer, SessionStorageSendBuffer */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArraySendBuffer", function() { return ArraySendBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SessionStorageSendBuffer", function() { return SessionStorageSendBuffer; });\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n\r\n\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function () {\r\n    function ArraySendBuffer(config) {\r\n        this._config = config;\r\n        this._buffer = [];\r\n    }\r\n    ArraySendBuffer.prototype.enqueue = function (payload) {\r\n        this._buffer.push(payload);\r\n    };\r\n    ArraySendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    ArraySendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n    };\r\n    ArraySendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    ArraySendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join("\\n") :\r\n                "[" + payload.join(",") + "]";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    ArraySendBuffer.prototype.markAsSent = function (payload) {\r\n        this.clear();\r\n    };\r\n    ArraySendBuffer.prototype.clearSent = function (payload) {\r\n        // not supported\r\n    };\r\n    return ArraySendBuffer;\r\n}());\r\n\r\n/*\r\n * Session storege buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function () {\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        this._bufferFullMessageSent = false;\r\n        this._logger = logger;\r\n        this._config = config;\r\n        var bufferItems = this.getBuffer(SessionStorageSendBuffer.BUFFER_KEY);\r\n        var notDeliveredItems = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        this._buffer = bufferItems.concat(notDeliveredItems);\r\n        // If the buffer has too many items, drop items from the end.\r\n        if (this._buffer.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            this._buffer.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n        }\r\n        // update DataLossAnalyzer with the number of recovered items\r\n        // Uncomment if you want to use DataLossanalyzer\r\n        // DataLossAnalyzer.itemsRestoredFromSessionBuffer = this._buffer.length;\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    }\r\n    SessionStorageSendBuffer.prototype.enqueue = function (payload) {\r\n        if (this._buffer.length >= SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            // sent internal log only once per page view\r\n            if (!this._bufferFullMessageSent) {\r\n                this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].SessionStorageBufferFull, "Maximum buffer size reached: " + this._buffer.length, true);\r\n                this._bufferFullMessageSent = true;\r\n            }\r\n            return;\r\n        }\r\n        this._buffer.push(payload);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    };\r\n    SessionStorageSendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    SessionStorageSendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this._bufferFullMessageSent = false;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    SessionStorageSendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join("\\n") :\r\n                "[" + payload.join(",") + "]";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    SessionStorageSendBuffer.prototype.markAsSent = function (payload) {\r\n        this._buffer = this.removePayloadsFromBuffer(payload, this._buffer);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        if (sentElements instanceof Array && payload instanceof Array) {\r\n            sentElements = sentElements.concat(payload);\r\n            if (sentElements.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                // We send telemetry normally. If the SENT_BUFFER is too big we don\'t add new elements\r\n                // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].SessionStorageBufferFull, "Sent buffer reached its maximum size: " + sentElements.length, true);\r\n                sentElements.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n            }\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.prototype.clearSent = function (payload) {\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        sentElements = this.removePayloadsFromBuffer(payload, sentElements);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n    };\r\n    SessionStorageSendBuffer.prototype.removePayloadsFromBuffer = function (payloads, buffer) {\r\n        var remaining = [];\r\n        for (var i in buffer) {\r\n            var contains = false;\r\n            for (var j in payloads) {\r\n                if (payloads[j] === buffer[i]) {\r\n                    contains = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!contains) {\r\n                remaining.push(buffer[i]);\r\n            }\r\n        }\r\n        ;\r\n        return remaining;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getBuffer = function (key) {\r\n        var prefixedKey = key;\r\n        try {\r\n            prefixedKey = this._config.namePrefix && this._config.namePrefix() ? this._config.namePrefix() + "_" + prefixedKey : prefixedKey;\r\n            var bufferJson = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getSessionStorage(this._logger, prefixedKey);\r\n            if (bufferJson) {\r\n                var buffer = JSON.parse(bufferJson);\r\n                if (buffer) {\r\n                    return buffer;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedToRestoreStorageBuffer, " storage key: " + prefixedKey + ", " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e) });\r\n        }\r\n        return [];\r\n    };\r\n    SessionStorageSendBuffer.prototype.setBuffer = function (key, buffer) {\r\n        var prefixedKey = key;\r\n        try {\r\n            prefixedKey = this._config.namePrefix && this._config.namePrefix() ? this._config.namePrefix() + "_" + prefixedKey : prefixedKey;\r\n            var bufferJson = JSON.stringify(buffer);\r\n            _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].setSessionStorage(this._logger, prefixedKey, bufferJson);\r\n        }\r\n        catch (e) {\r\n            // if there was an error, clear the buffer\r\n            // telemetry is stored in the _buffer array so we won\'t loose any items\r\n            _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].setSessionStorage(this._logger, prefixedKey, JSON.stringify([]));\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedToSetStorageBuffer, " storage key: " + prefixedKey + ", " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getExceptionName(e) + ". Buffer cleared", { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e) });\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.BUFFER_KEY = "AI_buffer";\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = "AI_sentBuffer";\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped.\r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}());\r\n\r\n//# sourceMappingURL=SendBuffer.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/SendBuffer.js?')},"./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Sender.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Sender.js ***!
  \***********************************************************************************/
/*! exports provided: Sender */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sender", function() { return Sender; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _SendBuffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SendBuffer */ "./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/SendBuffer.js");\n/* harmony import */ var _EnvelopeCreator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EnvelopeCreator */ "./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/EnvelopeCreator.js");\n/* harmony import */ var _Serializer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Serializer */ "./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Serializer.js");\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n/* harmony import */ var _Offline__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Offline */ "./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Offline.js");\n/* harmony import */ var _TelemetryProcessors_Sample__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./TelemetryProcessors/Sample */ "./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/Sample.js");\n\r\n\r\n\r\n // todo move to channel\r\n\r\n\r\n\r\n\r\nvar Sender = /** @class */ (function () {\r\n    function Sender() {\r\n        this.priority = 1001;\r\n        this.identifier = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["BreezeChannelIdentifier"];\r\n        /**\r\n         * Whether XMLHttpRequest object is supported. Older version of IE (8,9) do not support it.\r\n         */\r\n        this._XMLHttpRequestSupported = false;\r\n    }\r\n    Sender.prototype.pause = function () {\r\n        throw new Error("Method not implemented.");\r\n    };\r\n    Sender.prototype.resume = function () {\r\n        throw new Error("Method not implemented.");\r\n    };\r\n    Sender.prototype.flush = function () {\r\n        try {\r\n            this.triggerSend();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].FlushFailed, "flush failed, telemetry will not be collected: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].dump(e) });\r\n        }\r\n    };\r\n    Sender.prototype.onunloadFlush = function () {\r\n        if ((this._config.onunloadDisableBeacon() === false || this._config.isBeaconApiDisabled() === false) && _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].IsBeaconApiSupported()) {\r\n            try {\r\n                this.triggerSend(true, this._beaconSender);\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].FailedToSendQueuedTelemetry, "failed to flush with beacon sender on page unload, telemetry will not be collected: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].dump(e) });\r\n            }\r\n        }\r\n        else {\r\n            this.flush();\r\n        }\r\n    };\r\n    Sender.prototype.teardown = function () {\r\n        throw new Error("Method not implemented.");\r\n    };\r\n    Sender.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        this._logger = core.logger;\r\n        this._serializer = new _Serializer__WEBPACK_IMPORTED_MODULE_3__["Serializer"](core.logger);\r\n        this._consecutiveErrors = 0;\r\n        this._retryAt = null;\r\n        this._lastSend = 0;\r\n        this._sender = null;\r\n        var defaultConfig = Sender._getDefaultAppInsightsChannelConfig();\r\n        this._config = Sender._getEmptyAppInsightsChannelConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._config[field] = function () { return _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["ConfigurationManager"].getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._buffer = (this._config.enableSessionStorageBuffer && _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].canUseSessionStorage())\r\n            ? new _SendBuffer__WEBPACK_IMPORTED_MODULE_1__["SessionStorageSendBuffer"](this._logger, this._config) : new _SendBuffer__WEBPACK_IMPORTED_MODULE_1__["ArraySendBuffer"](this._config);\r\n        this._sample = new _TelemetryProcessors_Sample__WEBPACK_IMPORTED_MODULE_7__["Sample"](this._config.samplingPercentage(), this._logger);\r\n        if (!this._config.isBeaconApiDisabled() && _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].IsBeaconApiSupported()) {\r\n            this._sender = this._beaconSender;\r\n        }\r\n        else {\r\n            if (typeof XMLHttpRequest != "undefined") {\r\n                var testXhr = new XMLHttpRequest();\r\n                if ("withCredentials" in testXhr) {\r\n                    this._sender = this._xhrSender;\r\n                    this._XMLHttpRequestSupported = true;\r\n                }\r\n                else if (typeof XDomainRequest !== "undefined") {\r\n                    this._sender = this._xdrSender; //IE 8 and 9\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Sender.prototype.processTelemetry = function (telemetryItem) {\r\n        var _this = this;\r\n        try {\r\n            // if master off switch is set, don\'t send any data\r\n            if (this._config.disableTelemetry()) {\r\n                // Do not send/save data\r\n                return;\r\n            }\r\n            // validate input\r\n            if (!telemetryItem) {\r\n                this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].CannotSendEmptyTelemetry, "Cannot send empty telemetry");\r\n                return;\r\n            }\r\n            // validate event\r\n            if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n                this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].InvalidEvent, "Cannot send telemetry without baseData and baseType");\r\n                return;\r\n            }\r\n            if (!telemetryItem.baseType) {\r\n                // Default\r\n                telemetryItem.baseType = "EventData";\r\n            }\r\n            // ensure a sender was constructed\r\n            if (!this._sender) {\r\n                this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].SenderNotInitialized, "Sender was not initialized");\r\n                return;\r\n            }\r\n            // check if this item should be sampled in, else add sampleRate tag\r\n            if (!this._isSampledIn(telemetryItem)) {\r\n                // Item is sampled out, do not send it\r\n                this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].TelemetrySampledAndNotSent, "Telemetry item was sampled out and not sent", { SampleRate: this._sample.sampleRate });\r\n                return;\r\n            }\r\n            else {\r\n                telemetryItem.tags = telemetryItem.tags || {};\r\n                telemetryItem.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["SampleRate"]] = this._sample.sampleRate;\r\n            }\r\n            // construct an envelope that Application Insights endpoint can understand\r\n            var aiEnvelope_1 = Sender.constructEnvelope(telemetryItem, this._config.instrumentationKey(), this._logger);\r\n            if (!aiEnvelope_1) {\r\n                this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].CreateEnvelopeError, "Unable to create an AppInsights envelope");\r\n                return;\r\n            }\r\n            var doNotSendItem_1 = false;\r\n            // this is for running in legacy mode, where customer may already have a custom initializer present\r\n            if (telemetryItem.tags && telemetryItem.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["ProcessLegacy"]]) {\r\n                telemetryItem.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["ProcessLegacy"]].forEach(function (callBack) {\r\n                    try {\r\n                        if (callBack && callBack(aiEnvelope_1) === false) {\r\n                            doNotSendItem_1 = true;\r\n                            _this._logger.warnToConsole("Telemetry processor check returns false");\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // log error but dont stop executing rest of the telemetry initializers\r\n                        // doNotSendItem = true;\r\n                        _this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].TelemetryInitializerFailed, "One of telemetry initializers failed, telemetry item will not be sent: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].dump(e) }, true);\r\n                    }\r\n                });\r\n                delete telemetryItem.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["ProcessLegacy"]];\r\n            }\r\n            if (doNotSendItem_1) {\r\n                return; // do not send, no need to execute next plugin\r\n            }\r\n            // check if the incoming payload is too large, truncate if necessary\r\n            var payload = this._serializer.serialize(aiEnvelope_1);\r\n            // flush if we would exceed the max-size limit by adding this item\r\n            var bufferPayload = this._buffer.getItems();\r\n            var batch = this._buffer.batchPayloads(bufferPayload);\r\n            if (batch && (batch.length + payload.length > this._config.maxBatchSizeInBytes())) {\r\n                this.triggerSend();\r\n            }\r\n            // enqueue the payload\r\n            this._buffer.enqueue(payload);\r\n            // ensure an invocation timeout is set\r\n            this._setupTimer();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].FailedAddingTelemetryToBuffer, "Failed adding telemetry to the sender\'s buffer, some telemetry will be lost: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].dump(e) });\r\n        }\r\n        // hand off the telemetry item to the next plugin\r\n        if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["CoreUtils"].isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(telemetryItem);\r\n        }\r\n    };\r\n    Sender.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    /**\r\n     * xhr state changes\r\n     */\r\n    Sender.prototype._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n        if (xhr.readyState === 4) {\r\n            var response = null;\r\n            if (!this._appId) {\r\n                response = this._parseResponse(xhr.responseText || xhr.response);\r\n                if (response && response.appId) {\r\n                    this._appId = response.appId;\r\n                }\r\n            }\r\n            if ((xhr.status < 200 || xhr.status >= 300) && xhr.status !== 0) {\r\n                if (!this._config.isRetryDisabled() && this._isRetriable(xhr.status)) {\r\n                    this._resendPayload(payload);\r\n                    this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].TransmissionFailed, ". " +\r\n                        "Response code " + xhr.status + ". Will retry to send " + payload.length + " items.");\r\n                }\r\n                else {\r\n                    this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                }\r\n            }\r\n            else if (_Offline__WEBPACK_IMPORTED_MODULE_6__["Offline"].isOffline()) {\r\n                // Note: Don\'t check for staus == 0, since adblock gives this code\r\n                if (!this._config.isRetryDisabled()) {\r\n                    var offlineBackOffMultiplier = 10; // arbritrary number\r\n                    this._resendPayload(payload, offlineBackOffMultiplier);\r\n                    this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].TransmissionFailed, ". Offline - Response Code: " + xhr.status + ". Offline status: " + _Offline__WEBPACK_IMPORTED_MODULE_6__["Offline"].isOffline() + ". Will retry to send " + payload.length + " items.");\r\n                }\r\n            }\r\n            else {\r\n                if (xhr.status === 206) {\r\n                    if (!response) {\r\n                        response = this._parseResponse(xhr.responseText || xhr.response);\r\n                    }\r\n                    if (response && !this._config.isRetryDisabled()) {\r\n                        this._onPartialSuccess(payload, response);\r\n                    }\r\n                    else {\r\n                        this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                    }\r\n                }\r\n                else {\r\n                    this._consecutiveErrors = 0;\r\n                    this._onSuccess(payload, countOfItemsInPayload);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Immediately send buffered data\r\n     * @param async {boolean} - Indicates if the events should be sent asynchronously\r\n     * @param forcedSender {SenderFunction} - Indicates the forcedSender, undefined if not passed\r\n     */\r\n    Sender.prototype.triggerSend = function (async, forcedSender) {\r\n        if (async === void 0) { async = true; }\r\n        try {\r\n            // Send data only if disableTelemetry is false\r\n            if (!this._config.disableTelemetry()) {\r\n                if (this._buffer.count() > 0) {\r\n                    var payload = this._buffer.getItems();\r\n                    // invoke send\r\n                    if (forcedSender) {\r\n                        forcedSender.call(this, payload, async);\r\n                    }\r\n                    else {\r\n                        this._sender(payload, async);\r\n                    }\r\n                }\r\n                // update lastSend time to enable throttling\r\n                this._lastSend = +new Date;\r\n            }\r\n            else {\r\n                this._buffer.clear();\r\n            }\r\n            clearTimeout(this._timeoutHandle);\r\n            this._timeoutHandle = null;\r\n            this._retryAt = null;\r\n        }\r\n        catch (e) {\r\n            /* Ignore this error for IE under v10 */\r\n            if (!_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].getIEVersion() || _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].getIEVersion() > 9) {\r\n                this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].TransmissionFailed, "Telemetry transmission failed, some telemetry will be lost: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].dump(e) });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * error handler\r\n     */\r\n    Sender.prototype._onError = function (payload, message, event) {\r\n        this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].OnError, "Failed to send telemetry.", { message: message });\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * partial success handler\r\n     */\r\n    Sender.prototype._onPartialSuccess = function (payload, results) {\r\n        var failed = [];\r\n        var retry = [];\r\n        // Iterate through the reversed array of errors so that splicing doesn\'t have invalid indexes after the first item.\r\n        var errors = results.errors.reverse();\r\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n            var error = errors_1[_i];\r\n            var extracted = payload.splice(error.index, 1)[0];\r\n            if (this._isRetriable(error.statusCode)) {\r\n                retry.push(extracted);\r\n            }\r\n            else {\r\n                // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                failed.push(extracted);\r\n            }\r\n        }\r\n        if (payload.length > 0) {\r\n            this._onSuccess(payload, results.itemsAccepted);\r\n        }\r\n        if (failed.length > 0) {\r\n            this._onError(failed, this._formatErrorMessageXhr(null, [\'partial success\', results.itemsAccepted, \'of\', results.itemsReceived].join(\' \')));\r\n        }\r\n        if (retry.length > 0) {\r\n            this._resendPayload(retry);\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].TransmissionFailed, "Partial success. " +\r\n                "Delivered: " + payload.length + ", Failed: " + failed.length +\r\n                ". Will retry to send " + retry.length + " our of " + results.itemsReceived + " items");\r\n        }\r\n    };\r\n    /**\r\n     * success handler\r\n     */\r\n    Sender.prototype._onSuccess = function (payload, countOfItemsInPayload) {\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * xdr state changes\r\n     */\r\n    Sender.prototype._xdrOnLoad = function (xdr, payload) {\r\n        if (xdr && (xdr.responseText + "" === "200" || xdr.responseText === "")) {\r\n            this._consecutiveErrors = 0;\r\n            this._onSuccess(payload, 0);\r\n        }\r\n        else {\r\n            var results = this._parseResponse(xdr.responseText);\r\n            if (results && results.itemsReceived && results.itemsReceived > results.itemsAccepted\r\n                && !this._config.isRetryDisabled()) {\r\n                this._onPartialSuccess(payload, results);\r\n            }\r\n            else {\r\n                this._onError(payload, this._formatErrorMessageXdr(xdr));\r\n            }\r\n        }\r\n    };\r\n    Sender.constructEnvelope = function (orig, iKey, logger) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["CoreUtils"].isNullOrUndefined(iKey)) {\r\n            envelope = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, orig, { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        switch (envelope.baseType) {\r\n            case _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Event"].dataType:\r\n                return _EnvelopeCreator__WEBPACK_IMPORTED_MODULE_2__["EventEnvelopeCreator"].EventEnvelopeCreator.Create(logger, envelope);\r\n            case _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Trace"].dataType:\r\n                return _EnvelopeCreator__WEBPACK_IMPORTED_MODULE_2__["TraceEnvelopeCreator"].TraceEnvelopeCreator.Create(logger, envelope);\r\n            case _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["PageView"].dataType:\r\n                return _EnvelopeCreator__WEBPACK_IMPORTED_MODULE_2__["PageViewEnvelopeCreator"].PageViewEnvelopeCreator.Create(logger, envelope);\r\n            case _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["PageViewPerformance"].dataType:\r\n                return _EnvelopeCreator__WEBPACK_IMPORTED_MODULE_2__["PageViewPerformanceEnvelopeCreator"].PageViewPerformanceEnvelopeCreator.Create(logger, envelope);\r\n            case _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Exception"].dataType:\r\n                return _EnvelopeCreator__WEBPACK_IMPORTED_MODULE_2__["ExceptionEnvelopeCreator"].ExceptionEnvelopeCreator.Create(logger, envelope);\r\n            case _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Metric"].dataType:\r\n                return _EnvelopeCreator__WEBPACK_IMPORTED_MODULE_2__["MetricEnvelopeCreator"].MetricEnvelopeCreator.Create(logger, envelope);\r\n            case _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["RemoteDependencyData"].dataType:\r\n                return _EnvelopeCreator__WEBPACK_IMPORTED_MODULE_2__["DependencyEnvelopeCreator"].DependencyEnvelopeCreator.Create(logger, envelope);\r\n            default:\r\n                return _EnvelopeCreator__WEBPACK_IMPORTED_MODULE_2__["EventEnvelopeCreator"].EventEnvelopeCreator.Create(logger, envelope);\r\n        }\r\n    };\r\n    Sender._getDefaultAppInsightsChannelConfig = function () {\r\n        // set default values\r\n        return {\r\n            endpointUrl: function () { return "https://dc.services.visualstudio.com/v2/track"; },\r\n            emitLineDelimitedJson: function () { return false; },\r\n            maxBatchInterval: function () { return 15000; },\r\n            maxBatchSizeInBytes: function () { return 102400; },\r\n            disableTelemetry: function () { return false; },\r\n            enableSessionStorageBuffer: function () { return true; },\r\n            isRetryDisabled: function () { return false; },\r\n            isBeaconApiDisabled: function () { return true; },\r\n            onunloadDisableBeacon: function () { return false; },\r\n            instrumentationKey: function () { return undefined; },\r\n            namePrefix: function () { return undefined; },\r\n            samplingPercentage: function () { return 100; }\r\n        };\r\n    };\r\n    Sender._getEmptyAppInsightsChannelConfig = function () {\r\n        return {\r\n            endpointUrl: undefined,\r\n            emitLineDelimitedJson: undefined,\r\n            maxBatchInterval: undefined,\r\n            maxBatchSizeInBytes: undefined,\r\n            disableTelemetry: undefined,\r\n            enableSessionStorageBuffer: undefined,\r\n            isRetryDisabled: undefined,\r\n            isBeaconApiDisabled: undefined,\r\n            onunloadDisableBeacon: undefined,\r\n            instrumentationKey: undefined,\r\n            namePrefix: undefined,\r\n            samplingPercentage: undefined\r\n        };\r\n    };\r\n    Sender.prototype._isSampledIn = function (envelope) {\r\n        return this._sample.isSampledIn(envelope);\r\n    };\r\n    /**\r\n     * Send Beacon API request\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - not used\r\n     * Note: Beacon API does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._beaconSender = function (payload, isAsync) {\r\n        var url = this._config.endpointUrl();\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n        // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n        var plainTextBatch = new Blob([batch], { type: \'text/plain;charset=UTF-8\' });\r\n        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n        var queued = navigator.sendBeacon(url, plainTextBatch);\r\n        if (queued) {\r\n            this._buffer.markAsSent(payload);\r\n            // no response from beaconSender, clear buffer\r\n            this._onSuccess(payload, payload.length);\r\n        }\r\n        else {\r\n            this._xhrSender(payload, true);\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].TransmissionFailed, ". " + "Failed to send telemetry with Beacon API, retried with xhrSender.");\r\n        }\r\n    };\r\n    /**\r\n     * Send XMLHttpRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     */\r\n    Sender.prototype._xhrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xhr = new XMLHttpRequest();\r\n        xhr[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["DisabledPropertyName"]] = true;\r\n        xhr.open("POST", this._config.endpointUrl(), isAsync);\r\n        xhr.setRequestHeader("Content-type", "application/json");\r\n        // append Sdk-Context request header only in case of breeze endpoint\r\n        if (_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].isInternalApplicationInsightsEndpoint(this._config.endpointUrl())) {\r\n            xhr.setRequestHeader(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["RequestHeaders"].sdkContextHeader, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["RequestHeaders"].sdkContextHeaderAppIdRequest);\r\n        }\r\n        xhr.onreadystatechange = function () { return _this._xhrReadyStateChange(xhr, payload, payload.length); };\r\n        xhr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXhr(xhr), event); };\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xhr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    /**\r\n     * Parses the response from the backend.\r\n     * @param response - XMLHttpRequest or XDomainRequest response\r\n     */\r\n    Sender.prototype._parseResponse = function (response) {\r\n        try {\r\n            if (response && response !== "") {\r\n                var result = JSON.parse(response);\r\n                if (result && result.itemsReceived && result.itemsReceived >= result.itemsAccepted &&\r\n                    result.itemsReceived - result.itemsAccepted == result.errors.length) {\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].InvalidBackendResponse, "Cannot parse the response. " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_4__["Util"].getExceptionName(e), {\r\n                response: response\r\n            });\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n     * @param payload\r\n     */\r\n    Sender.prototype._resendPayload = function (payload, linearFactor) {\r\n        if (linearFactor === void 0) { linearFactor = 1; }\r\n        if (!payload || payload.length === 0) {\r\n            return;\r\n        }\r\n        this._buffer.clearSent(payload);\r\n        this._consecutiveErrors++;\r\n        for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n            var item = payload_1[_i];\r\n            this._buffer.enqueue(item);\r\n        }\r\n        // setup timer\r\n        this._setRetryTime(linearFactor);\r\n        this._setupTimer();\r\n    };\r\n    /** Calculates the time to wait before retrying in case of an error based on\r\n     * http://en.wikipedia.org/wiki/Exponential_backoff\r\n     */\r\n    Sender.prototype._setRetryTime = function (linearFactor) {\r\n        var SlotDelayInSeconds = 10;\r\n        var delayInSeconds;\r\n        if (this._consecutiveErrors <= 1) {\r\n            delayInSeconds = SlotDelayInSeconds;\r\n        }\r\n        else {\r\n            var backOffSlot = (Math.pow(2, this._consecutiveErrors) - 1) / 2;\r\n            // tslint:disable-next-line:insecure-random\r\n            var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n            backOffDelay = linearFactor * backOffDelay;\r\n            delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n        }\r\n        // TODO: Log the backoff time like the C# version does.\r\n        var retryAfterTimeSpan = Date.now() + (delayInSeconds * 1000);\r\n        // TODO: Log the retry at time like the C# version does.\r\n        this._retryAt = retryAfterTimeSpan;\r\n    };\r\n    /**\r\n     * Sets up the timer which triggers actually sending the data.\r\n     */\r\n    Sender.prototype._setupTimer = function () {\r\n        var _this = this;\r\n        if (!this._timeoutHandle) {\r\n            var retryInterval = this._retryAt ? Math.max(0, this._retryAt - Date.now()) : 0;\r\n            var timerValue = Math.max(this._config.maxBatchInterval(), retryInterval);\r\n            this._timeoutHandle = setTimeout(function () {\r\n                _this.triggerSend();\r\n            }, timerValue);\r\n        }\r\n    };\r\n    /**\r\n     * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n     * @param statusCode\r\n     */\r\n    Sender.prototype._isRetriable = function (statusCode) {\r\n        return statusCode == 408 // Timeout\r\n            || statusCode == 429 // Too many requests.\r\n            || statusCode == 500 // Internal server error.\r\n            || statusCode == 503; // Service unavailable.\r\n    };\r\n    Sender.prototype._formatErrorMessageXhr = function (xhr, message) {\r\n        if (xhr) {\r\n            return "XMLHttpRequest,Status:" + xhr.status + ",Response:" + xhr.responseText || false || false;\r\n        }\r\n        return message;\r\n    };\r\n    /**\r\n     * Send XDomainRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     *\r\n     * Note: XDomainRequest does not support sync requests. This \'isAsync\' parameter is added\r\n     * to maintain consistency with the xhrSender\'s contract\r\n     * Note: XDomainRequest does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._xdrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xdr = new XDomainRequest();\r\n        xdr.onload = function () { return _this._xdrOnLoad(xdr, payload); };\r\n        xdr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXdr(xdr), event); };\r\n        // XDomainRequest requires the same protocol as the hosting page.\r\n        // If the protocol doesn\'t match, we can\'t send the telemetry :(.\r\n        var hostingProtocol = window.location && window.location.protocol;\r\n        if (this._config.endpointUrl().lastIndexOf(hostingProtocol, 0) !== 0) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_5__["_InternalMessageId"].TransmissionFailed, ". " +\r\n                "Cannot send XDomain request. The endpoint URL protocol doesn\'t match the hosting page protocol.");\r\n            this._buffer.clear();\r\n            return;\r\n        }\r\n        var endpointUrl = this._config.endpointUrl().replace(/^(https?:)/, "");\r\n        xdr.open(\'POST\', endpointUrl);\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xdr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    Sender.prototype._formatErrorMessageXdr = function (xdr, message) {\r\n        if (xdr) {\r\n            return "XDomainRequest,Response:" + xdr.responseText || false;\r\n        }\r\n        return message;\r\n    };\r\n    return Sender;\r\n}());\r\n\r\n//# sourceMappingURL=Sender.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Sender.js?')},"./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Serializer.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Serializer.js ***!
  \***************************************************************************************/
/*! exports provided: Serializer */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Serializer", function() { return Serializer; });\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n\r\n\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n     * Serializes the current object to a JSON string.\r\n     */\r\n    Serializer.prototype.serialize = function (input) {\r\n        var output = this._serializeObject(input, "root");\r\n        return JSON.stringify(output);\r\n    };\r\n    Serializer.prototype._serializeObject = function (source, name) {\r\n        var circularReferenceCheck = "__aiCircularRefCheck";\r\n        var output = {};\r\n        if (!source) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].CannotSerializeObject, "cannot serialize object because it is null or undefined", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (source[circularReferenceCheck]) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].CircularReferenceDetected, "Circular reference detected while serializing object", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (!source.aiDataContract) {\r\n            // special case for measurements/properties/tags\r\n            if (name === "measurements") {\r\n                output = this._serializeStringMap(source, "number", name);\r\n            }\r\n            else if (name === "properties") {\r\n                output = this._serializeStringMap(source, "string", name);\r\n            }\r\n            else if (name === "tags") {\r\n                output = this._serializeStringMap(source, "string", name);\r\n            }\r\n            else if (_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].isArray(source)) {\r\n                output = this._serializeArray(source, name);\r\n            }\r\n            else {\r\n                this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].CannotSerializeObjectNonSerializable, "Attempting to serialize an object which does not implement ISerializable", { name: name }, true);\r\n                try {\r\n                    // verify that the object can be stringified\r\n                    JSON.stringify(source);\r\n                    output = source;\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].CannotSerializeObject, (e && typeof e.toString === \'function\') ? e.toString() : "Error serializing object", null, true);\r\n                }\r\n            }\r\n            return output;\r\n        }\r\n        source[circularReferenceCheck] = true;\r\n        for (var field in source.aiDataContract) {\r\n            var contract = source.aiDataContract[field];\r\n            var isRequired = (typeof contract === "function") ? (contract() & _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["FieldType"].Required) : (contract & _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["FieldType"].Required);\r\n            var isHidden = (typeof contract === "function") ? (contract() & _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["FieldType"].Hidden) : (contract & _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["FieldType"].Hidden);\r\n            var isArray = contract & _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["FieldType"].Array;\r\n            var isPresent = source[field] !== undefined;\r\n            var isObject = typeof source[field] === "object" && source[field] !== null;\r\n            if (isRequired && !isPresent && !isArray) {\r\n                this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].MissingRequiredFieldSpecification, "Missing required field specification. The field is required but not present on source", { field: field, name: name });\r\n                // If not in debug mode, continue and hope the error is permissible\r\n                continue;\r\n            }\r\n            if (isHidden) {\r\n                // Don\'t serialize hidden fields\r\n                continue;\r\n            }\r\n            var value;\r\n            if (isObject) {\r\n                if (isArray) {\r\n                    // special case; resurse on each object in the source array\r\n                    value = this._serializeArray(source[field], field);\r\n                }\r\n                else {\r\n                    // recurse on the source object in this field\r\n                    value = this._serializeObject(source[field], field);\r\n                }\r\n            }\r\n            else {\r\n                // assign the source field to the output even if undefined or required\r\n                value = source[field];\r\n            }\r\n            // only emit this field if the value is defined\r\n            if (value !== undefined) {\r\n                output[field] = value;\r\n            }\r\n        }\r\n        delete source[circularReferenceCheck];\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeArray = function (sources, name) {\r\n        var output = undefined;\r\n        if (!!sources) {\r\n            if (!_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].isArray(sources)) {\r\n                this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].ItemNotInArray, "This field was specified as an array in the contract but the item is not an array.\\r\\n", { name: name }, true);\r\n            }\r\n            else {\r\n                output = [];\r\n                for (var i = 0; i < sources.length; i++) {\r\n                    var source = sources[i];\r\n                    var item = this._serializeObject(source, name + "[" + i + "]");\r\n                    output.push(item);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeStringMap = function (map, expectedType, name) {\r\n        var output = undefined;\r\n        if (map) {\r\n            output = {};\r\n            for (var field in map) {\r\n                var value = map[field];\r\n                if (expectedType === "string") {\r\n                    if (value === undefined) {\r\n                        output[field] = "undefined";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = "null";\r\n                    }\r\n                    else if (!value.toString) {\r\n                        output[field] = "invalid field: toString() is not defined.";\r\n                    }\r\n                    else {\r\n                        output[field] = value.toString();\r\n                    }\r\n                }\r\n                else if (expectedType === "number") {\r\n                    if (value === undefined) {\r\n                        output[field] = "undefined";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = "null";\r\n                    }\r\n                    else {\r\n                        var num = parseFloat(value);\r\n                        if (isNaN(num)) {\r\n                            output[field] = "NaN";\r\n                        }\r\n                        else {\r\n                            output[field] = num;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    output[field] = "invalid field: " + name + " is of unknown type.";\r\n                    this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, output[field], null, true);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    return Serializer;\r\n}());\r\n\r\n//# sourceMappingURL=Serializer.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Serializer.js?')},"./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/Sample.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/Sample.js ***!
  \*******************************************************************************************************/
/*! exports provided: Sample */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sample", function() { return Sample; });\n/* harmony import */ var _SamplingScoreGenerators_SamplingScoreGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SamplingScoreGenerators/SamplingScoreGenerator */ "./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js");\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We\'re using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(logger)) {\r\n            this._logger = new _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["DiagnosticLogger"]();\r\n        }\r\n        else {\r\n            this._logger = logger;\r\n        }\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"].SampleRateOutOfRange, "Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.", { samplingRate: sampleRate }, true);\r\n            this.sampleRate = 100;\r\n        }\r\n        this.sampleRate = sampleRate;\r\n        this.samplingScoreGenerator = new _SamplingScoreGenerators_SamplingScoreGenerator__WEBPACK_IMPORTED_MODULE_0__["SamplingScoreGenerator"]();\r\n    }\r\n    /**\r\n    * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n    */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        var samplingPercentage = this.sampleRate; // 0 - 100\r\n        var isSampledIn = false;\r\n        if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n            return true;\r\n        }\r\n        else if (envelope.baseType === _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Metric"].dataType) {\r\n            // exclude MetricData telemetry from sampling\r\n            return true;\r\n        }\r\n        isSampledIn = this.samplingScoreGenerator.getSamplingScore(envelope) < samplingPercentage;\r\n        return isSampledIn;\r\n    };\r\n    return Sample;\r\n}());\r\n\r\n//# sourceMappingURL=Sample.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/Sample.js?')},"./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js ***!
  \***********************************************************************************************************************************************/
/*! exports provided: HashCodeScoreGenerator */function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HashCodeScoreGenerator\", function() { return HashCodeScoreGenerator; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input == \"\") {\r\n            return 0;\r\n        }\r\n        while (input.length < HashCodeScoreGenerator.MIN_INPUT_LENGTH) {\r\n            input = input.concat(input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input.length; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    // (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\n    HashCodeScoreGenerator.MIN_INPUT_LENGTH = 8;\r\n    return HashCodeScoreGenerator;\r\n}());\r\n\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js?")},"./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js ***!
  \***********************************************************************************************************************************************/
/*! exports provided: SamplingScoreGenerator */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SamplingScoreGenerator", function() { return SamplingScoreGenerator; });\n/* harmony import */ var _HashCodeScoreGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./HashCodeScoreGenerator */ "./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js");\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        this.hashCodeGeneragor = new _HashCodeScoreGenerator__WEBPACK_IMPORTED_MODULE_0__["HashCodeScoreGenerator"]();\r\n        this.keys = new _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["ContextTagKeys"]();\r\n    }\r\n    SamplingScoreGenerator.prototype.getSamplingScore = function (item) {\r\n        var score = 0;\r\n        if (item.tags && item.tags[this.keys.userId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.userId]);\r\n        }\r\n        else if (item.ext && item.ext.user && item.ext.user.id) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.user.id);\r\n        }\r\n        else if (item.tags && item.tags[this.keys.operationId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.operationId]);\r\n        }\r\n        else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace.traceID) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.telemetryTrace.traceID);\r\n        }\r\n        else {\r\n            // tslint:disable-next-line:insecure-random\r\n            score = (Math.random() * 100);\r\n        }\r\n        return score;\r\n    };\r\n    return SamplingScoreGenerator;\r\n}());\r\n\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js?')},"./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/applicationinsights-channel-js.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/applicationinsights-channel-js.js ***!
  \***********************************************************************************************************/
/*! exports provided: Sender */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Sender__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Sender */ "./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Sender.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Sender", function() { return _Sender__WEBPACK_IMPORTED_MODULE_0__["Sender"]; });\n\n\r\n//# sourceMappingURL=applicationinsights-channel-js.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/applicationinsights-channel-js.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Constants.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Constants.js ***!
  \**********************************************************************************/
/*! exports provided: DisabledPropertyName, SampleRate, ProcessLegacy, HttpMethod */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DisabledPropertyName", function() { return DisabledPropertyName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SampleRate", function() { return SampleRate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProcessLegacy", function() { return ProcessLegacy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpMethod", function() { return HttpMethod; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar DisabledPropertyName = "Microsoft_ApplicationInsights_BypassAjaxInstrumentation";\r\nvar SampleRate = "sampleRate";\r\nvar ProcessLegacy = "ProcessLegacy";\r\nvar HttpMethod = "http.method";\r\n//# sourceMappingURL=Constants.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Constants.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js ***!
  \******************************************************************************/
/*! exports provided: StorageType, FieldType, DistributedTracingModes */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StorageType", function() { return StorageType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FieldType", function() { return FieldType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DistributedTracingModes", function() { return DistributedTracingModes; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n* Type of storage to differentiate between local storage and session storage\r\n*/\r\nvar StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType["LocalStorage"] = 0] = "LocalStorage";\r\n    StorageType[StorageType["SessionStorage"] = 1] = "SessionStorage";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it\'s an array\r\n */\r\nvar FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType["Default"] = 0] = "Default";\r\n    FieldType[FieldType["Required"] = 1] = "Required";\r\n    FieldType[FieldType["Array"] = 2] = "Array";\r\n    FieldType[FieldType["Hidden"] = 4] = "Hidden";\r\n})(FieldType || (FieldType = {}));\r\n;\r\nvar DistributedTracingModes;\r\n(function (DistributedTracingModes) {\r\n    /**\r\n     * (Default) Send Application Insights correlation headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes["AI"] = 0] = "AI";\r\n    /**\r\n     * Send both W3C Trace Context headers and back-compatibility Application Insights headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes["AI_AND_W3C"] = 1] = "AI_AND_W3C";\r\n    /**\r\n     * Send W3C Trace Context headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes["W3C"] = 2] = "W3C";\r\n})(DistributedTracingModes || (DistributedTracingModes = {}));\r\n//# sourceMappingURL=Enums.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Base.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Base.js ***!
  \************************************************************************************************************/
/*! exports provided: Base */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Base", function() { return Base; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n     * Data struct to contain only C section with custom fields.\r\n     */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\n\r\n//# sourceMappingURL=Base.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Base.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js ***!
  \**********************************************************************************************************************/
/*! exports provided: ContextTagKeys */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ContextTagKeys", function() { return ContextTagKeys; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nvar ContextTagKeys = /** @class */ (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = "ai.application.ver";\r\n        this.applicationBuild = "ai.application.build";\r\n        this.applicationTypeId = "ai.application.typeId";\r\n        this.applicationId = "ai.application.applicationId";\r\n        this.applicationLayer = "ai.application.layer";\r\n        this.deviceId = "ai.device.id";\r\n        this.deviceIp = "ai.device.ip";\r\n        this.deviceLanguage = "ai.device.language";\r\n        this.deviceLocale = "ai.device.locale";\r\n        this.deviceModel = "ai.device.model";\r\n        this.deviceFriendlyName = "ai.device.friendlyName";\r\n        this.deviceNetwork = "ai.device.network";\r\n        this.deviceNetworkName = "ai.device.networkName";\r\n        this.deviceOEMName = "ai.device.oemName";\r\n        this.deviceOS = "ai.device.os";\r\n        this.deviceOSVersion = "ai.device.osVersion";\r\n        this.deviceRoleInstance = "ai.device.roleInstance";\r\n        this.deviceRoleName = "ai.device.roleName";\r\n        this.deviceScreenResolution = "ai.device.screenResolution";\r\n        this.deviceType = "ai.device.type";\r\n        this.deviceMachineName = "ai.device.machineName";\r\n        this.deviceVMName = "ai.device.vmName";\r\n        this.deviceBrowser = "ai.device.browser";\r\n        this.deviceBrowserVersion = "ai.device.browserVersion";\r\n        this.locationIp = "ai.location.ip";\r\n        this.locationCountry = "ai.location.country";\r\n        this.locationProvince = "ai.location.province";\r\n        this.locationCity = "ai.location.city";\r\n        this.operationId = "ai.operation.id";\r\n        this.operationName = "ai.operation.name";\r\n        this.operationParentId = "ai.operation.parentId";\r\n        this.operationRootId = "ai.operation.rootId";\r\n        this.operationSyntheticSource = "ai.operation.syntheticSource";\r\n        this.operationCorrelationVector = "ai.operation.correlationVector";\r\n        this.sessionId = "ai.session.id";\r\n        this.sessionIsFirst = "ai.session.isFirst";\r\n        this.sessionIsNew = "ai.session.isNew";\r\n        this.userAccountAcquisitionDate = "ai.user.accountAcquisitionDate";\r\n        this.userAccountId = "ai.user.accountId";\r\n        this.userAgent = "ai.user.userAgent";\r\n        this.userId = "ai.user.id";\r\n        this.userStoreRegion = "ai.user.storeRegion";\r\n        this.userAuthUserId = "ai.user.authUserId";\r\n        this.userAnonymousUserAcquisitionDate = "ai.user.anonUserAcquisitionDate";\r\n        this.userAuthenticatedUserAcquisitionDate = "ai.user.authUserAcquisitionDate";\r\n        this.cloudName = "ai.cloud.name";\r\n        this.cloudRole = "ai.cloud.role";\r\n        this.cloudRoleVer = "ai.cloud.roleVer";\r\n        this.cloudRoleInstance = "ai.cloud.roleInstance";\r\n        this.cloudEnvironment = "ai.cloud.environment";\r\n        this.cloudLocation = "ai.cloud.location";\r\n        this.cloudDeploymentUnit = "ai.cloud.deploymentUnit";\r\n        this.internalNodeName = "ai.internal.nodeName";\r\n        this.internalSdkVersion = "ai.internal.sdkVersion";\r\n        this.internalAgentVersion = "ai.internal.agentVersion";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\n\r\n//# sourceMappingURL=ContextTagKeys.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Data.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Data.js ***!
  \************************************************************************************************************/
/*! exports provided: Data */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Data", function() { return Data; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Base */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Base.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n// THIS FILE WAS AUTOGENERATED\r\n\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(_Base__WEBPACK_IMPORTED_MODULE_1__["Base"]));\r\n\r\n//# sourceMappingURL=Data.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Data.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPoint.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPoint.js ***!
  \*****************************************************************************************************************/
/*! exports provided: DataPoint */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataPoint", function() { return DataPoint; });\n/* harmony import */ var _DataPointType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DataPointType */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPointType.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = _DataPointType__WEBPACK_IMPORTED_MODULE_0__["DataPointType"].Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\n\r\n//# sourceMappingURL=DataPoint.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPoint.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPointType.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPointType.js ***!
  \*********************************************************************************************************************/
/*! exports provided: DataPointType */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataPointType", function() { return DataPointType; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nvar DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType["Measurement"] = 0] = "Measurement";\r\n    DataPointType[DataPointType["Aggregation"] = 1] = "Aggregation";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPointType.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Domain.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Domain.js ***!
  \**************************************************************************************************************/
/*! exports provided: Domain */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Domain", function() { return Domain; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\n\r\n//# sourceMappingURL=Domain.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Domain.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Envelope.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Envelope.js ***!
  \****************************************************************************************************************/
/*! exports provided: Envelope */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Envelope", function() { return Envelope; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\n\r\n//# sourceMappingURL=Envelope.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Envelope.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/EventData.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/EventData.js ***!
  \*****************************************************************************************************************/
/*! exports provided: EventData */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventData", function() { return EventData; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Domain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Domain */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Domain.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n// THIS FILE WAS AUTOGENERATED\r\n\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(_Domain__WEBPACK_IMPORTED_MODULE_1__["Domain"]));\r\n\r\n//# sourceMappingURL=EventData.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/EventData.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js ***!
  \*********************************************************************************************************************/
/*! exports provided: ExceptionData */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExceptionData", function() { return ExceptionData; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Domain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Domain */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Domain.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(_Domain__WEBPACK_IMPORTED_MODULE_1__["Domain"]));\r\n\r\n//# sourceMappingURL=ExceptionData.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js ***!
  \************************************************************************************************************************/
/*! exports provided: ExceptionDetails */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExceptionDetails", function() { return ExceptionDetails; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\n\r\n//# sourceMappingURL=ExceptionDetails.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MessageData.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MessageData.js ***!
  \*******************************************************************************************************************/
/*! exports provided: MessageData */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MessageData", function() { return MessageData; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Domain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Domain */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Domain.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n// THIS FILE WAS AUTOGENERATED\r\n\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(_Domain__WEBPACK_IMPORTED_MODULE_1__["Domain"]));\r\n\r\n//# sourceMappingURL=MessageData.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MessageData.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MetricData.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MetricData.js ***!
  \******************************************************************************************************************/
/*! exports provided: MetricData */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MetricData", function() { return MetricData; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Domain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Domain */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Domain.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n// THIS FILE WAS AUTOGENERATED\r\n\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(_Domain__WEBPACK_IMPORTED_MODULE_1__["Domain"]));\r\n\r\n//# sourceMappingURL=MetricData.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MetricData.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewData.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewData.js ***!
  \********************************************************************************************************************/
/*! exports provided: PageViewData */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageViewData", function() { return PageViewData; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _EventData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EventData */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/EventData.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n// THIS FILE WAS AUTOGENERATED\r\n\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(_EventData__WEBPACK_IMPORTED_MODULE_1__["EventData"]));\r\n\r\n//# sourceMappingURL=PageViewData.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewData.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js ***!
  \************************************************************************************************************************/
/*! exports provided: PageViewPerfData */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageViewPerfData", function() { return PageViewPerfData; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _PageViewData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PageViewData */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewData.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n// THIS FILE WAS AUTOGENERATED\r\n\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(_PageViewData__WEBPACK_IMPORTED_MODULE_1__["PageViewData"]));\r\n\r\n//# sourceMappingURL=PageViewPerfData.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js ***!
  \****************************************************************************************************************************/
/*! exports provided: RemoteDependencyData */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RemoteDependencyData", function() { return RemoteDependencyData; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Domain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Domain */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Domain.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n// THIS FILE WAS AUTOGENERATED\r\n\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(_Domain__WEBPACK_IMPORTED_MODULE_1__["Domain"]));\r\n\r\n//# sourceMappingURL=RemoteDependencyData.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js ***!
  \*********************************************************************************************************************/
/*! exports provided: SeverityLevel */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SeverityLevel", function() { return SeverityLevel; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n* Defines the level of severity for the event.\r\n*/\r\nvar SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel["Verbose"] = 0] = "Verbose";\r\n    SeverityLevel[SeverityLevel["Information"] = 1] = "Information";\r\n    SeverityLevel[SeverityLevel["Warning"] = 2] = "Warning";\r\n    SeverityLevel[SeverityLevel["Error"] = 3] = "Error";\r\n    SeverityLevel[SeverityLevel["Critical"] = 4] = "Critical";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/StackFrame.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/StackFrame.js ***!
  \******************************************************************************************************************/
/*! exports provided: StackFrame */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StackFrame", function() { return StackFrame; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\n\r\n//# sourceMappingURL=StackFrame.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/StackFrame.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/IConfig.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/IConfig.js ***!
  \*******************************************************************************************/
/*! exports provided: ConfigurationManager */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfigurationManager", function() { return ConfigurationManager; });\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\n\r\n//# sourceMappingURL=IConfig.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/IConfig.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/PartAExtensions.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/PartAExtensions.js ***!
  \***************************************************************************************************/
/*! exports provided: Extensions, CtxTagKeys */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Extensions", function() { return Extensions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CtxTagKeys", function() { return CtxTagKeys; });\n/* harmony import */ var _Contracts_Generated_ContextTagKeys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Contracts/Generated/ContextTagKeys */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js");\n\r\nvar Extensions = /** @class */ (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.UserExt = "user";\r\n    Extensions.DeviceExt = "device";\r\n    Extensions.TraceExt = "trace";\r\n    Extensions.WebExt = "web";\r\n    Extensions.AppExt = "app";\r\n    Extensions.OSExt = "os";\r\n    Extensions.SessionExt = "ses";\r\n    Extensions.SDKExt = "sdk";\r\n    return Extensions;\r\n}());\r\n\r\nvar CtxTagKeys = new _Contracts_Generated_ContextTagKeys__WEBPACK_IMPORTED_MODULE_0__["ContextTagKeys"]();\r\n//# sourceMappingURL=PartAExtensions.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/PartAExtensions.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/RequestResponseHeaders.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/RequestResponseHeaders.js ***!
  \***********************************************************************************************/
/*! exports provided: RequestHeaders */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequestHeaders", function() { return RequestHeaders; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar RequestHeaders = /** @class */ (function () {\r\n    function RequestHeaders() {\r\n    }\r\n    /**\r\n     * Request-Context header\r\n     */\r\n    RequestHeaders.requestContextHeader = "Request-Context";\r\n    /**\r\n     * Target instrumentation header that is added to the response and retrieved by the\r\n     * calling application when processing incoming responses.\r\n     */\r\n    RequestHeaders.requestContextTargetKey = "appId";\r\n    /**\r\n     * Request-Context appId format\r\n     */\r\n    RequestHeaders.requestContextAppIdFormat = "appId=cid-v1:";\r\n    /**\r\n     * Request-Id header\r\n     */\r\n    RequestHeaders.requestIdHeader = "Request-Id";\r\n    /**\r\n     * W3C distributed tracing protocol header\r\n     */\r\n    RequestHeaders.traceParentHeader = "traceparent";\r\n    /**\r\n     * Sdk-Context header\r\n     * If this header passed with appId in content then appId will be returned back by the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeader = "Sdk-Context";\r\n    /**\r\n     * String to pass in header for requesting appId back from the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeaderAppIdRequest = "appId";\r\n    RequestHeaders.requestContextHeaderLowerCase = "request-context";\r\n    return RequestHeaders;\r\n}());\r\n\r\n//# sourceMappingURL=RequestResponseHeaders.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/RequestResponseHeaders.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Data.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Data.js ***!
  \**********************************************************************************************/
/*! exports provided: Data */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Data", function() { return Data; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Interfaces_Contracts_Generated_Data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Interfaces/Contracts/Generated/Data */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Data.js");\n/* harmony import */ var _Enums__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Enums */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Required,\r\n            baseData: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(_Interfaces_Contracts_Generated_Data__WEBPACK_IMPORTED_MODULE_1__["Data"]));\r\n\r\n//# sourceMappingURL=Data.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Data.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataPoint.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataPoint.js ***!
  \***************************************************************************************************/
/*! exports provided: DataPoint */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataPoint", function() { return DataPoint; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Interfaces_Contracts_Generated_DataPoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Interfaces/Contracts/Generated/DataPoint */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPoint.js");\n/* harmony import */ var _Enums__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Enums */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Required,\r\n            kind: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            value: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Required,\r\n            count: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            min: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            max: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            stdDev: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(_Interfaces_Contracts_Generated_DataPoint__WEBPACK_IMPORTED_MODULE_1__["DataPoint"]));\r\n\r\n//# sourceMappingURL=DataPoint.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataPoint.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js ***!
  \*******************************************************************************************************/
/*! exports provided: DataSanitizer */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataSanitizer", function() { return DataSanitizer; });\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        var nameTrunc;\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                nameTrunc = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["_InternalMessageId"].NameTooLong, "name is too long.  It has been truncated to " + DataSanitizer.MAX_NAME_LENGTH + " characters.", { name: name }, true);\r\n            }\r\n        }\r\n        return nameTrunc || name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        var valueTrunc;\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                valueTrunc = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["_InternalMessageId"].StringValueTooLong, "string value is too long. It has been truncated to " + maxLength + " characters.", { value: value }, true);\r\n            }\r\n        }\r\n        return valueTrunc || value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["_InternalMessageId"].UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        var messageTrunc;\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                messageTrunc = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["_InternalMessageId"].MessageTruncated, "message is too long, it has been truncated to " + DataSanitizer.MAX_MESSAGE_LENGTH + " characters.", { message: message }, true);\r\n            }\r\n        }\r\n        return messageTrunc || message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        var exceptionTrunc;\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exceptionTrunc = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["_InternalMessageId"].ExceptionTruncated, "exception is too long, it has been truncated to " + DataSanitizer.MAX_EXCEPTION_LENGTH + " characters.", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exceptionTrunc || exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === "object" && typeof JSON !== "undefined") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["_InternalMessageId"].CannotSerializeObjectNonSerializable, "custom property is not valid", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["_InternalMessageId"].IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        var inputTrunc;\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                inputTrunc = input.substring(0, maxLength);\r\n                logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["LoggingSeverity"].WARNING, _msgId, "input is too long, it has been truncated to " + maxLength + " characters.", { data: input }, true);\r\n            }\r\n        }\r\n        return inputTrunc || input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = "00" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== "string")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, "");\r\n    };\r\n    /**\r\n    * Max length allowed for custom names.\r\n    */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\n\r\n//# sourceMappingURL=DataSanitizer.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Envelope.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Envelope.js ***!
  \**************************************************************************************************/
/*! exports provided: Envelope */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Envelope", function() { return Envelope; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Interfaces_Contracts_Generated_Envelope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Interfaces/Contracts/Generated/Envelope */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Envelope.js");\n/* harmony import */ var _DataSanitizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DataSanitizer */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js");\n/* harmony import */ var _Enums__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Enums */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js");\n/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Util */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\n\r\n\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = _DataSanitizer__WEBPACK_IMPORTED_MODULE_2__["DataSanitizer"].sanitizeString(logger, name) || _Util__WEBPACK_IMPORTED_MODULE_4__["Util"].NotSpecified;\r\n        _this.data = data;\r\n        _this.time = _Util__WEBPACK_IMPORTED_MODULE_4__["Util"].toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Required,\r\n            iKey: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Required,\r\n            name: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate == 100) ? _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Hidden : _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Required;\r\n            },\r\n            tags: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Required,\r\n            data: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(_Interfaces_Contracts_Generated_Envelope__WEBPACK_IMPORTED_MODULE_1__["Envelope"]));\r\n\r\n//# sourceMappingURL=Envelope.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Envelope.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Event.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Event.js ***!
  \****************************************************************************************/
/*! exports provided: Event */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Event", function() { return Event; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Interfaces_Contracts_Generated_EventData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Interfaces/Contracts/Generated/EventData */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/EventData.js");\n/* harmony import */ var _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Common/DataSanitizer */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js");\n/* harmony import */ var _Enums__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Enums */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js");\n/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Util */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\n\r\n\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Required,\r\n            name: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Required,\r\n            properties: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Default,\r\n            measurements: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Default\r\n        };\r\n        _this.name = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__["DataSanitizer"].sanitizeString(logger, name) || _Util__WEBPACK_IMPORTED_MODULE_4__["Util"].NotSpecified;\r\n        _this.properties = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__["DataSanitizer"].sanitizeProperties(logger, properties);\r\n        _this.measurements = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__["DataSanitizer"].sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = "Microsoft.ApplicationInsights.{0}.Event";\r\n    Event.dataType = "EventData";\r\n    return Event;\r\n}(_Interfaces_Contracts_Generated_EventData__WEBPACK_IMPORTED_MODULE_1__["EventData"]));\r\n\r\n//# sourceMappingURL=Event.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Event.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Exception.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Exception.js ***!
  \********************************************************************************************/
/*! exports provided: Exception, _ExceptionDetails, _StackFrame */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Exception", function() { return Exception; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ExceptionDetails", function() { return _ExceptionDetails; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_StackFrame", function() { return _StackFrame; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Interfaces_Contracts_Generated_StackFrame__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Interfaces/Contracts/Generated/StackFrame */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/StackFrame.js");\n/* harmony import */ var _Interfaces_Contracts_Generated_ExceptionData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Interfaces/Contracts/Generated/ExceptionData */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js");\n/* harmony import */ var _Interfaces_Contracts_Generated_ExceptionDetails__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Interfaces/Contracts/Generated/ExceptionDetails */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js");\n/* harmony import */ var _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Common/DataSanitizer */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js");\n/* harmony import */ var _Enums__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Enums */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js");\n/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Util */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js");\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Exception, _super);\r\n    /**\r\n    * Constructs a new instance of the ExceptionTelemetry object\r\n    */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Required,\r\n            exceptions: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Required,\r\n            severityLevel: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Default,\r\n            properties: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Default,\r\n            measurements: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Default\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            _this.properties = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_4__["DataSanitizer"].sanitizeProperties(logger, properties);\r\n            _this.measurements = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_4__["DataSanitizer"].sanitizeMeasurements(logger, measurements);\r\n            if (severityLevel)\r\n                _this.severityLevel = severityLevel;\r\n            if (id)\r\n                _this.id = id;\r\n        }\r\n        else {\r\n            _this.exceptions = exception.exceptions;\r\n            _this.properties = exception.properties;\r\n            _this.measurements = exception.measurements;\r\n            if (exception.severityLevel)\r\n                _this.severityLevel = exception.severityLevel;\r\n            if (exception.id)\r\n                _this.id = exception.id;\r\n            if (exception.problemGroup)\r\n                _this.problemGroup = exception.problemGroup;\r\n            // bool/int types, use isNullOrUndefined\r\n            if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_7__["CoreUtils"].isNullOrUndefined(exception.ver))\r\n                _this.ver = exception.ver;\r\n            if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_7__["CoreUtils"].isNullOrUndefined(exception.isManual))\r\n                _this.isManual = exception.isManual;\r\n        }\r\n        return _this;\r\n    }\r\n    Exception.CreateFromInterface = function (logger, exception) {\r\n        var exceptions = exception.exceptions\r\n            && exception.exceptions.map(function (ex) { return _ExceptionDetails.CreateFromInterface(logger, ex); });\r\n        var exceptionData = new Exception(logger, tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, exception, { exceptions: exceptions }));\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a = this, exceptions = _a.exceptions, properties = _a.properties, measurements = _a.measurements, severityLevel = _a.severityLevel, ver = _a.ver, problemGroup = _a.problemGroup, id = _a.id, isManual = _a.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && exceptions.map(function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return {\r\n            ver: ver,\r\n            exceptions: exceptionDetailsInterface,\r\n            severityLevel: severityLevel,\r\n            properties: properties,\r\n            measurements: measurements,\r\n            problemGroup: problemGroup,\r\n            id: id,\r\n            isManual: isManual\r\n        };\r\n    };\r\n    /**\r\n    * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n    */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = "Microsoft.ApplicationInsights.{0}.Exception";\r\n    Exception.dataType = "ExceptionData";\r\n    return Exception;\r\n}(_Interfaces_Contracts_Generated_ExceptionData__WEBPACK_IMPORTED_MODULE_2__["ExceptionData"]));\r\n\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Default,\r\n            outerId: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Default,\r\n            typeName: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Required,\r\n            message: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Required,\r\n            hasFullStack: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Default,\r\n            stack: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Default,\r\n            parsedStack: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Array\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.typeName = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_4__["DataSanitizer"].sanitizeString(logger, exception.name) || _Util__WEBPACK_IMPORTED_MODULE_6__["Util"].NotSpecified;\r\n            _this.message = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_4__["DataSanitizer"].sanitizeMessage(logger, exception.message) || _Util__WEBPACK_IMPORTED_MODULE_6__["Util"].NotSpecified;\r\n            var stack = exception.stack;\r\n            _this.parsedStack = _ExceptionDetails.parseStack(stack);\r\n            _this.stack = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_4__["DataSanitizer"].sanitizeException(logger, stack);\r\n            _this.hasFullStack = _Util__WEBPACK_IMPORTED_MODULE_6__["Util"].isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        }\r\n        else {\r\n            _this.typeName = exception.typeName;\r\n            _this.message = exception.message;\r\n            _this.stack = exception.stack;\r\n            _this.parsedStack = exception.parsedStack;\r\n            _this.hasFullStack = exception.hasFullStack;\r\n        }\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var parsedStack = this.parsedStack instanceof Array\r\n            && this.parsedStack.map(function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = {\r\n            id: this.id,\r\n            outerId: this.outerId,\r\n            typeName: this.typeName,\r\n            message: this.message,\r\n            hasFullStack: this.hasFullStack,\r\n            stack: this.stack,\r\n            parsedStack: parsedStack || undefined\r\n        };\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception.parsedStack instanceof Array\r\n            && exception.parsedStack.map(function (frame) { return _StackFrame.CreateFromInterface(frame); }))\r\n            || exception.parsedStack;\r\n        var exceptionDetails = new _ExceptionDetails(logger, tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, exception, { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    _ExceptionDetails.parseStack = function (stack) {\r\n        var parsedStack = undefined;\r\n        if (typeof stack === "string") {\r\n            var frames = stack.split(\'\\n\');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames.length; i++) {\r\n                var frame = frames[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(_Interfaces_Contracts_Generated_ExceptionDetails__WEBPACK_IMPORTED_MODULE_3__["ExceptionDetails"]));\r\n\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](_StackFrame, _super);\r\n    function _StackFrame(sourceFrame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Required,\r\n            method: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Required,\r\n            assembly: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Default,\r\n            fileName: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Default,\r\n            line: _Enums__WEBPACK_IMPORTED_MODULE_5__["FieldType"].Default,\r\n        };\r\n        if (typeof sourceFrame === "string") {\r\n            var frame = sourceFrame;\r\n            _this.level = level;\r\n            _this.method = "<no_method>";\r\n            _this.assembly = _Util__WEBPACK_IMPORTED_MODULE_6__["Util"].trim(frame);\r\n            _this.fileName = "";\r\n            _this.line = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = _Util__WEBPACK_IMPORTED_MODULE_6__["Util"].trim(matches[2]) || _this.method;\r\n                _this.fileName = _Util__WEBPACK_IMPORTED_MODULE_6__["Util"].trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _this.level = sourceFrame.level;\r\n            _this.method = sourceFrame.method;\r\n            _this.assembly = sourceFrame.assembly;\r\n            _this.fileName = sourceFrame.fileName;\r\n            _this.line = sourceFrame.line;\r\n            _this.sizeInBytes = 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        return {\r\n            level: this.level,\r\n            method: this.method,\r\n            assembly: this.assembly,\r\n            fileName: this.fileName,\r\n            line: this.line\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; //\'{"method":"","level":,"assembly":"","fileName":"","line":}\'.length\r\n    return _StackFrame;\r\n}(_Interfaces_Contracts_Generated_StackFrame__WEBPACK_IMPORTED_MODULE_1__["StackFrame"]));\r\n\r\n//# sourceMappingURL=Exception.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Exception.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Metric.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Metric.js ***!
  \*****************************************************************************************/
/*! exports provided: Metric */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Metric", function() { return Metric; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Interfaces_Contracts_Generated_MetricData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Interfaces/Contracts/Generated/MetricData */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MetricData.js");\n/* harmony import */ var _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Common/DataSanitizer */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js");\n/* harmony import */ var _Enums__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Enums */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js");\n/* harmony import */ var _Common_DataPoint__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Common/DataPoint */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataPoint.js");\n/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Util */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Required,\r\n            metrics: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Required,\r\n            properties: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Default\r\n        };\r\n        var dataPoint = new _Common_DataPoint__WEBPACK_IMPORTED_MODULE_4__["DataPoint"]();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__["DataSanitizer"].sanitizeString(logger, name) || _Util__WEBPACK_IMPORTED_MODULE_5__["Util"].NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__["DataSanitizer"].sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = "Microsoft.ApplicationInsights.{0}.Metric";\r\n    Metric.dataType = "MetricData";\r\n    return Metric;\r\n}(_Interfaces_Contracts_Generated_MetricData__WEBPACK_IMPORTED_MODULE_1__["MetricData"]));\r\n\r\n//# sourceMappingURL=Metric.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Metric.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageView.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageView.js ***!
  \*******************************************************************************************/
/*! exports provided: PageView */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageView", function() { return PageView; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Interfaces_Contracts_Generated_PageViewData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Interfaces/Contracts/Generated/PageViewData */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewData.js");\n/* harmony import */ var _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Common/DataSanitizer */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js");\n/* harmony import */ var _Enums__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Enums */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js");\n/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Util */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\n\r\n\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Required,\r\n            name: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Default,\r\n            url: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Default,\r\n            duration: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Default,\r\n            properties: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Default,\r\n            measurements: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Default,\r\n            id: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Default\r\n        };\r\n        _this.id = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__["DataSanitizer"].sanitizeId(logger, id);\r\n        _this.url = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__["DataSanitizer"].sanitizeUrl(logger, url);\r\n        _this.name = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__["DataSanitizer"].sanitizeString(logger, name) || _Util__WEBPACK_IMPORTED_MODULE_4__["Util"].NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = _Util__WEBPACK_IMPORTED_MODULE_4__["Util"].msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__["DataSanitizer"].sanitizeProperties(logger, properties);\r\n        _this.measurements = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__["DataSanitizer"].sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = "Microsoft.ApplicationInsights.{0}.Pageview";\r\n    PageView.dataType = "PageviewData";\r\n    return PageView;\r\n}(_Interfaces_Contracts_Generated_PageViewData__WEBPACK_IMPORTED_MODULE_1__["PageViewData"]));\r\n\r\n//# sourceMappingURL=PageView.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageView.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageViewPerformance.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageViewPerformance.js ***!
  \******************************************************************************************************/
/*! exports provided: PageViewPerformance */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageViewPerformance", function() { return PageViewPerformance; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Interfaces_Contracts_Generated_PageViewPerfData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Interfaces/Contracts/Generated/PageViewPerfData */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js");\n/* harmony import */ var _Enums__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Enums */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js");\n/* harmony import */ var _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Common/DataSanitizer */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js");\n/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Util */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\n\r\n\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Required,\r\n            name: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            url: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            duration: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            perfTotal: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            networkConnect: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            sentRequest: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            receivedResponse: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            domProcessing: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            properties: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            measurements: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default\r\n        };\r\n        _this.url = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_3__["DataSanitizer"].sanitizeUrl(logger, url);\r\n        _this.name = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_3__["DataSanitizer"].sanitizeString(logger, name) || _Util__WEBPACK_IMPORTED_MODULE_4__["Util"].NotSpecified;\r\n        _this.properties = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_3__["DataSanitizer"].sanitizeProperties(logger, properties);\r\n        _this.measurements = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_3__["DataSanitizer"].sanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _this.domProcessing = cs4BaseData.domProcessing;\r\n            _this.duration = cs4BaseData.duration;\r\n            _this.networkConnect = cs4BaseData.networkConnect;\r\n            _this.perfTotal = cs4BaseData.perfTotal;\r\n            _this.receivedResponse = cs4BaseData.receivedResponse;\r\n            _this.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = "Microsoft.ApplicationInsights.{0}.PageviewPerformance";\r\n    PageViewPerformance.dataType = "PageviewPerformanceData";\r\n    return PageViewPerformance;\r\n}(_Interfaces_Contracts_Generated_PageViewPerfData__WEBPACK_IMPORTED_MODULE_1__["PageViewPerfData"]));\r\n\r\n//# sourceMappingURL=PageViewPerformance.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageViewPerformance.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/RemoteDependencyData.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/RemoteDependencyData.js ***!
  \*******************************************************************************************************/
/*! exports provided: RemoteDependencyData */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RemoteDependencyData", function() { return RemoteDependencyData; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Common/DataSanitizer */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js");\n/* harmony import */ var _Enums__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Enums */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js");\n/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Util */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js");\n/* harmony import */ var _Interfaces_Contracts_Generated_RemoteDependencyData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Interfaces/Contracts/Generated/RemoteDependencyData */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = "Ajax"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Required,\r\n            ver: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Required,\r\n            name: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            resultCode: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            duration: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            success: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            data: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            target: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            type: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            properties: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            measurements: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            kind: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            value: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            count: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            min: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            max: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            stdDev: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            dependencyKind: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            dependencySource: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            commandName: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n            dependencyTypeName: _Enums__WEBPACK_IMPORTED_MODULE_2__["FieldType"].Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = _Util__WEBPACK_IMPORTED_MODULE_3__["Util"].msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + "";\r\n        _this.type = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_1__["DataSanitizer"].sanitizeString(logger, requestAPI);\r\n        var dependencyFields = _Util__WEBPACK_IMPORTED_MODULE_3__["AjaxHelper"].ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_1__["DataSanitizer"].sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_1__["DataSanitizer"].sanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _this.target = _this.target + "| " + correlationContext;\r\n        }\r\n        _this.name = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_1__["DataSanitizer"].sanitizeString(logger, dependencyFields.name);\r\n        _this.properties = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_1__["DataSanitizer"].sanitizeProperties(logger, properties);\r\n        _this.measurements = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_1__["DataSanitizer"].sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = "Microsoft.ApplicationInsights.{0}.RemoteDependency";\r\n    RemoteDependencyData.dataType = "RemoteDependencyData";\r\n    return RemoteDependencyData;\r\n}(_Interfaces_Contracts_Generated_RemoteDependencyData__WEBPACK_IMPORTED_MODULE_4__["RemoteDependencyData"]));\r\n\r\n//# sourceMappingURL=RemoteDependencyData.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/RemoteDependencyData.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Trace.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Trace.js ***!
  \****************************************************************************************/
/*! exports provided: Trace */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Trace", function() { return Trace; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");\n/* harmony import */ var _Interfaces_Contracts_Generated_MessageData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Interfaces/Contracts/Generated/MessageData */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MessageData.js");\n/* harmony import */ var _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Common/DataSanitizer */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js");\n/* harmony import */ var _Enums__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Enums */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js");\n/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Util */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\n\r\n\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Required,\r\n            message: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Required,\r\n            severityLevel: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Default,\r\n            properties: _Enums__WEBPACK_IMPORTED_MODULE_3__["FieldType"].Default\r\n        };\r\n        message = message || _Util__WEBPACK_IMPORTED_MODULE_4__["Util"].NotSpecified;\r\n        _this.message = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__["DataSanitizer"].sanitizeMessage(logger, message);\r\n        _this.properties = _Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_2__["DataSanitizer"].sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = "Microsoft.ApplicationInsights.{0}.Message";\r\n    Trace.dataType = "MessageData";\r\n    return Trace;\r\n}(_Interfaces_Contracts_Generated_MessageData__WEBPACK_IMPORTED_MODULE_1__["MessageData"]));\r\n\r\n//# sourceMappingURL=Trace.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Trace.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/TelemetryItemCreator.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/TelemetryItemCreator.js ***!
  \*********************************************************************************************/
/*! exports provided: TelemetryItemCreator */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TelemetryItemCreator", function() { return TelemetryItemCreator; });\n/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Util */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js");\n/* harmony import */ var _Telemetry_Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Telemetry/Common/DataSanitizer */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js");\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item domain specific properties; part B\r\n     * @param baseType telemetry item type. ie PageViewData\r\n     * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties user defined custom properties; part C\r\n     * @param systemProperties system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n        envelopeName = _Telemetry_Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_1__["DataSanitizer"].sanitizeString(logger, envelopeName) || _Util__WEBPACK_IMPORTED_MODULE_0__["Util"].NotSpecified;\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(item) ||\r\n            _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(baseType) ||\r\n            _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(envelopeName)) {\r\n            throw Error("Input doesn\'t contain all required fields");\r\n        }\r\n        var telemetryItem = {\r\n            name: envelopeName,\r\n            time: new Date().toISOString(),\r\n            iKey: "",\r\n            ext: systemProperties ? systemProperties : {},\r\n            tags: [],\r\n            data: {},\r\n            baseType: baseType,\r\n            baseData: item // Part B\r\n        };\r\n        // Part C\r\n        if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["CoreUtils"].isNullOrUndefined(customProperties)) {\r\n            for (var prop in customProperties) {\r\n                if (customProperties.hasOwnProperty(prop)) {\r\n                    telemetryItem.data[prop] = customProperties[prop];\r\n                }\r\n            }\r\n        }\r\n        return telemetryItem;\r\n    };\r\n    return TelemetryItemCreator;\r\n}());\r\n\r\n//# sourceMappingURL=TelemetryItemCreator.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/TelemetryItemCreator.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js ***!
  \*****************************************************************************/
/*! exports provided: Util, UrlHelper, CorrelationIdHelper, AjaxHelper, DateTimeUtils */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Util", function() { return Util; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlHelper", function() { return UrlHelper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CorrelationIdHelper", function() { return CorrelationIdHelper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AjaxHelper", function() { return AjaxHelper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateTimeUtils", function() { return DateTimeUtils; });\n/* harmony import */ var _Enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Enums */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js");\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n/* harmony import */ var _RequestResponseHeaders__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RequestResponseHeaders */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/RequestResponseHeaders.js");\n/* harmony import */ var _Telemetry_Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Telemetry/Common/DataSanitizer */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\n\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    Util.createDomEvent = function (eventName) {\r\n        var event = null;\r\n        if (typeof Event === "function") {\r\n            event = new Event(eventName);\r\n        }\r\n        else {\r\n            event = document.createEvent("Event");\r\n            event.initEvent(eventName, true, true);\r\n        }\r\n        return event;\r\n    };\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(_Enums__WEBPACK_IMPORTED_MODULE_0__["StorageType"].LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === \'undefined\') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === _Enums__WEBPACK_IMPORTED_MODULE_0__["StorageType"].LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid, uid);\r\n            fail = storage.getItem(uid) != uid;\r\n            storage.removeItem(uid);\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(_Enums__WEBPACK_IMPORTED_MODULE_0__["StorageType"].LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser\'s local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].BrowserCannotReadLocalStorage, "Browser failed read of local storage. " + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser\'s local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].BrowserCannotWriteLocalStorage, "Browser failed write to local storage. " + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser\'s local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].BrowserFailedRemovalFromLocalStorage, "Browser failed removal of local storage item. " + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(_Enums__WEBPACK_IMPORTED_MODULE_0__["StorageType"].SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(_Enums__WEBPACK_IMPORTED_MODULE_0__["StorageType"].SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser\'s session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].BrowserCannotReadSessionStorage, "Browser failed read of session storage. " + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser\'s session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].BrowserCannotWriteSessionStorage, "Browser failed write to session storage. " + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser\'s session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].BrowserFailedRemovalFromSessionStorage, "Browser failed removal of session storage item. " + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].disableCookies();\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"]._canUseCookies === undefined) {\r\n            _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"]._canUseCookies = false;\r\n            try {\r\n                _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"]._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].CannotAccessCookie, "Cannot access document.cookie - " + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"]._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = "";\r\n        var secureAttrib = "";\r\n        if (domain) {\r\n            domainAttrib = ";domain=" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === "https:") {\r\n            secureAttrib = ";secure";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + "=" + value + domainAttrib + ";path=/" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === "true";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = "";\r\n        if (name && name.length) {\r\n            var cookieName = name + "=";\r\n            var cookies = Util.document.cookie.split(";");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it\'s expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + "=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== "string")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, "");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\';\r\n        var result = "";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; //5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * generate a random 32bit number (-0x80000000..0x7FFFFFFF).\r\n     */\r\n    Util.random32 = function () {\r\n        return (0x100000000 * Math.random()) | 0;\r\n    };\r\n    /**\r\n     * generate W3C trace id\r\n     */\r\n    Util.generateW3CId = function () {\r\n        var hexValues = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"];\r\n        // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n        var oct = "", tmp;\r\n        for (var a = 0; a < 4; a++) {\r\n            tmp = Util.random32();\r\n            oct +=\r\n                hexValues[tmp & 0xF] +\r\n                    hexValues[tmp >> 4 & 0xF] +\r\n                    hexValues[tmp >> 8 & 0xF] +\r\n                    hexValues[tmp >> 12 & 0xF] +\r\n                    hexValues[tmp >> 16 & 0xF] +\r\n                    hexValues[tmp >> 20 & 0xF] +\r\n                    hexValues[tmp >> 24 & 0xF] +\r\n                    hexValues[tmp >> 28 & 0xF];\r\n        }\r\n        // "Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively"\r\n        var clockSequenceHi = hexValues[8 + (Math.random() * 4) | 0];\r\n        return oct.substr(0, 8) + oct.substr(9, 4) + "4" + oct.substr(13, 3) + clockSequenceHi + oct.substr(16, 3) + oct.substr(19, 12);\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === "[object Array]";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === "[object Error]";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === "[object Date]";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = "0" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + "-" + pad(date.getUTCMonth() + 1)\r\n                    + "-" + pad(date.getUTCDate())\r\n                    + "T" + pad(date.getUTCHours())\r\n                    + ":" + pad(date.getUTCMinutes())\r\n                    + ":" + pad(date.getUTCSeconds())\r\n                    + "." + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + "Z";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf(\'msie\') != -1) ? parseInt(myNav.split(\'msie\')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = "" + totalms % 1000;\r\n        var sec = "" + Math.floor(totalms / 1000) % 60;\r\n        var min = "" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = "" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? "00" + ms : ms.length === 2 ? "0" + ms : ms;\r\n        sec = sec.length < 2 ? "0" + sec : sec;\r\n        min = min.length < 2 ? "0" + min : min;\r\n        hour = hour.length < 2 ? "0" + hour : hour;\r\n        return (days > 0 ? days + "." : "") + hour + ":" + min + ":" + sec + "." + ms;\r\n    };\r\n    /**\r\n    * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n    * happens in a script from other domain (cross origin, CORS).\r\n    */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === "Script error." || message === "Script error") && !error;\r\n    };\r\n    /**\r\n    * Returns string representation of an object suitable for diagnostics logging.\r\n    */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === "[object Error]") {\r\n            propertyValueDump = "{ stack: \'" + object.stack + "\', message: \'" + object.message + "\', name: \'" + object.name + "\'";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n    * Returns the name of object if it\'s an Error. Otherwise, returns empty string.\r\n    */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === "[object Error]") {\r\n            return object.name;\r\n        }\r\n        return "";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === \'undefined\' || !window || typeof eventName !== \'string\' || typeof callback !== \'function\') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = \'on\' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window["attachEvent"]) {\r\n            window["attachEvent"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return (\'sendBeacon\' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.getExtension = function (extensions, identifier) {\r\n        var extension = null;\r\n        var extIx = 0;\r\n        while (!extension && extIx < extensions.length) {\r\n            if (extensions[extIx] && extensions[extIx].identifier === identifier) {\r\n                extension = extensions[extIx];\r\n            }\r\n            extIx++;\r\n        }\r\n        return extension;\r\n    };\r\n    Util.document = typeof document !== "undefined" ? document : {};\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations\r\n    Util._internalEndpoints = [\r\n        "https://dc.services.visualstudio.com/v2/track",\r\n        "https://breeze.aimon.applicationinsights.io/v2/track",\r\n        "https://dc-int.services.visualstudio.com/v2/track"\r\n    ];\r\n    Util.NotSpecified = "not_specified";\r\n    return Util;\r\n}());\r\n\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement(\'a\') : { host: UrlHelper.parseHost(url) }; // fill host field in the fallback case as that is the only externally required field from this fn\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + " " + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    // Fallback method to grab host from url if document.createElement method is not available\r\n    UrlHelper.parseHost = function (url) {\r\n        var match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\r\n        if (match != null && match.length > 2 && typeof match[2] === \'string\' && match[2].length > 0) {\r\n            return match[2];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== "undefined" ? document : {};\r\n    return UrlHelper;\r\n}());\r\n\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n    * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n    */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var includedDomains = config && config.correlationHeaderDomains;\r\n        if (includedDomains) {\r\n            var matchExists_1;\r\n            includedDomains.forEach(function (domain) {\r\n                var regex = new RegExp(domain.toLowerCase().replace(/\\./g, "\\.").replace(/\\*/g, ".*"));\r\n                matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n            });\r\n            if (!matchExists_1) {\r\n                return false;\r\n            }\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length == 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, "\\.").replace(/\\*/g, ".*"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n    * Combines target appId and target role name from response header.\r\n    */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, _RequestResponseHeaders__WEBPACK_IMPORTED_MODULE_2__["RequestHeaders"].requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n    * Gets key from correlation response header\r\n    */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(",");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split("=");\r\n                if (keyValue.length == 2 && keyValue[0] == key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = "cid-v1:";\r\n    return CorrelationIdHelper;\r\n}());\r\n\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? "/" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== \'/\') {\r\n                        pathName = "/" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = _Telemetry_Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_3__["DataSanitizer"].sanitizeString(logger, method ? method + " " + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = _Telemetry_Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_3__["DataSanitizer"].sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\n\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === \'undefined\') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(start) && !_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\n\r\n//# sourceMappingURL=Util.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js?')},"./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js ***!
  \***************************************************************************************************/
/*! exports provided: Util, CorrelationIdHelper, UrlHelper, DateTimeUtils, FieldType, RequestHeaders, DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, AIData, AIBase, Envelope, Event, Exception, Metric, PageView, PageViewData, RemoteDependencyData, Trace, PageViewPerformance, Data, SeverityLevel, ConfigurationManager, ContextTagKeys, DataSanitizer, TelemetryItemCreator, CtxTagKeys, Extensions, DistributedTracingModes, PropertiesPluginIdentifier, BreezeChannelIdentifier */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PropertiesPluginIdentifier", function() { return PropertiesPluginIdentifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BreezeChannelIdentifier", function() { return BreezeChannelIdentifier; });\n/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Util */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Util", function() { return _Util__WEBPACK_IMPORTED_MODULE_0__["Util"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CorrelationIdHelper", function() { return _Util__WEBPACK_IMPORTED_MODULE_0__["CorrelationIdHelper"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UrlHelper", function() { return _Util__WEBPACK_IMPORTED_MODULE_0__["UrlHelper"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DateTimeUtils", function() { return _Util__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"]; });\n\n/* harmony import */ var _Enums__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Enums */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FieldType", function() { return _Enums__WEBPACK_IMPORTED_MODULE_1__["FieldType"]; });\n\n/* harmony import */ var _RequestResponseHeaders__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RequestResponseHeaders */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/RequestResponseHeaders.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RequestHeaders", function() { return _RequestResponseHeaders__WEBPACK_IMPORTED_MODULE_2__["RequestHeaders"]; });\n\n/* harmony import */ var _Constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Constants */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Constants.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DisabledPropertyName", function() { return _Constants__WEBPACK_IMPORTED_MODULE_3__["DisabledPropertyName"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ProcessLegacy", function() { return _Constants__WEBPACK_IMPORTED_MODULE_3__["ProcessLegacy"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SampleRate", function() { return _Constants__WEBPACK_IMPORTED_MODULE_3__["SampleRate"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HttpMethod", function() { return _Constants__WEBPACK_IMPORTED_MODULE_3__["HttpMethod"]; });\n\n/* harmony import */ var _Interfaces_Contracts_Generated_Data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Interfaces/Contracts/Generated/Data */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Data.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AIData", function() { return _Interfaces_Contracts_Generated_Data__WEBPACK_IMPORTED_MODULE_4__["Data"]; });\n\n/* harmony import */ var _Interfaces_Contracts_Generated_Base__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Interfaces/Contracts/Generated/Base */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Base.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AIBase", function() { return _Interfaces_Contracts_Generated_Base__WEBPACK_IMPORTED_MODULE_5__["Base"]; });\n\n/* harmony import */ var _Telemetry_Common_Envelope__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Telemetry/Common/Envelope */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Envelope.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Envelope", function() { return _Telemetry_Common_Envelope__WEBPACK_IMPORTED_MODULE_6__["Envelope"]; });\n\n/* harmony import */ var _Telemetry_Event__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Telemetry/Event */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Event.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Event", function() { return _Telemetry_Event__WEBPACK_IMPORTED_MODULE_7__["Event"]; });\n\n/* harmony import */ var _Telemetry_Exception__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Telemetry/Exception */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Exception.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Exception", function() { return _Telemetry_Exception__WEBPACK_IMPORTED_MODULE_8__["Exception"]; });\n\n/* harmony import */ var _Telemetry_Metric__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Telemetry/Metric */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Metric.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Metric", function() { return _Telemetry_Metric__WEBPACK_IMPORTED_MODULE_9__["Metric"]; });\n\n/* harmony import */ var _Telemetry_PageView__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Telemetry/PageView */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageView.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PageView", function() { return _Telemetry_PageView__WEBPACK_IMPORTED_MODULE_10__["PageView"]; });\n\n/* harmony import */ var _Interfaces_Contracts_Generated_PageViewData__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Interfaces/Contracts/Generated/PageViewData */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewData.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PageViewData", function() { return _Interfaces_Contracts_Generated_PageViewData__WEBPACK_IMPORTED_MODULE_11__["PageViewData"]; });\n\n/* harmony import */ var _Telemetry_RemoteDependencyData__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Telemetry/RemoteDependencyData */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/RemoteDependencyData.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RemoteDependencyData", function() { return _Telemetry_RemoteDependencyData__WEBPACK_IMPORTED_MODULE_12__["RemoteDependencyData"]; });\n\n/* harmony import */ var _Telemetry_Trace__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Telemetry/Trace */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Trace.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Trace", function() { return _Telemetry_Trace__WEBPACK_IMPORTED_MODULE_13__["Trace"]; });\n\n/* harmony import */ var _Telemetry_PageViewPerformance__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Telemetry/PageViewPerformance */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageViewPerformance.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PageViewPerformance", function() { return _Telemetry_PageViewPerformance__WEBPACK_IMPORTED_MODULE_14__["PageViewPerformance"]; });\n\n/* harmony import */ var _Telemetry_Common_Data__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Telemetry/Common/Data */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Data.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Data", function() { return _Telemetry_Common_Data__WEBPACK_IMPORTED_MODULE_15__["Data"]; });\n\n/* harmony import */ var _Interfaces_Contracts_Generated_SeverityLevel__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Interfaces/Contracts/Generated/SeverityLevel */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SeverityLevel", function() { return _Interfaces_Contracts_Generated_SeverityLevel__WEBPACK_IMPORTED_MODULE_16__["SeverityLevel"]; });\n\n/* harmony import */ var _Interfaces_IConfig__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./Interfaces/IConfig */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/IConfig.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConfigurationManager", function() { return _Interfaces_IConfig__WEBPACK_IMPORTED_MODULE_17__["ConfigurationManager"]; });\n\n/* harmony import */ var _Interfaces_Contracts_Generated_ContextTagKeys__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./Interfaces/Contracts/Generated/ContextTagKeys */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ContextTagKeys", function() { return _Interfaces_Contracts_Generated_ContextTagKeys__WEBPACK_IMPORTED_MODULE_18__["ContextTagKeys"]; });\n\n/* harmony import */ var _Telemetry_Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./Telemetry/Common/DataSanitizer */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataSanitizer", function() { return _Telemetry_Common_DataSanitizer__WEBPACK_IMPORTED_MODULE_19__["DataSanitizer"]; });\n\n/* harmony import */ var _TelemetryItemCreator__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./TelemetryItemCreator */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/TelemetryItemCreator.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TelemetryItemCreator", function() { return _TelemetryItemCreator__WEBPACK_IMPORTED_MODULE_20__["TelemetryItemCreator"]; });\n\n/* harmony import */ var _Interfaces_PartAExtensions__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./Interfaces/PartAExtensions */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/PartAExtensions.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CtxTagKeys", function() { return _Interfaces_PartAExtensions__WEBPACK_IMPORTED_MODULE_21__["CtxTagKeys"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Extensions", function() { return _Interfaces_PartAExtensions__WEBPACK_IMPORTED_MODULE_21__["Extensions"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DistributedTracingModes", function() { return _Enums__WEBPACK_IMPORTED_MODULE_1__["DistributedTracingModes"]; });\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar PropertiesPluginIdentifier = "AppInsightsPropertiesPlugin";\r\nvar BreezeChannelIdentifier = "AppInsightsChannelPlugin";\r\n//# sourceMappingURL=applicationinsights-common.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js?')},"./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js ***!
  \*******************************************************************************************************************/
/*! exports provided: EventsDiscardedReason */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventsDiscardedReason", function() { return EventsDiscardedReason; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n */\r\nvar EventsDiscardedReason = {\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0,\r\n    /**\r\n     * Status set to non-retryable.\r\n     */\r\n    NonRetryableStatus: 1,\r\n    /**\r\n     * The event is invalid.\r\n     */\r\n    InvalidEvent: 2,\r\n    /**\r\n     * The size of the event is too large.\r\n     */\r\n    SizeLimitExceeded: 3,\r\n    /**\r\n     * The server is not accepting events from this instrumentation key.\r\n     */\r\n    KillSwitch: 4,\r\n    /**\r\n     * The event queue is full.\r\n     */\r\n    QueueFull: 5,\r\n};\r\n//# sourceMappingURL=EventsDiscardedReason.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js?')},"./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js ***!
  \**********************************************************************************************************/
/*! exports provided: LoggingSeverity, _InternalMessageId */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoggingSeverity", function() { return LoggingSeverity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_InternalMessageId", function() { return _InternalMessageId; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity["CRITICAL"] = 1] = "CRITICAL";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity["WARNING"] = 2] = "WARNING";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nvar _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n    InvalidEvent: 70,\r\n    FailedMonitorAjaxSetRequestHeader: 71\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js?')},"./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Interfaces/IChannelControls.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Interfaces/IChannelControls.js ***!
  \*******************************************************************************************************************/
/*! exports provided: MinChannelPriorty */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MinChannelPriorty", function() { return MinChannelPriorty; });\n\r\nvar MinChannelPriorty = 100;\r\n//# sourceMappingURL=IChannelControls.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Interfaces/IChannelControls.js?')},"./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/AppInsightsCore.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/AppInsightsCore.js ***!
  \*******************************************************************************************************/
/*! exports provided: AppInsightsCore */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppInsightsCore", function() { return AppInsightsCore; });\n/* harmony import */ var _JavaScriptSDK_Enums_EventsDiscardedReason__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../JavaScriptSDK.Enums/EventsDiscardedReason */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js");\n/* harmony import */ var _CoreUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CoreUtils */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/CoreUtils.js");\n/* harmony import */ var _NotificationManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./NotificationManager */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/NotificationManager.js");\n/* harmony import */ var _DiagnosticLogger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DiagnosticLogger */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/DiagnosticLogger.js");\n/* harmony import */ var _ChannelController__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ChannelController */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/ChannelController.js");\n\r\n\r\n\r\n\r\n\r\n"use strict";\r\nvar validationError = "Extensions must provide callback to initialize";\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        this._isInitialized = false;\r\n        this._extensions = new Array();\r\n        this._channelController = new _ChannelController__WEBPACK_IMPORTED_MODULE_4__["ChannelController"]();\r\n    }\r\n    AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n        var _this = this;\r\n        // Make sure core is only initialized once\r\n        if (this._isInitialized) {\r\n            throw Error("Core should not be initialized more than once");\r\n        }\r\n        if (!config || _CoreUtils__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(config.instrumentationKey)) {\r\n            throw Error("Please provide instrumentation key");\r\n        }\r\n        this.config = config;\r\n        this._notificationManager = new _NotificationManager__WEBPACK_IMPORTED_MODULE_2__["NotificationManager"]();\r\n        this.config.extensions = _CoreUtils__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(this.config.extensions) ? [] : this.config.extensions;\r\n        // add notification to the extensions in the config so other plugins can access it\r\n        this.config.extensionConfig = _CoreUtils__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(this.config.extensionConfig) ? {} : this.config.extensionConfig;\r\n        this.config.extensionConfig.NotificationManager = this._notificationManager;\r\n        this.logger = new _DiagnosticLogger__WEBPACK_IMPORTED_MODULE_3__["DiagnosticLogger"](config);\r\n        // Concat all available extensions \r\n        (_a = this._extensions).push.apply(_a, extensions.concat(this.config.extensions));\r\n        // Initial validation \r\n        this._extensions.forEach(function (extension) {\r\n            var isValid = true;\r\n            if (_CoreUtils__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(extension) || _CoreUtils__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(extension.initialize)) {\r\n                isValid = false;\r\n            }\r\n            if (!isValid) {\r\n                throw Error(validationError);\r\n            }\r\n        });\r\n        // Initial validation complete\r\n        this._extensions.push(this._channelController);\r\n        // Sort by priority\r\n        this._extensions = this._extensions.sort(function (a, b) {\r\n            var extA = a;\r\n            var extB = b;\r\n            var typeExtA = typeof extA.processTelemetry;\r\n            var typeExtB = typeof extB.processTelemetry;\r\n            if (typeExtA === \'function\' && typeExtB === \'function\') {\r\n                return extA.priority - extB.priority;\r\n            }\r\n            if (typeExtA === \'function\' && typeExtB !== \'function\') {\r\n                // keep non telemetryplugin specific extensions at start\r\n                return 1;\r\n            }\r\n            if (typeExtA !== \'function\' && typeExtB === \'function\') {\r\n                return -1;\r\n            }\r\n        });\r\n        // sort complete\r\n        // Check if any two extensions have the same priority, then warn to console\r\n        var priority = {};\r\n        this._extensions.forEach(function (ext) {\r\n            var t = ext;\r\n            if (t && t.priority) {\r\n                if (!_CoreUtils__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(priority[t.priority])) {\r\n                    _this.logger.warnToConsole("Two extensions have same priority" + priority[t.priority] + ", " + t.identifier);\r\n                }\r\n                else {\r\n                    priority[t.priority] = t.identifier; // set a value\r\n                }\r\n            }\r\n        });\r\n        var c = -1;\r\n        // Set next plugin for all until channel controller\r\n        for (var idx = 0; idx < this._extensions.length - 1; idx++) {\r\n            var curr = (this._extensions[idx]);\r\n            if (curr && typeof curr.processTelemetry !== \'function\') {\r\n                // these are initialized only, allowing an entry point for extensions to be initialized when SDK initializes\r\n                continue;\r\n            }\r\n            if (curr.priority === this._channelController.priority) {\r\n                c = idx + 1;\r\n                break; // channel controller will set remaining pipeline\r\n            }\r\n            this._extensions[idx].setNextPlugin(this._extensions[idx + 1]); // set next plugin\r\n        }\r\n        // initialize channel controller first, this will initialize all channel plugins\r\n        this._channelController.initialize(this.config, this, this._extensions);\r\n        // initialize remaining regular plugins\r\n        this._extensions.forEach(function (ext) {\r\n            var e = ext;\r\n            if (e && e.priority < _this._channelController.priority) {\r\n                ext.initialize(_this.config, _this, _this._extensions); // initialize\r\n            }\r\n        });\r\n        // Remove sender channels from main list\r\n        if (c < this._extensions.length) {\r\n            this._extensions.splice(c);\r\n        }\r\n        if (this.getTransmissionControls().length === 0) {\r\n            throw new Error("No channels available");\r\n        }\r\n        this._isInitialized = true;\r\n        var _a;\r\n    };\r\n    AppInsightsCore.prototype.getTransmissionControls = function () {\r\n        return this._channelController.ChannelControls;\r\n    };\r\n    AppInsightsCore.prototype.track = function (telemetryItem) {\r\n        if (telemetryItem === null) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            // throw error\r\n            throw Error("Invalid telemetry item");\r\n        }\r\n        if (!telemetryItem.iKey) {\r\n            // setup default iKey if not passed in\r\n            telemetryItem.iKey = this.config.instrumentationKey;\r\n        }\r\n        if (!telemetryItem.time) {\r\n            // add default timestamp if not passed in\r\n            telemetryItem.time = new Date().toISOString();\r\n        }\r\n        if (_CoreUtils__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(telemetryItem.ver)) {\r\n            // CommonSchema 4.0\r\n            telemetryItem.ver = "4.0";\r\n        }\r\n        // do basic validation before sending it through the pipeline\r\n        this._validateTelmetryItem(telemetryItem);\r\n        // invoke any common telemetry processors before sending through pipeline\r\n        if (this._extensions.length == 0) {\r\n            this._channelController.processTelemetry(telemetryItem); // Pass to Channel controller so data is sent to correct channel queues\r\n        }\r\n        var i = 0;\r\n        while (i < this._extensions.length) {\r\n            if (this._extensions[i].processTelemetry) {\r\n                this._extensions[i].processTelemetry(telemetryItem); // pass on to first extension that can support processing\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n     * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n     * called.\r\n     * @param {INotificationListener} listener - An INotificationListener object.\r\n     */\r\n    AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n        this._notificationManager.addNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - INotificationListener to remove.\r\n     */\r\n    AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n        this._notificationManager.removeNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Periodically check logger.queue for\r\n     */\r\n    AppInsightsCore.prototype.pollInternalLogs = function (eventName) {\r\n        var _this = this;\r\n        var interval = this.config.diagnosticLogInterval;\r\n        if (!(interval > 0)) {\r\n            interval = 10000;\r\n        }\r\n        return setInterval(function () {\r\n            var queue = _this.logger.queue;\r\n            queue.forEach(function (logMessage) {\r\n                var item = {\r\n                    name: eventName ? eventName : "InternalMessageId: " + logMessage.messageId,\r\n                    iKey: _this.config.instrumentationKey,\r\n                    time: new Date().toISOString(),\r\n                    baseType: _DiagnosticLogger__WEBPACK_IMPORTED_MODULE_3__["_InternalLogMessage"].dataType,\r\n                    baseData: { message: logMessage.message }\r\n                };\r\n                _this.track(item);\r\n            });\r\n            queue.length = 0;\r\n        }, interval);\r\n    };\r\n    AppInsightsCore.prototype._validateTelmetryItem = function (telemetryItem) {\r\n        if (_CoreUtils__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(telemetryItem.name)) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            throw Error("telemetry name required");\r\n        }\r\n        if (_CoreUtils__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(telemetryItem.time)) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            throw Error("telemetry timestamp required");\r\n        }\r\n        if (_CoreUtils__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(telemetryItem.iKey)) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            throw Error("telemetry instrumentationKey required");\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._notifyInvalidEvent = function (telemetryItem) {\r\n        this._notificationManager.eventsDiscarded([telemetryItem], _JavaScriptSDK_Enums_EventsDiscardedReason__WEBPACK_IMPORTED_MODULE_0__["EventsDiscardedReason"].InvalidEvent);\r\n    };\r\n    return AppInsightsCore;\r\n}());\r\n\r\n//# sourceMappingURL=AppInsightsCore.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/AppInsightsCore.js?')},"./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/ChannelController.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/ChannelController.js ***!
  \*********************************************************************************************************/
/*! exports provided: ChannelController */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChannelController", function() { return ChannelController; });\n/* harmony import */ var _CoreUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CoreUtils */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/CoreUtils.js");\n\r\n"use strict";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = "Channel has invalid priority";\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = "ChannelControllerPlugin";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, "ChannelControls", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (config.isCookieUseDisabled) {\r\n            _CoreUtils__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].disableCookies();\r\n        }\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1 = undefined;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\n\r\n//# sourceMappingURL=ChannelController.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/ChannelController.js?')},"./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/CoreUtils.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/CoreUtils.js ***!
  \*************************************************************************************************/
/*! exports provided: CoreUtils */function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CoreUtils\", function() { return CoreUtils; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n* Creates a new GUID.\r\n* @return {string} A GUID.\r\n*/\r\n    CoreUtils.disableCookies = function () {\r\n        CoreUtils._canUseCookies = false;\r\n    };\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            // tslint:disable-next-line:insecure-random\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\n\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/CoreUtils.js?")},"./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/DiagnosticLogger.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/DiagnosticLogger.js ***!
  \********************************************************************************************************/
/*! exports provided: _InternalLogMessage, DiagnosticLogger */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_InternalLogMessage", function() { return _InternalLogMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DiagnosticLogger", function() { return DiagnosticLogger; });\n/* harmony import */ var _JavaScriptSDK_Enums_LoggingEnums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../JavaScriptSDK.Enums/LoggingEnums */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js");\n/* harmony import */ var _CoreUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CoreUtils */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/CoreUtils.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        this.messageId = msgId;\r\n        this.message =\r\n            (isUserAct ? _InternalLogMessage.AiUserActionablePrefix : _InternalLogMessage.AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var diagnosticText = (msg ? " message:" + _InternalLogMessage.sanitizeDiagnosticText(msg) : "") +\r\n            (properties ? " props:" + _InternalLogMessage.sanitizeDiagnosticText(JSON.stringify(properties)) : "");\r\n        this.message += diagnosticText;\r\n    }\r\n    _InternalLogMessage.sanitizeDiagnosticText = function (text) {\r\n        return "\\"" + text.replace(/\\"/g, "") + "\\"";\r\n    };\r\n    _InternalLogMessage.dataType = "MessageData";\r\n    /**\r\n     * For user non actionable traces use AI Internal prefix.\r\n     */\r\n    _InternalLogMessage.AiNonUserActionablePrefix = "AI (Internal): ";\r\n    /**\r\n     * Prefix of the traces in portal.\r\n     */\r\n    _InternalLogMessage.AiUserActionablePrefix = "AI: ";\r\n    return _InternalLogMessage;\r\n}());\r\n\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        /**\r\n        *  Session storage key for the prefix for the key indicating message type already logged\r\n        */\r\n        this.AIInternalMessagePrefix = "AITR_";\r\n        /**\r\n         * When this is true the SDK will throw exceptions to aid in debugging.\r\n         */\r\n        this.enableDebugExceptions = function () { return false; };\r\n        /**\r\n         * 0: OFF (default)\r\n         * 1: CRITICAL\r\n         * 2: >= WARNING\r\n         */\r\n        this.consoleLoggingLevel = function () { return 0; };\r\n        /**\r\n         * 0: OFF\r\n         * 1: CRITICAL (default)\r\n         * 2: >= WARNING\r\n         */\r\n        this.telemetryLoggingLevel = function () { return 1; };\r\n        /**\r\n         * The maximum number of internal messages allowed to be sent per page view\r\n         */\r\n        this.maxInternalMessageLimit = function () { return 25; };\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        this._messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        this._messageLogged = {};\r\n        if (_CoreUtils__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(config)) {\r\n            // TODO: Use default config\r\n            // config = AppInsightsCore.defaultConfig;\r\n            // For now, use defaults specified in DiagnosticLogger members;\r\n            return;\r\n        }\r\n        if (!_CoreUtils__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(config.loggingLevelConsole)) {\r\n            this.consoleLoggingLevel = function () { return config.loggingLevelConsole; };\r\n        }\r\n        if (!_CoreUtils__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(config.loggingLevelTelemetry)) {\r\n            this.telemetryLoggingLevel = function () { return config.loggingLevelTelemetry; };\r\n        }\r\n        if (!_CoreUtils__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(config.maxMessageLimit)) {\r\n            this.maxInternalMessageLimit = function () { return config.maxMessageLimit; };\r\n        }\r\n        if (!_CoreUtils__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(config.enableDebugExceptions)) {\r\n            this.enableDebugExceptions = function () { return config.enableDebugExceptions; };\r\n        }\r\n    }\r\n    /**\r\n     * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The log message.\r\n     */\r\n    DiagnosticLogger.prototype.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n        if (this.enableDebugExceptions()) {\r\n            throw message;\r\n        }\r\n        else {\r\n            if (typeof (message) !== "undefined" && !!message) {\r\n                if (typeof (message.message) !== "undefined") {\r\n                    if (isUserAct) {\r\n                        // check if this message type was already logged to console for this page view and if so, don\'t log it again\r\n                        var messageKey = +message.messageId;\r\n                        if (!this._messageLogged[messageKey] || this.consoleLoggingLevel() >= _JavaScriptSDK_Enums_LoggingEnums__WEBPACK_IMPORTED_MODULE_0__["LoggingSeverity"].WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                            this._messageLogged[messageKey] = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // don\'t log internal AI traces in the console, unless the verbose logging is enabled\r\n                        if (this.consoleLoggingLevel() >= _JavaScriptSDK_Enums_LoggingEnums__WEBPACK_IMPORTED_MODULE_0__["LoggingSeverity"].WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                        }\r\n                    }\r\n                    this.logInternalMessage(severity, message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This will write a warning to the console if possible\r\n     * @param message {string} - The warning message\r\n     */\r\n    DiagnosticLogger.prototype.warnToConsole = function (message) {\r\n        if (typeof console !== "undefined" && !!console) {\r\n            if (typeof console.warn === "function") {\r\n                console.warn(message);\r\n            }\r\n            else if (typeof console.log === "function") {\r\n                console.log(message);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Resets the internal message count\r\n     */\r\n    DiagnosticLogger.prototype.resetInternalMessageCount = function () {\r\n        this._messageCount = 0;\r\n        this._messageLogged = {};\r\n    };\r\n    /**\r\n     * Logs a message to the internal queue.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The message to log.\r\n     */\r\n    DiagnosticLogger.prototype.logInternalMessage = function (severity, message) {\r\n        if (this._areInternalMessagesThrottled()) {\r\n            return;\r\n        }\r\n        // check if this message type was already logged for this session and if so, don\'t log it again\r\n        var logMessage = true;\r\n        var messageKey = this.AIInternalMessagePrefix + message.messageId;\r\n        // if the session storage is not available, limit to only one message type per page view\r\n        if (this._messageLogged[messageKey]) {\r\n            logMessage = false;\r\n        }\r\n        else {\r\n            this._messageLogged[messageKey] = true;\r\n        }\r\n        if (logMessage) {\r\n            // Push the event in the internal queue\r\n            if (severity <= this.telemetryLoggingLevel()) {\r\n                this.queue.push(message);\r\n                this._messageCount++;\r\n            }\r\n            // When throttle limit reached, send a special event\r\n            if (this._messageCount == this.maxInternalMessageLimit()) {\r\n                var throttleLimitMessage = "Internal events throttle limit per PageView reached for this app.";\r\n                var throttleMessage = new _InternalLogMessage(_JavaScriptSDK_Enums_LoggingEnums__WEBPACK_IMPORTED_MODULE_0__["_InternalMessageId"].MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                this.queue.push(throttleMessage);\r\n                this.warnToConsole(throttleLimitMessage);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Indicates whether the internal events are throttled\r\n     */\r\n    DiagnosticLogger.prototype._areInternalMessagesThrottled = function () {\r\n        return this._messageCount >= this.maxInternalMessageLimit();\r\n    };\r\n    return DiagnosticLogger;\r\n}());\r\n\r\n//# sourceMappingURL=DiagnosticLogger.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/DiagnosticLogger.js?')},"./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/NotificationManager.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/NotificationManager.js ***!
  \***********************************************************************************************************/
/*! exports provided: NotificationManager */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationManager", function() { return NotificationManager; });\n/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager() {\r\n        this.listeners = [];\r\n    }\r\n    /**\r\n     * Adds a notification listener.\r\n     * @param {INotificationListener} listener - The notification listener to be added.\r\n     */\r\n    NotificationManager.prototype.addNotificationListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n     */\r\n    NotificationManager.prototype.removeNotificationListener = function (listener) {\r\n        var index = this.listeners.indexOf(listener);\r\n        while (index > -1) {\r\n            this.listeners.splice(index, 1);\r\n            index = this.listeners.indexOf(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events sent.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n     */\r\n    NotificationManager.prototype.eventsSent = function (events) {\r\n        var _this = this;\r\n        var _loop_1 = function (i) {\r\n            if (this_1.listeners[i].eventsSent) {\r\n                setTimeout(function () { return _this.listeners[i].eventsSent(events); }, 0);\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events being discarded.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n     * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n     * constant should be used to check the different values.\r\n     */\r\n    NotificationManager.prototype.eventsDiscarded = function (events, reason) {\r\n        var _this = this;\r\n        var _loop_2 = function (i) {\r\n            if (this_2.listeners[i].eventsDiscarded) {\r\n                setTimeout(function () { return _this.listeners[i].eventsDiscarded(events, reason); }, 0);\r\n            }\r\n        };\r\n        var this_2 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_2(i);\r\n        }\r\n    };\r\n    return NotificationManager;\r\n}());\r\n\r\n//# sourceMappingURL=NotificationManager.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/NotificationManager.js?')},"./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js ***!
  \*****************************************************************************************************/
/*! exports provided: MinChannelPriorty, EventsDiscardedReason, AppInsightsCore, CoreUtils, NotificationManager, DiagnosticLogger, _InternalLogMessage, _InternalMessageId, LoggingSeverity */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _JavaScriptSDK_Interfaces_IChannelControls__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./JavaScriptSDK.Interfaces/IChannelControls */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Interfaces/IChannelControls.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MinChannelPriorty", function() { return _JavaScriptSDK_Interfaces_IChannelControls__WEBPACK_IMPORTED_MODULE_0__["MinChannelPriorty"]; });\n\n/* harmony import */ var _JavaScriptSDK_Enums_EventsDiscardedReason__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./JavaScriptSDK.Enums/EventsDiscardedReason */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventsDiscardedReason", function() { return _JavaScriptSDK_Enums_EventsDiscardedReason__WEBPACK_IMPORTED_MODULE_1__["EventsDiscardedReason"]; });\n\n/* harmony import */ var _JavaScriptSDK_AppInsightsCore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./JavaScriptSDK/AppInsightsCore */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/AppInsightsCore.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AppInsightsCore", function() { return _JavaScriptSDK_AppInsightsCore__WEBPACK_IMPORTED_MODULE_2__["AppInsightsCore"]; });\n\n/* harmony import */ var _JavaScriptSDK_CoreUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./JavaScriptSDK/CoreUtils */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/CoreUtils.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CoreUtils", function() { return _JavaScriptSDK_CoreUtils__WEBPACK_IMPORTED_MODULE_3__["CoreUtils"]; });\n\n/* harmony import */ var _JavaScriptSDK_NotificationManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./JavaScriptSDK/NotificationManager */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/NotificationManager.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NotificationManager", function() { return _JavaScriptSDK_NotificationManager__WEBPACK_IMPORTED_MODULE_4__["NotificationManager"]; });\n\n/* harmony import */ var _JavaScriptSDK_DiagnosticLogger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./JavaScriptSDK/DiagnosticLogger */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/DiagnosticLogger.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DiagnosticLogger", function() { return _JavaScriptSDK_DiagnosticLogger__WEBPACK_IMPORTED_MODULE_5__["DiagnosticLogger"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_InternalLogMessage", function() { return _JavaScriptSDK_DiagnosticLogger__WEBPACK_IMPORTED_MODULE_5__["_InternalLogMessage"]; });\n\n/* harmony import */ var _JavaScriptSDK_Enums_LoggingEnums__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./JavaScriptSDK.Enums/LoggingEnums */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_InternalMessageId", function() { return _JavaScriptSDK_Enums_LoggingEnums__WEBPACK_IMPORTED_MODULE_6__["_InternalMessageId"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LoggingSeverity", function() { return _JavaScriptSDK_Enums_LoggingEnums__WEBPACK_IMPORTED_MODULE_6__["LoggingSeverity"]; });\n\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=applicationinsights-core-js.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js?')},"./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/TraceParent.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/TraceParent.js ***!
  \*********************************************************************************************/
/*! exports provided: Traceparent */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Traceparent", function() { return Traceparent; });\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n\r\nvar Traceparent = /** @class */ (function () {\r\n    function Traceparent(traceId, spanId) {\r\n        this.traceFlag = Traceparent.DEFAULT_TRACE_FLAG;\r\n        this.version = Traceparent.DEFAULT_VERSION;\r\n        if (traceId && Traceparent.isValidTraceId(traceId)) {\r\n            this.traceId = traceId;\r\n        }\r\n        else {\r\n            this.traceId = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].generateW3CId();\r\n        }\r\n        if (spanId && Traceparent.isValidSpanId(spanId)) {\r\n            this.spanId = spanId;\r\n        }\r\n        else {\r\n            this.spanId = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].generateW3CId().substr(0, 16);\r\n        }\r\n    }\r\n    Traceparent.isValidTraceId = function (id) {\r\n        return id.match(/^[0-9a-f]{32}$/) && id !== "00000000000000000000000000000000";\r\n    };\r\n    Traceparent.isValidSpanId = function (id) {\r\n        return id.match(/^[0-9a-f]{16}$/) && id !== "0000000000000000";\r\n    };\r\n    Traceparent.prototype.toString = function () {\r\n        return this.version + "-" + this.traceId + "-" + this.spanId + "-" + this.traceFlag;\r\n    };\r\n    Traceparent.DEFAULT_TRACE_FLAG = "00";\r\n    Traceparent.DEFAULT_VERSION = "00";\r\n    return Traceparent;\r\n}());\r\n\r\n//# sourceMappingURL=TraceParent.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/TraceParent.js?')},"./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajax.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajax.js ***!
  \**************************************************************************************/
/*! exports provided: AjaxMonitor */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AjaxMonitor", function() { return AjaxMonitor; });\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n/* harmony import */ var _ajaxRecord__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ajaxRecord */ "./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajaxRecord.js");\n/* harmony import */ var _ajaxUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ajaxUtils */ "./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajaxUtils.js");\n/* harmony import */ var _TraceParent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TraceParent */ "./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/TraceParent.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\n\r\n\r\nvar AjaxMonitor = /** @class */ (function () {\r\n    function AjaxMonitor() {\r\n        this._trackAjaxAttempts = 0;\r\n        this.identifier = AjaxMonitor.identifier;\r\n        this.priority = 120;\r\n        this.currentWindowHost = window && window.location && window.location.host && window.location.host.toLowerCase();\r\n        this.initialized = false;\r\n        this._fetchInitialized = false;\r\n    }\r\n    ///<summary>Verifies that particalar instance of XMLHttpRequest needs to be monitored</summary>\r\n    ///<param name="excludeAjaxDataValidation">Optional parameter. True if ajaxData must be excluded from verification</param>\r\n    ///<returns type="bool">True if instance needs to be monitored, otherwise false</returns>\r\n    AjaxMonitor.prototype.isMonitoredInstance = function (xhr, excludeAjaxDataValidation, request, init) {\r\n        var disabledProperty = false;\r\n        var ajaxValidation = true;\r\n        var initialized = false;\r\n        if (typeof request !== \'undefined\') {\r\n            initialized = this._fetchInitialized;\r\n            // Look for DisabledPropertyName in either Request or RequestInit\r\n            disabledProperty = (typeof request === \'object\' ? request[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DisabledPropertyName"]] === true : false) ||\r\n                (init ? init[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DisabledPropertyName"]] === true : false);\r\n        }\r\n        else if (typeof xhr !== \'undefined\') {\r\n            initialized = this.initialized;\r\n            disabledProperty = xhr[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DisabledPropertyName"]] === true;\r\n            ajaxValidation = excludeAjaxDataValidation === true || !_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(xhr.ajaxData);\r\n        }\r\n        // checking to see that all interested functions on xhr were instrumented\r\n        return initialized\r\n            // checking on ajaxData to see that it was not removed in user code\r\n            && ajaxValidation\r\n            // check that this instance is not not used by ajax call performed inside client side monitoring to send data to collector\r\n            && !disabledProperty;\r\n    };\r\n    ///<summary>Determines whether ajax monitoring can be enabled on this document</summary>\r\n    ///<returns>True if Ajax monitoring is supported on this page, otherwise false</returns>\r\n    AjaxMonitor.prototype.supportsAjaxMonitoring = function () {\r\n        var result = true;\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(XMLHttpRequest) ||\r\n            _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(XMLHttpRequest.prototype) ||\r\n            _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(XMLHttpRequest.prototype.open) ||\r\n            _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(XMLHttpRequest.prototype.send) ||\r\n            _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(XMLHttpRequest.prototype.abort)) {\r\n            result = false;\r\n        }\r\n        // disable in IE8 or older (https://www.w3schools.com/jsref/jsref_trim_string.asp)\r\n        try {\r\n            " a ".trim();\r\n        }\r\n        catch (ex) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.instrumentOpen = function () {\r\n        var originalOpen = XMLHttpRequest.prototype.open;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.open = function (method, url, async) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this, true) &&\r\n                    (!this.ajaxData ||\r\n                        !this.ajaxData.xhrMonitoringState.openDone)) {\r\n                    ajaxMonitorInstance.openHandler(this, method, url, async);\r\n                }\r\n            }\r\n            catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedMonitorAjaxOpen, "Failed to monitor XMLHttpRequest.open, monitoring data for this ajax call may be incorrect.", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e)\r\n                });\r\n            }\r\n            return originalOpen.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.openHandler = function (xhr, method, url, async) {\r\n        var traceID = (this._context && this._context.telemetryTrace && this._context.telemetryTrace.traceID) || _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].generateW3CId();\r\n        var spanID = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].generateW3CId().substr(0, 16);\r\n        var ajaxData = new _ajaxRecord__WEBPACK_IMPORTED_MODULE_2__["ajaxRecord"](traceID, spanID, this._core.logger);\r\n        ajaxData.method = method;\r\n        ajaxData.requestUrl = url;\r\n        ajaxData.xhrMonitoringState.openDone = true;\r\n        ajaxData.requestHeaders = {};\r\n        xhr.ajaxData = ajaxData;\r\n        this.attachToOnReadyStateChange(xhr);\r\n    };\r\n    AjaxMonitor.getFailedAjaxDiagnosticsMessage = function (xhr) {\r\n        var result = "";\r\n        try {\r\n            if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(xhr) &&\r\n                !_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(xhr.ajaxData) &&\r\n                !_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(xhr.ajaxData.requestUrl)) {\r\n                result += "(url: \'" + xhr.ajaxData.requestUrl + "\')";\r\n            }\r\n        }\r\n        catch (e) { }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.instrumentSend = function () {\r\n        var originalSend = XMLHttpRequest.prototype.send;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.send = function (content) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this) && !this.ajaxData.xhrMonitoringState.sendDone) {\r\n                    ajaxMonitorInstance.sendHandler(this, content);\r\n                }\r\n            }\r\n            catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedMonitorAjaxSend, "Failed to monitor XMLHttpRequest, monitoring data for this ajax call may be incorrect.", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e)\r\n                });\r\n            }\r\n            return originalSend.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.sendHandler = function (xhr, content) {\r\n        xhr.ajaxData.requestSentTime = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].Now();\r\n        xhr = this.includeCorrelationHeaders(xhr.ajaxData, undefined, undefined, xhr);\r\n        xhr.ajaxData.xhrMonitoringState.sendDone = true;\r\n    };\r\n    AjaxMonitor.prototype.instrumentAbort = function () {\r\n        var originalAbort = XMLHttpRequest.prototype.abort;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.abort = function () {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this) && !this.ajaxData.xhrMonitoringState.abortDone) {\r\n                    this.ajaxData.aborted = 1;\r\n                    this.ajaxData.xhrMonitoringState.abortDone = true;\r\n                }\r\n            }\r\n            catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedMonitorAjaxAbort, "Failed to monitor XMLHttpRequest.abort, monitoring data for this ajax call may be incorrect.", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e)\r\n                });\r\n            }\r\n            return originalAbort.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.instrumentSetRequestHeader = function () {\r\n        if (!this._config.enableRequestHeaderTracking) {\r\n            return;\r\n        }\r\n        var originalSetRequestHeader = XMLHttpRequest.prototype.setRequestHeader;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.setRequestHeader = function (header, value) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this)) {\r\n                    this.ajaxData.requestHeaders[header] = value;\r\n                }\r\n            }\r\n            catch (e) {\r\n                ajaxMonitorInstance._core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedMonitorAjaxSetRequestHeader, "Failed to monitor XMLHttpRequest.setRequestHeader, monitoring data for this ajax call may be incorrect.", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e)\r\n                });\r\n            }\r\n            return originalSetRequestHeader.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.attachToOnReadyStateChange = function (xhr) {\r\n        var ajaxMonitorInstance = this;\r\n        xhr.ajaxData.xhrMonitoringState.onreadystatechangeCallbackAttached = _ajaxUtils__WEBPACK_IMPORTED_MODULE_3__["EventHelper"].AttachEvent(xhr, "readystatechange", function () {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(xhr)) {\r\n                    if (xhr.readyState === 4) {\r\n                        ajaxMonitorInstance.onAjaxComplete(xhr);\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                var exceptionText = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e);\r\n                // ignore messages with c00c023f, as this a known IE9 XHR abort issue\r\n                if (!exceptionText || exceptionText.toLowerCase().indexOf("c00c023f") == -1) {\r\n                    ajaxMonitorInstance._core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedMonitorAjaxRSC, "Failed to monitor XMLHttpRequest \'readystatechange\' event handler, monitoring data for this ajax call may be incorrect.", {\r\n                        ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                        exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e)\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    AjaxMonitor.prototype.onAjaxComplete = function (xhr) {\r\n        xhr.ajaxData.responseFinishedTime = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].Now();\r\n        xhr.ajaxData.status = xhr.status;\r\n        xhr.ajaxData.CalculateMetrics();\r\n        if (xhr.ajaxData.ajaxTotalDuration < 0) {\r\n            this._core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedMonitorAjaxDur, "Failed to calculate the duration of the ajax call, monitoring data for this ajax call won\'t be sent.", {\r\n                ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                requestSentTime: xhr.ajaxData.requestSentTime,\r\n                responseFinishedTime: xhr.ajaxData.responseFinishedTime\r\n            });\r\n        }\r\n        else {\r\n            var dependency = {\r\n                id: "|" + xhr.ajaxData.traceID + "." + xhr.ajaxData.spanID,\r\n                target: xhr.ajaxData.getAbsoluteUrl(),\r\n                name: xhr.ajaxData.getPathName(),\r\n                type: "Ajax",\r\n                duration: xhr.ajaxData.ajaxTotalDuration,\r\n                success: (+(xhr.ajaxData.status)) >= 200 && (+(xhr.ajaxData.status)) < 400,\r\n                responseCode: +xhr.ajaxData.status,\r\n                method: xhr.ajaxData.method\r\n            };\r\n            // enrich dependency target with correlation context from the server\r\n            var correlationContext = this.getAjaxCorrelationContext(xhr);\r\n            if (correlationContext) {\r\n                dependency.correlationContext = /* dependency.target + " | " + */ correlationContext;\r\n            }\r\n            if (this._config.enableRequestHeaderTracking) {\r\n                if (Object.keys(xhr.ajaxData.requestHeaders).length > 0) {\r\n                    dependency.properties = dependency.properties || {};\r\n                    dependency.properties.requestHeaders = {};\r\n                    dependency.properties.requestHeaders = xhr.ajaxData.requestHeaders;\r\n                }\r\n            }\r\n            if (this._config.enableResponseHeaderTracking) {\r\n                var headers = xhr.getAllResponseHeaders();\r\n                if (headers) {\r\n                    // xhr.getAllResponseHeaders() method returns all the response headers, separated by CRLF, as a string or null\r\n                    // the regex converts the header string into an array of individual headers\r\n                    var arr = headers.trim().split(/[\\r\\n]+/);\r\n                    var responseHeaderMap_1 = {};\r\n                    arr.forEach(function (line) {\r\n                        var parts = line.split(\': \');\r\n                        var header = parts.shift();\r\n                        var value = parts.join(\': \');\r\n                        responseHeaderMap_1[header] = value;\r\n                    });\r\n                    if (Object.keys(responseHeaderMap_1).length > 0) {\r\n                        dependency.properties = dependency.properties || {};\r\n                        dependency.properties.responseHeaders = {};\r\n                        dependency.properties.responseHeaders = responseHeaderMap_1;\r\n                    }\r\n                }\r\n            }\r\n            this.trackDependencyDataInternal(dependency);\r\n            xhr.ajaxData = null;\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.getAjaxCorrelationContext = function (xhr) {\r\n        try {\r\n            var responseHeadersString = xhr.getAllResponseHeaders();\r\n            if (responseHeadersString !== null) {\r\n                var index = responseHeadersString.toLowerCase().indexOf(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].requestContextHeaderLowerCase);\r\n                if (index !== -1) {\r\n                    var responseHeader = xhr.getResponseHeader(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].requestContextHeader);\r\n                    return _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["CorrelationIdHelper"].getCorrelationContext(responseHeader);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedMonitorAjaxGetCorrelationHeader, "Failed to get Request-Context correlation header as it may be not included in the response or not accessible.", {\r\n                ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e)\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Logs dependency call\r\n     * @param dependencyData dependency data object\r\n     */\r\n    AjaxMonitor.prototype.trackDependencyDataInternal = function (dependency, properties, systemProperties) {\r\n        if (this._config.maxAjaxCallsPerView === -1 || this._trackAjaxAttempts < this._config.maxAjaxCallsPerView) {\r\n            var item = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["TelemetryItemCreator"].create(dependency, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RemoteDependencyData"].dataType, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RemoteDependencyData"].envelopeType, this._core.logger, properties, systemProperties);\r\n            this._core.track(item);\r\n        }\r\n        else if (this._trackAjaxAttempts === this._config.maxAjaxCallsPerView) {\r\n            this._core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].MaxAjaxPerPVExceeded, "Maximum ajax per page view limit reached, ajax monitoring is paused until the next trackPageView(). In order to increase the limit set the maxAjaxCallsPerView configuration parameter.", true);\r\n        }\r\n        ++this._trackAjaxAttempts;\r\n    };\r\n    AjaxMonitor.prototype.trackDependencyData = function (dependency, properties) {\r\n        this.trackDependencyDataInternal(dependency, properties);\r\n    };\r\n    AjaxMonitor.prototype.processTelemetry = function (item) {\r\n        if (this._nextPlugin && this._nextPlugin.processTelemetry) {\r\n            this._nextPlugin.processTelemetry(item);\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.setNextPlugin = function (next) {\r\n        if (next) {\r\n            this._nextPlugin = next;\r\n        }\r\n    };\r\n    // Fetch Stuff\r\n    AjaxMonitor.prototype.instrumentFetch = function () {\r\n        if (!this.supportsFetch() || this._fetchInitialized) {\r\n            return;\r\n        }\r\n        var originalFetch = window.fetch;\r\n        var fetchMonitorInstance = this;\r\n        window.fetch = function fetch(input, init) {\r\n            var fetchData;\r\n            if (fetchMonitorInstance.isFetchInstrumented(input) && fetchMonitorInstance.isMonitoredInstance(undefined, undefined, input, init)) {\r\n                try {\r\n                    fetchData = fetchMonitorInstance.createFetchRecord(input, init);\r\n                    init = fetchMonitorInstance.includeCorrelationHeaders(fetchData, input, init);\r\n                }\r\n                catch (e) {\r\n                    fetchMonitorInstance._core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedMonitorAjaxOpen, "Failed to monitor Window.fetch, monitoring data for this fetch call may be incorrect.", {\r\n                        ajaxDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                        exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e)\r\n                    });\r\n                }\r\n            }\r\n            return originalFetch(input, init)\r\n                .then(function (response) {\r\n                fetchMonitorInstance.onFetchComplete(response, fetchData);\r\n                return response;\r\n            })\r\n                .catch(function (reason) {\r\n                fetchMonitorInstance.onFetchFailed(input, fetchData, reason);\r\n                throw reason;\r\n            });\r\n        };\r\n        this._fetchInitialized = true;\r\n    };\r\n    AjaxMonitor.prototype.isFetchInstrumented = function (input) {\r\n        return this._fetchInitialized && input[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DisabledPropertyName"]] !== true;\r\n    };\r\n    AjaxMonitor.prototype.supportsFetch = function () {\r\n        var result = true;\r\n        if (!window || _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(window.Request) ||\r\n            _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(window.Request.prototype) ||\r\n            _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(window.fetch)) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.createFetchRecord = function (input, init) {\r\n        var traceID = (this._context && this._context.telemetryTrace && this._context.telemetryTrace.traceID) || _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].generateW3CId();\r\n        var spanID = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].generateW3CId().substr(0, 16);\r\n        var ajaxData = new _ajaxRecord__WEBPACK_IMPORTED_MODULE_2__["ajaxRecord"](traceID, spanID, this._core.logger);\r\n        ajaxData.requestSentTime = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].Now();\r\n        if (input instanceof Request) {\r\n            ajaxData.requestUrl = input ? input.url : "";\r\n        }\r\n        else {\r\n            ajaxData.requestUrl = input;\r\n        }\r\n        if (init && init.method) {\r\n            ajaxData.method = init.method;\r\n        }\r\n        else if (input && input instanceof Request) {\r\n            ajaxData.method = input.method;\r\n        }\r\n        else {\r\n            ajaxData.method = "GET";\r\n        }\r\n        if (init && init.headers && this._config.enableRequestHeaderTracking) {\r\n            ajaxData.requestHeaders = init.headers;\r\n        }\r\n        else {\r\n            ajaxData.requestHeaders = {};\r\n        }\r\n        return ajaxData;\r\n    };\r\n    AjaxMonitor.prototype.includeCorrelationHeaders = function (ajaxData, input, init, xhr) {\r\n        if (input) {\r\n            if (_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["CorrelationIdHelper"].canIncludeCorrelationHeader(this._config, ajaxData.getAbsoluteUrl(), this.currentWindowHost)) {\r\n                if (!init) {\r\n                    init = {};\r\n                }\r\n                // init headers override original request headers\r\n                // so, if they exist use only them, otherwise use request\'s because they should have been applied in the first place\r\n                // not using original request headers will result in them being lost\r\n                init.headers = new Headers(init.headers || (input instanceof Request ? (input.headers || {}) : {}));\r\n                if (this._isUsingAIHeaders) {\r\n                    var id = "|" + ajaxData.traceID + "." + ajaxData.spanID;\r\n                    init.headers.set(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].requestIdHeader, id);\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        ajaxData.requestHeaders[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].requestIdHeader] = id;\r\n                    }\r\n                }\r\n                var appId_1 = this._config.appId || this._context.appId();\r\n                if (appId_1) {\r\n                    init.headers.set(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].requestContextHeader, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].requestContextAppIdFormat + appId_1);\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        ajaxData.requestHeaders[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].requestContextHeader] = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].requestContextAppIdFormat + appId_1;\r\n                    }\r\n                }\r\n                if (this._isUsingW3CHeaders) {\r\n                    var traceparent = new _TraceParent__WEBPACK_IMPORTED_MODULE_4__["Traceparent"](ajaxData.traceID, ajaxData.spanID);\r\n                    init.headers.set(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].traceParentHeader, traceparent.toString());\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        ajaxData.requestHeaders[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].traceParentHeader] = traceparent.toString();\r\n                    }\r\n                }\r\n                return init;\r\n            }\r\n            return init;\r\n        }\r\n        else if (xhr) {\r\n            if (this.currentWindowHost && _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["CorrelationIdHelper"].canIncludeCorrelationHeader(this._config, xhr.ajaxData.getAbsoluteUrl(), this.currentWindowHost)) {\r\n                if (this._isUsingAIHeaders) {\r\n                    var id = "|" + xhr.ajaxData.traceID + "." + xhr.ajaxData.spanID;\r\n                    xhr.setRequestHeader(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].requestIdHeader, id);\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        xhr.ajaxData.requestHeaders[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].requestIdHeader] = id;\r\n                    }\r\n                }\r\n                var appId = this._config.appId || this._context.appId();\r\n                if (appId) {\r\n                    xhr.setRequestHeader(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].requestContextHeader, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].requestContextAppIdFormat + appId);\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        xhr.ajaxData.requestHeaders[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].requestContextHeader] = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].requestContextAppIdFormat + appId;\r\n                    }\r\n                }\r\n                if (this._isUsingW3CHeaders) {\r\n                    var traceparent = new _TraceParent__WEBPACK_IMPORTED_MODULE_4__["Traceparent"](xhr.ajaxData.traceID, xhr.ajaxData.spanID);\r\n                    xhr.setRequestHeader(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].traceParentHeader, traceparent.toString());\r\n                    if (this._config.enableRequestHeaderTracking) {\r\n                        xhr.ajaxData.requestHeaders[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].traceParentHeader] = traceparent.toString();\r\n                    }\r\n                }\r\n            }\r\n            return xhr;\r\n        }\r\n        return undefined;\r\n    };\r\n    AjaxMonitor.prototype.getFailedFetchDiagnosticsMessage = function (input) {\r\n        var result = "";\r\n        try {\r\n            if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(input)) {\r\n                if (typeof (input) === "string") {\r\n                    result += "(url: \'" + input + "\')";\r\n                }\r\n                else {\r\n                    result += "(url: \'" + input.url + "\')";\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedMonitorAjaxOpen, "Failed to grab failed fetch diagnostics message", { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e) });\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.onFetchComplete = function (response, ajaxData) {\r\n        if (!ajaxData) {\r\n            return;\r\n        }\r\n        try {\r\n            ajaxData.responseFinishedTime = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].Now();\r\n            ajaxData.CalculateMetrics();\r\n            if (ajaxData.ajaxTotalDuration < 0) {\r\n                this._core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedMonitorAjaxDur, "Failed to calculate the duration of the fetch call, monitoring data for this fetch call won\'t be sent.", {\r\n                    fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                    requestSentTime: ajaxData.requestSentTime,\r\n                    responseFinishedTime: ajaxData.responseFinishedTime\r\n                });\r\n            }\r\n            else {\r\n                var dependency = {\r\n                    id: "|" + ajaxData.traceID + "." + ajaxData.spanID,\r\n                    target: ajaxData.getAbsoluteUrl(),\r\n                    name: ajaxData.getPathName(),\r\n                    type: "Fetch",\r\n                    duration: ajaxData.ajaxTotalDuration,\r\n                    success: response.status >= 200 && response.status < 400,\r\n                    responseCode: response.status,\r\n                    properties: { HttpMethod: ajaxData.method }\r\n                };\r\n                // enrich dependency target with correlation context from the server\r\n                var correlationContext = this.getFetchCorrelationContext(response);\r\n                if (correlationContext) {\r\n                    dependency.correlationContext = correlationContext;\r\n                }\r\n                if (this._config.enableRequestHeaderTracking) {\r\n                    if (Object.keys(ajaxData.requestHeaders).length > 0) {\r\n                        dependency.properties = dependency.properties || {};\r\n                        dependency.properties.requestHeaders = ajaxData.requestHeaders;\r\n                    }\r\n                }\r\n                if (this._config.enableResponseHeaderTracking) {\r\n                    var responseHeaderMap_2 = {};\r\n                    response.headers.forEach(function (value, name) {\r\n                        responseHeaderMap_2[name] = value;\r\n                    });\r\n                    if (Object.keys(responseHeaderMap_2).length > 0) {\r\n                        dependency.properties = dependency.properties || {};\r\n                        dependency.properties.responseHeaders = responseHeaderMap_2;\r\n                    }\r\n                }\r\n                this.trackDependencyDataInternal(dependency);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedMonitorAjaxGetCorrelationHeader, "Failed to calculate the duration of the fetch call, monitoring data for this fetch call won\'t be sent.", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.onFetchFailed = function (input, ajaxData, reason) {\r\n        if (!ajaxData) {\r\n            return;\r\n        }\r\n        try {\r\n            ajaxData.responseFinishedTime = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].Now();\r\n            ajaxData.CalculateMetrics();\r\n            if (ajaxData.ajaxTotalDuration < 0) {\r\n                this._core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedMonitorAjaxDur, "Failed to calculate the duration of the failed fetch call, monitoring data for this fetch call won\'t be sent.", {\r\n                    fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                    requestSentTime: ajaxData.requestSentTime,\r\n                    responseFinishedTime: ajaxData.responseFinishedTime\r\n                });\r\n            }\r\n            else {\r\n                var dependency = {\r\n                    id: "|" + ajaxData.traceID + "." + ajaxData.spanID,\r\n                    target: ajaxData.getAbsoluteUrl(),\r\n                    name: ajaxData.getPathName(),\r\n                    type: "Fetch",\r\n                    duration: ajaxData.ajaxTotalDuration,\r\n                    success: false,\r\n                    responseCode: 0,\r\n                    properties: { HttpMethod: ajaxData.method }\r\n                };\r\n                this.trackDependencyDataInternal(dependency, { error: reason.message });\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedMonitorAjaxGetCorrelationHeader, "Failed to calculate the duration of the failed fetch call, monitoring data for this fetch call won\'t be sent.", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.getFetchCorrelationContext = function (response) {\r\n        try {\r\n            var responseHeader = response.headers.get(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["RequestHeaders"].requestContextHeader);\r\n            return _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["CorrelationIdHelper"].getCorrelationContext(responseHeader);\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].FailedMonitorAjaxGetCorrelationHeader, "Failed to get Request-Context correlation header as it may be not included in the response or not accessible.", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.instrumentXhr = function () {\r\n        if (this.supportsAjaxMonitoring() && !this.initialized) {\r\n            this.instrumentOpen();\r\n            this.instrumentSend();\r\n            this.instrumentAbort();\r\n            this.instrumentSetRequestHeader();\r\n            this.initialized = true;\r\n        }\r\n    };\r\n    AjaxMonitor.getDefaultConfig = function () {\r\n        var config = {\r\n            maxAjaxCallsPerView: 500,\r\n            disableAjaxTracking: false,\r\n            disableFetchTracking: true,\r\n            disableCorrelationHeaders: false,\r\n            distributedTracingMode: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DistributedTracingModes"].AI,\r\n            correlationHeaderExcludedDomains: [\r\n                "*.blob.core.windows.net",\r\n                "*.blob.core.chinacloudapi.cn",\r\n                "*.blob.core.cloudapi.de",\r\n                "*.blob.core.usgovcloudapi.net"\r\n            ],\r\n            correlationHeaderDomains: undefined,\r\n            appId: undefined,\r\n            enableCorsCorrelation: false,\r\n            enableRequestHeaderTracking: false,\r\n            enableResponseHeaderTracking: false\r\n        };\r\n        return config;\r\n    };\r\n    AjaxMonitor.getEmptyConfig = function () {\r\n        return {\r\n            maxAjaxCallsPerView: undefined,\r\n            disableAjaxTracking: undefined,\r\n            disableFetchTracking: undefined,\r\n            disableCorrelationHeaders: undefined,\r\n            distributedTracingMode: undefined,\r\n            correlationHeaderExcludedDomains: undefined,\r\n            appId: undefined,\r\n            enableCorsCorrelation: undefined,\r\n            correlationHeaderDomains: undefined,\r\n            enableRequestHeaderTracking: undefined,\r\n            enableResponseHeaderTracking: undefined\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.initialize = function (config, core, extensions) {\r\n        if (!this.initialized && !this._fetchInitialized) {\r\n            this._core = core;\r\n            var defaultConfig = AjaxMonitor.getDefaultConfig();\r\n            this._config = AjaxMonitor.getEmptyConfig();\r\n            for (var field in defaultConfig) {\r\n                this._config[field] = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["ConfigurationManager"].getConfig(config, field, AjaxMonitor.identifier, defaultConfig[field]);\r\n            }\r\n            this._isUsingAIHeaders = this._config.distributedTracingMode === _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DistributedTracingModes"].AI || this._config.distributedTracingMode === _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DistributedTracingModes"].AI_AND_W3C;\r\n            this._isUsingW3CHeaders = this._config.distributedTracingMode === _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DistributedTracingModes"].AI_AND_W3C || this._config.distributedTracingMode === _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DistributedTracingModes"].W3C;\r\n            if (this._config.disableAjaxTracking === false) {\r\n                this.instrumentXhr();\r\n            }\r\n            if (this._config.disableFetchTracking === false) {\r\n                this.instrumentFetch();\r\n            }\r\n            if (extensions.length > 0 && extensions) {\r\n                var propExt = void 0, extIx = 0;\r\n                while (!propExt && extIx < extensions.length) {\r\n                    if (extensions[extIx] && extensions[extIx].identifier === _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["PropertiesPluginIdentifier"]) {\r\n                        propExt = extensions[extIx];\r\n                    }\r\n                    extIx++;\r\n                }\r\n                if (propExt) {\r\n                    this._context = propExt.context; // we could move IPropertiesPlugin to common as well\r\n                }\r\n            }\r\n        }\r\n    };\r\n    AjaxMonitor.identifier = "AjaxDependencyPlugin";\r\n    return AjaxMonitor;\r\n}());\r\n\r\n//# sourceMappingURL=ajax.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajax.js?')},"./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajaxRecord.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajaxRecord.js ***!
  \********************************************************************************************/
/*! exports provided: XHRMonitoringState, ajaxRecord */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XHRMonitoringState", function() { return XHRMonitoringState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ajaxRecord", function() { return ajaxRecord; });\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nvar XHRMonitoringState = /** @class */ (function () {\r\n    function XHRMonitoringState() {\r\n        this.openDone = false;\r\n        this.setRequestHeaderDone = false;\r\n        this.sendDone = false;\r\n        this.abortDone = false;\r\n        //<summary>True, if onreadyStateChangeCallback function attached to xhr, otherwise false</summary>\r\n        this.onreadystatechangeCallbackAttached = false;\r\n    }\r\n    return XHRMonitoringState;\r\n}());\r\n\r\nvar ajaxRecord = /** @class */ (function () {\r\n    function ajaxRecord(traceID, spanID, logger) {\r\n        this.completed = false;\r\n        this.requestHeadersSize = null;\r\n        this.requestHeaders = null;\r\n        this.ttfb = null;\r\n        this.responseReceivingDuration = null;\r\n        this.callbackDuration = null;\r\n        this.ajaxTotalDuration = null;\r\n        this.aborted = null;\r\n        this.pageUrl = null;\r\n        this.requestUrl = null;\r\n        this.requestSize = 0;\r\n        this.method = null;\r\n        ///<summary>Returns the HTTP status code.</summary>\r\n        this.status = null;\r\n        //<summary>The timestamp when open method was invoked</summary>\r\n        this.requestSentTime = null;\r\n        //<summary>The timestamps when first byte was received</summary>\r\n        this.responseStartedTime = null;\r\n        //<summary>The timestamp when last byte was received</summary>\r\n        this.responseFinishedTime = null;\r\n        //<summary>The timestamp when onreadystatechange callback in readyState 4 finished</summary>\r\n        this.callbackFinishedTime = null;\r\n        //<summary>The timestamp at which ajax was ended</summary>\r\n        this.endTime = null;\r\n        //<summary>The original xhr onreadystatechange event</summary>\r\n        this.originalOnreadystatechage = null;\r\n        this.xhrMonitoringState = new XHRMonitoringState();\r\n        //<summary>Determines whether or not JavaScript exception occured in xhr.onreadystatechange code. 1 if occured, otherwise 0.</summary>\r\n        this.clientFailure = 0;\r\n        this.CalculateMetrics = function () {\r\n            var self = this;\r\n            // round to 3 decimal points\r\n            self.ajaxTotalDuration = Math.round(_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].GetDuration(self.requestSentTime, self.responseFinishedTime) * 1000) / 1000;\r\n        };\r\n        this.traceID = traceID;\r\n        this.spanID = spanID;\r\n        this._logger = logger;\r\n    }\r\n    ajaxRecord.prototype.getAbsoluteUrl = function () {\r\n        return this.requestUrl ? _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["UrlHelper"].getAbsoluteUrl(this.requestUrl) : null;\r\n    };\r\n    ajaxRecord.prototype.getPathName = function () {\r\n        return this.requestUrl ? _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DataSanitizer"].sanitizeUrl(this._logger, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["UrlHelper"].getCompleteUrl(this.method, this.requestUrl)) : null;\r\n    };\r\n    return ajaxRecord;\r\n}());\r\n\r\n;\r\n//# sourceMappingURL=ajaxRecord.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajaxRecord.js?')},"./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajaxUtils.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajaxUtils.js ***!
  \*******************************************************************************************/
/*! exports provided: stringUtils, EventHelper */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stringUtils", function() { return stringUtils; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventHelper", function() { return EventHelper; });\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nvar stringUtils = /** @class */ (function () {\r\n    function stringUtils() {\r\n    }\r\n    stringUtils.GetLength = function (strObject) {\r\n        var res = 0;\r\n        if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].isNullOrUndefined(strObject)) {\r\n            var stringified = "";\r\n            try {\r\n                stringified = strObject.toString();\r\n            }\r\n            catch (ex) {\r\n                // some troubles with complex object\r\n            }\r\n            res = stringified.length;\r\n            res = isNaN(res) ? 0 : res;\r\n        }\r\n        return res;\r\n    };\r\n    return stringUtils;\r\n}());\r\n\r\nvar EventHelper = /** @class */ (function () {\r\n    function EventHelper() {\r\n    }\r\n    ///<summary>Binds the specified function to an event, so that the function gets called whenever the event fires on the object</summary>\r\n    ///<param name="obj">Object to which </param>\r\n    ///<param name="eventNameWithoutOn">String that specifies any of the standard DHTML Events without "on" prefix</param>\r\n    ///<param name="handlerRef">Pointer that specifies the function to call when event fires</param>\r\n    ///<returns>True if the function was bound successfully to the event, otherwise false</returns>\r\n    EventHelper.AttachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n        var result = false;\r\n        if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].isNullOrUndefined(obj)) {\r\n            if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].isNullOrUndefined(obj.attachEvent)) {\r\n                // IE before version 9                    \r\n                obj.attachEvent("on" + eventNameWithoutOn, handlerRef);\r\n                result = true;\r\n            }\r\n            else {\r\n                if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].isNullOrUndefined(obj.addEventListener)) {\r\n                    // all browsers except IE before version 9\r\n                    obj.addEventListener(eventNameWithoutOn, handlerRef, false);\r\n                    result = true;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    EventHelper.DetachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n        if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].isNullOrUndefined(obj)) {\r\n            if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].isNullOrUndefined(obj.detachEvent)) {\r\n                obj.detachEvent("on" + eventNameWithoutOn, handlerRef);\r\n            }\r\n            else {\r\n                if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].isNullOrUndefined(obj.removeEventListener)) {\r\n                    obj.removeEventListener(eventNameWithoutOn, handlerRef, false);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return EventHelper;\r\n}());\r\n\r\n//# sourceMappingURL=ajaxUtils.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajaxUtils.js?')},"./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/applicationinsights-dependencies-js.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/applicationinsights-dependencies-js.js ***!
  \*********************************************************************************************************************/
/*! exports provided: AjaxPlugin, ajaxRecord */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ajax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax */ "./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajax.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AjaxPlugin", function() { return _ajax__WEBPACK_IMPORTED_MODULE_0__["AjaxMonitor"]; });\n\n/* harmony import */ var _ajaxRecord__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ajaxRecord */ "./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajaxRecord.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ajaxRecord", function() { return _ajaxRecord__WEBPACK_IMPORTED_MODULE_1__["ajaxRecord"]; });\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n//# sourceMappingURL=applicationinsights-dependencies-js.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/applicationinsights-dependencies-js.js?')},"./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Application.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Application.js ***!
  \***************************************************************************************************/
/*! exports provided: Application */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Application", function() { return Application; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Application = /** @class */ (function () {\r\n    function Application() {\r\n    }\r\n    return Application;\r\n}());\r\n\r\n//# sourceMappingURL=Application.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Application.js?')},"./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Device.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Device.js ***!
  \**********************************************************************************************/
/*! exports provided: Device */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Device", function() { return Device; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Device = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Device class\r\n     */\r\n    function Device() {\r\n        // don\'t attempt to fingerprint browsers\r\n        this.id = "browser";\r\n        // Device type is a dimension in our data platform\r\n        // Setting it to \'Browser\' allows to separate client and server dependencies/exceptions\r\n        this.deviceClass = "Browser";\r\n    }\r\n    return Device;\r\n}());\r\n\r\n//# sourceMappingURL=Device.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Device.js?')},"./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Internal.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Internal.js ***!
  \************************************************************************************************/
/*! exports provided: Internal */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Internal", function() { return Internal; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Version = "2.2.1";\r\nvar Internal = /** @class */ (function () {\r\n    /**\r\n    * Constructs a new instance of the internal telemetry data class.\r\n    */\r\n    function Internal(config) {\r\n        this.sdkVersion = (config.sdkExtension && config.sdkExtension() ? config.sdkExtension() + "_" : "") + "javascript:" + Version;\r\n    }\r\n    return Internal;\r\n}());\r\n\r\n//# sourceMappingURL=Internal.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Internal.js?')},"./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Location.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Location.js ***!
  \************************************************************************************************/
/*! exports provided: Location */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Location", function() { return Location; });\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Location = /** @class */ (function () {\r\n    function Location() {\r\n    }\r\n    return Location;\r\n}());\r\n\r\n//# sourceMappingURL=Location.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Location.js?')},"./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Session.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Session.js ***!
  \***********************************************************************************************/
/*! exports provided: Session, _SessionManager */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Session", function() { return Session; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_SessionManager", function() { return _SessionManager; });\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\nvar Session = /** @class */ (function () {\r\n    function Session() {\r\n    }\r\n    return Session;\r\n}());\r\n\r\nvar _SessionManager = /** @class */ (function () {\r\n    function _SessionManager(config, logger) {\r\n        var _this = this;\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["CoreUtils"].isNullOrUndefined(logger)) {\r\n            this._logger = new _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["DiagnosticLogger"]();\r\n        }\r\n        else {\r\n            this._logger = logger;\r\n        }\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        if (!(typeof config.sessionExpirationMs === "function")) {\r\n            config.sessionExpirationMs = function () { return _SessionManager.acquisitionSpan; };\r\n        }\r\n        if (!(typeof config.sessionRenewalMs === "function")) {\r\n            config.sessionRenewalMs = function () { return _SessionManager.renewalSpan; };\r\n        }\r\n        this.config = config;\r\n        this._storageNamePrefix = function () { return _this.config.namePrefix && _this.config.namePrefix() ? _SessionManager.cookieNameConst + _this.config.namePrefix() : _SessionManager.cookieNameConst; };\r\n        this.automaticSession = new Session();\r\n    }\r\n    _SessionManager.prototype.update = function () {\r\n        if (!this.automaticSession.id) {\r\n            this.initializeAutomaticSession();\r\n        }\r\n        var now = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].Now();\r\n        var acquisitionExpired = now - this.automaticSession.acquisitionDate > this.config.sessionExpirationMs();\r\n        var renewalExpired = now - this.automaticSession.renewalDate > this.config.sessionRenewalMs();\r\n        // renew if acquisitionSpan or renewalSpan has ellapsed\r\n        if (acquisitionExpired || renewalExpired) {\r\n            // update automaticSession so session state has correct id\r\n            this.renew();\r\n        }\r\n        else {\r\n            // do not update the cookie more often than cookieUpdateInterval\r\n            if (!this.cookieUpdatedTimestamp || now - this.cookieUpdatedTimestamp > _SessionManager.cookieUpdateInterval) {\r\n                this.automaticSession.renewalDate = now;\r\n                this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *  Record the current state of the automatic session and store it in our cookie string format\r\n     *  into the browser\'s local storage. This is used to restore the session data when the cookie\r\n     *  expires.\r\n     */\r\n    _SessionManager.prototype.backup = function () {\r\n        this.setStorage(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n    };\r\n    /**\r\n     *  Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n     *  initialize the automatic session.\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSession = function () {\r\n        var cookie = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getCookie(this._logger, this._storageNamePrefix());\r\n        if (cookie && typeof cookie.split === "function") {\r\n            this.initializeAutomaticSessionWithData(cookie);\r\n        }\r\n        else {\r\n            // There\'s no cookie, but we might have session data in local storage\r\n            // This can happen if the session expired or the user actively deleted the cookie\r\n            // We only want to recover data if the cookie is missing from expiry. We should respect the user\'s wishes if the cookie was deleted actively.\r\n            // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n            var storage = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getStorage(this._logger, this._storageNamePrefix());\r\n            if (storage) {\r\n                this.initializeAutomaticSessionWithData(storage);\r\n            }\r\n        }\r\n        if (!this.automaticSession.id) {\r\n            this.renew();\r\n        }\r\n    };\r\n    /**\r\n     *  Extract id, aquisitionDate, and renewalDate from an ai_session payload string and\r\n     *  use this data to initialize automaticSession.\r\n     *\r\n     *  @param {string} sessionData - The string stored in an ai_session cookie or local storage backup\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSessionWithData = function (sessionData) {\r\n        var params = sessionData.split("|");\r\n        if (params.length > 0) {\r\n            this.automaticSession.id = params[0];\r\n        }\r\n        try {\r\n            if (params.length > 1) {\r\n                var acq = +params[1];\r\n                this.automaticSession.acquisitionDate = +new Date(acq);\r\n                this.automaticSession.acquisitionDate = this.automaticSession.acquisitionDate > 0 ? this.automaticSession.acquisitionDate : 0;\r\n            }\r\n            if (params.length > 2) {\r\n                var renewal = +params[2];\r\n                this.automaticSession.renewalDate = +new Date(renewal);\r\n                this.automaticSession.renewalDate = this.automaticSession.renewalDate > 0 ? this.automaticSession.renewalDate : 0;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].ErrorParsingAISessionCookie, "Error parsing ai_session cookie, session will be reset: " + _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getExceptionName(e), { exception: _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].dump(e) });\r\n        }\r\n        if (this.automaticSession.renewalDate == 0) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].SessionRenewalDateIsZero, "AI session renewal date is 0, session will be reset.");\r\n        }\r\n    };\r\n    _SessionManager.prototype.renew = function () {\r\n        var now = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].Now();\r\n        this.automaticSession.id = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].newId();\r\n        this.automaticSession.acquisitionDate = now;\r\n        this.automaticSession.renewalDate = now;\r\n        this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n        // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n        if (!_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].canUseLocalStorage()) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].BrowserDoesNotSupportLocalStorage, "Browser does not support local storage. Session durations will be inaccurate.");\r\n        }\r\n    };\r\n    _SessionManager.prototype.setCookie = function (guid, acq, renewal) {\r\n        // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n        // Expiring the cookie will cause the session to expire even if the user isn\'t on the page\r\n        var acquisitionExpiry = acq + this.config.sessionExpirationMs();\r\n        var renewalExpiry = renewal + this.config.sessionRenewalMs();\r\n        var cookieExpiry = new Date();\r\n        var cookie = [guid, acq, renewal];\r\n        if (acquisitionExpiry < renewalExpiry) {\r\n            cookieExpiry.setTime(acquisitionExpiry);\r\n        }\r\n        else {\r\n            cookieExpiry.setTime(renewalExpiry);\r\n        }\r\n        var cookieDomnain = this.config.cookieDomain ? this.config.cookieDomain() : null;\r\n        _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].setCookie(this._logger, this._storageNamePrefix(), cookie.join(\'|\') + \';expires=\' + cookieExpiry.toUTCString(), cookieDomnain);\r\n        this.cookieUpdatedTimestamp = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["DateTimeUtils"].Now();\r\n    };\r\n    _SessionManager.prototype.setStorage = function (guid, acq, renewal) {\r\n        // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n        // Browsers that don\'t support local storage won\'t be able to end sessions cleanly from the client\r\n        // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n        _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].setStorage(this._logger, this._storageNamePrefix(), [guid, acq, renewal].join(\'|\'));\r\n    };\r\n    _SessionManager.acquisitionSpan = 86400000; // 24 hours in ms\r\n    _SessionManager.renewalSpan = 1800000; // 30 minutes in ms\r\n    _SessionManager.cookieUpdateInterval = 60000; // 1 minute in ms\r\n    _SessionManager.cookieNameConst = \'ai_session\';\r\n    return _SessionManager;\r\n}());\r\n\r\n//# sourceMappingURL=Session.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Session.js?')},"./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js ***!
  \******************************************************************************************************/
/*! exports provided: TelemetryTrace */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TelemetryTrace", function() { return TelemetryTrace; });\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nvar TelemetryTrace = /** @class */ (function () {\r\n    function TelemetryTrace(id, parentId, name) {\r\n        this.traceID = id || _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].generateW3CId();\r\n        this.parentID = parentId;\r\n        this.name = name;\r\n        if (window && window.location && window.location.pathname) {\r\n            this.name = window.location.pathname;\r\n        }\r\n    }\r\n    return TelemetryTrace;\r\n}());\r\n\r\n//# sourceMappingURL=TelemetryTrace.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js?')},"./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/User.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/User.js ***!
  \********************************************************************************************/
/*! exports provided: User */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "User", function() { return User; });\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\nvar User = /** @class */ (function () {\r\n    function User(config, logger) {\r\n        this._logger = logger;\r\n        //get userId or create new one if none exists\r\n        var cookie = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getCookie(this._logger, User.userCookieName);\r\n        if (cookie) {\r\n            var params = cookie.split(User.cookieSeparator);\r\n            if (params.length > 0) {\r\n                this.id = params[0];\r\n            }\r\n        }\r\n        this.config = config;\r\n        if (!this.id) {\r\n            this.id = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].newId();\r\n            var date = new Date();\r\n            var acqStr = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].toISOStringForIE8(date);\r\n            this.accountAcquisitionDate = acqStr;\r\n            // without expiration, cookies expire at the end of the session\r\n            // set it to 365 days from now\r\n            // 365 * 24 * 60 * 60 * 1000 = 31536000000 \r\n            date.setTime(date.getTime() + 31536000000);\r\n            var newCookie = [this.id, acqStr];\r\n            var cookieDomain = this.config.cookieDomain ? this.config.cookieDomain() : undefined;\r\n            _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].setCookie(this._logger, User.userCookieName, newCookie.join(User.cookieSeparator) + \';expires=\' + date.toUTCString(), cookieDomain);\r\n            // If we have an config.namePrefix() + ai_session in local storage this means the user actively removed our cookies.\r\n            // We should respect their wishes and clear ourselves from local storage\r\n            var name_1 = config.namePrefix && config.namePrefix() ? config.namePrefix() + \'ai_session\' : \'ai_session\';\r\n            _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].removeStorage(this._logger, name_1);\r\n        }\r\n        // We still take the account id from the ctor param for backward compatibility. \r\n        // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.\r\n        this.accountId = config.accountId ? config.accountId() : undefined;\r\n        // Get the auth user id and account id from the cookie if exists\r\n        // Cookie is in the pattern: <authenticatedId>|<accountId>\r\n        var authCookie = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].getCookie(this._logger, User.authUserCookieName);\r\n        if (authCookie) {\r\n            authCookie = decodeURI(authCookie);\r\n            var authCookieString = authCookie.split(User.cookieSeparator);\r\n            if (authCookieString[0]) {\r\n                this.authenticatedId = authCookieString[0];\r\n            }\r\n            if (authCookieString.length > 1 && authCookieString[1]) {\r\n                this.accountId = authCookieString[1];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * Sets the authenticated user id and the account id in this session.\r\n    *\r\n    * @param authenticatedUserId {string} - The authenticated user id. A unique and persistent string that represents each authenticated user in the service.\r\n    * @param accountId {string} - An optional string to represent the account associated with the authenticated user.\r\n    */\r\n    User.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        // Validate inputs to ensure no cookie control characters.\r\n        var isInvalidInput = !this.validateUserInput(authenticatedUserId) || (accountId && !this.validateUserInput(accountId));\r\n        if (isInvalidInput) {\r\n            this._logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["LoggingSeverity"].WARNING, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_1__["_InternalMessageId"].SetAuthContextFailedAccountName, "Setting auth user context failed. " +\r\n                "User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.", true);\r\n            return;\r\n        }\r\n        // Create cookie string.\r\n        this.authenticatedId = authenticatedUserId;\r\n        var authCookie = this.authenticatedId;\r\n        if (accountId) {\r\n            this.accountId = accountId;\r\n            authCookie = [this.authenticatedId, this.accountId].join(User.cookieSeparator);\r\n        }\r\n        if (storeInCookie) {\r\n            // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).\r\n            // Encoding the cookie to handle unexpected unicode characters.\r\n            _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].setCookie(this._logger, User.authUserCookieName, encodeURI(authCookie), this.config.cookieDomain());\r\n        }\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and the account id from the user context.\r\n     * @returns {}\r\n     */\r\n    User.prototype.clearAuthenticatedUserContext = function () {\r\n        this.authenticatedId = null;\r\n        this.accountId = null;\r\n        _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].deleteCookie(this._logger, User.authUserCookieName);\r\n    };\r\n    User.prototype.validateUserInput = function (id) {\r\n        // Validate:\r\n        // 1. Id is a non-empty string.\r\n        // 2. It does not contain special characters for cookies.\r\n        if (typeof id !== \'string\' ||\r\n            !id ||\r\n            id.match(/,|;|=| |\\|/)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    User.cookieSeparator = \'|\';\r\n    User.userCookieName = \'ai_user\';\r\n    User.authUserCookieName = \'ai_authUser\';\r\n    return User;\r\n}());\r\n\r\n//# sourceMappingURL=User.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/User.js?')},"./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/PropertiesPlugin.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/PropertiesPlugin.js ***!
  \************************************************************************************************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n/* harmony import */ var _TelemetryContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TelemetryContext */ "./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/TelemetryContext.js");\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\n\r\n\r\n\r\nvar PropertiesPlugin = /** @class */ (function () {\r\n    function PropertiesPlugin() {\r\n        this.priority = 110;\r\n        this.identifier = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["PropertiesPluginIdentifier"];\r\n    }\r\n    PropertiesPlugin.getDefaultConfig = function () {\r\n        var defaultConfig = {\r\n            instrumentationKey: function () { return undefined; },\r\n            accountId: function () { return null; },\r\n            sessionRenewalMs: function () { return 30 * 60 * 1000; },\r\n            samplingPercentage: function () { return 100; },\r\n            sessionExpirationMs: function () { return 24 * 60 * 60 * 1000; },\r\n            cookieDomain: function () { return null; },\r\n            sdkExtension: function () { return null; },\r\n            isBrowserLinkTrackingEnabled: function () { return false; },\r\n            appId: function () { return null; },\r\n            namePrefix: function () { return undefined; }\r\n        };\r\n        return defaultConfig;\r\n    };\r\n    PropertiesPlugin.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        var defaultConfig = PropertiesPlugin.getDefaultConfig();\r\n        this._extensionConfig = this._extensionConfig || PropertiesPlugin.getDefaultConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._extensionConfig[field] = function () { return _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["ConfigurationManager"].getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._logger = core.logger;\r\n        this.context = new _TelemetryContext__WEBPACK_IMPORTED_MODULE_1__["TelemetryContext"](core.logger, this._extensionConfig);\r\n        this._breezeChannel = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Util"].getExtension(extensions, _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["BreezeChannelIdentifier"]);\r\n        this.context.appId = function () { return _this._breezeChannel ? _this._breezeChannel["_appId"] : null; };\r\n    };\r\n    /**\r\n     * Add Part A fields to the event\r\n     * @param event The event that needs to be processed\r\n     */\r\n    PropertiesPlugin.prototype.processTelemetry = function (event) {\r\n        if (_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].isNullOrUndefined(event)) {\r\n            // TODO(barustum): throw an internal event once we have support for internal logging\r\n        }\r\n        else {\r\n            // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n            if (event.name === _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["PageView"].envelopeType) {\r\n                this._logger.resetInternalMessageCount();\r\n            }\r\n            if (this.context.session) {\r\n                // If customer did not provide custom session id update the session manager\r\n                if (typeof this.context.session.id !== "string") {\r\n                    this.context.sessionManager.update();\r\n                }\r\n            }\r\n            this._processTelemetryInternal(event);\r\n            if (!_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["CoreUtils"].isNullOrUndefined(this._nextPlugin)) {\r\n                this._nextPlugin.processTelemetry(event);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the next plugin that comes after this plugin\r\n     * @param nextPlugin The next plugin\r\n     */\r\n    PropertiesPlugin.prototype.setNextPlugin = function (nextPlugin) {\r\n        this._nextPlugin = nextPlugin;\r\n    };\r\n    PropertiesPlugin.prototype._processTelemetryInternal = function (event) {\r\n        // set part A  fields\r\n        if (!event.tags) {\r\n            event.tags = [];\r\n        }\r\n        if (!event.ext) {\r\n            event.ext = {};\r\n        }\r\n        event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].DeviceExt] = event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].DeviceExt] || {};\r\n        event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].WebExt] = event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].WebExt] || {};\r\n        event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].UserExt] = event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].UserExt] || {};\r\n        event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].OSExt] = event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].OSExt] || {};\r\n        event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].AppExt] = event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].AppExt] || {};\r\n        event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].TraceExt] = event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Extensions"].TraceExt] || {};\r\n        this.context.applySessionContext(event);\r\n        this.context.applyApplicationContext(event);\r\n        this.context.applyDeviceContext(event);\r\n        this.context.applyOperationContext(event);\r\n        this.context.applyUserContext(event);\r\n        this.context.applyOperatingSystemContxt(event);\r\n        this.context.applyWebContext(event);\r\n        this.context.applyLocationContext(event); // legacy tags\r\n        this.context.applyInternalContext(event); // legacy tags\r\n        this.context.cleanUp(event);\r\n    };\r\n    return PropertiesPlugin;\r\n}());\r\n/* harmony default export */ __webpack_exports__["default"] = (PropertiesPlugin);\r\n//# sourceMappingURL=PropertiesPlugin.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/PropertiesPlugin.js?')},"./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/TelemetryContext.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/TelemetryContext.js ***!
  \************************************************************************************************/
/*! exports provided: TelemetryContext */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TelemetryContext", function() { return TelemetryContext; });\n/* harmony import */ var _Context_Session__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Context/Session */ "./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Session.js");\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n/* harmony import */ var _Context_Application__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Context/Application */ "./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Application.js");\n/* harmony import */ var _Context_Device__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Context/Device */ "./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Device.js");\n/* harmony import */ var _Context_Internal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Context/Internal */ "./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Internal.js");\n/* harmony import */ var _Context_User__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Context/User */ "./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/User.js");\n/* harmony import */ var _Context_Location__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Context/Location */ "./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Location.js");\n/* harmony import */ var _Context_TelemetryTrace__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Context/TelemetryTrace */ "./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js");\n/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar TelemetryContext = /** @class */ (function () {\r\n    function TelemetryContext(logger, defaultConfig) {\r\n        if (typeof window !== \'undefined\') {\r\n            this.sessionManager = new _Context_Session__WEBPACK_IMPORTED_MODULE_0__["_SessionManager"](defaultConfig, logger);\r\n            this.application = new _Context_Application__WEBPACK_IMPORTED_MODULE_2__["Application"]();\r\n            this.device = new _Context_Device__WEBPACK_IMPORTED_MODULE_3__["Device"]();\r\n            this.internal = new _Context_Internal__WEBPACK_IMPORTED_MODULE_4__["Internal"](defaultConfig);\r\n            this.location = new _Context_Location__WEBPACK_IMPORTED_MODULE_6__["Location"]();\r\n            this.user = new _Context_User__WEBPACK_IMPORTED_MODULE_5__["User"](defaultConfig, logger);\r\n            this.telemetryTrace = new _Context_TelemetryTrace__WEBPACK_IMPORTED_MODULE_7__["TelemetryTrace"]();\r\n            this.session = new _Context_Session__WEBPACK_IMPORTED_MODULE_0__["Session"]();\r\n        }\r\n        this.appId = function () { return null; };\r\n    }\r\n    TelemetryContext.prototype.applySessionContext = function (event) {\r\n        var sessionContext = this.session || this.sessionManager.automaticSession;\r\n        if (sessionContext) {\r\n            if (typeof sessionContext.id === "string") {\r\n                event.ext.app.sesId = sessionContext.id;\r\n            }\r\n        }\r\n        if (this.session) {\r\n            // If customer set session info, apply his context; otherwise apply context automatically generated\r\n            if (typeof this.session.id === "string") {\r\n                event.ext.app.sesId = this.session.id;\r\n            }\r\n            else {\r\n                event.ext.app.sesId = this.sessionManager.automaticSession.id;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperatingSystemContxt = function (event) {\r\n        if (this.os && this.os.name) {\r\n            event.ext.os = this.os;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyApplicationContext = function (event) {\r\n        if (this.application) {\r\n            if (typeof this.application.ver === "string") {\r\n                event.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].applicationVersion] = this.application.ver;\r\n            }\r\n            if (typeof this.application.build === "string") {\r\n                event.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].applicationBuild] = this.application.build;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyDeviceContext = function (event) {\r\n        if (this.device) {\r\n            if (typeof this.device.id === "string") {\r\n                event.ext.device.localId = this.device.id;\r\n            }\r\n            if (typeof this.device.ip === "string") {\r\n                event.ext.device.ip = this.device.ip;\r\n            }\r\n            if (typeof this.device.model === "string") {\r\n                event.ext.device.model = this.device.model;\r\n            }\r\n            if (typeof this.device.deviceClass === "string") {\r\n                event.ext.device.deviceClass = this.device.deviceClass;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyInternalContext = function (event) {\r\n        if (this.internal) {\r\n            if (typeof this.internal.agentVersion === "string") {\r\n                event.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].internalAgentVersion] = this.internal.agentVersion; // not mapped in CS 4.0\r\n            }\r\n            if (typeof this.internal.sdkVersion === "string") {\r\n                event.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].internalSdkVersion] = this.internal.sdkVersion;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyLocationContext = function (event) {\r\n        if (this.location) {\r\n            if (typeof this.location.ip === "string") {\r\n                event.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].locationIp] = this.location.ip;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperationContext = function (event) {\r\n        if (this.telemetryTrace) {\r\n            var trace = event.ext.trace || { traceID: undefined, parentID: undefined };\r\n            if (typeof this.telemetryTrace.traceID === "string") {\r\n                trace.traceID = this.telemetryTrace.traceID;\r\n            }\r\n            if (typeof this.telemetryTrace.name === "string") {\r\n                trace.name = this.telemetryTrace.name;\r\n            }\r\n            if (typeof this.telemetryTrace.parentID === "string") {\r\n                trace.parentID = this.telemetryTrace.parentID;\r\n            }\r\n            event.ext.trace = trace;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyWebContext = function (event) {\r\n        if (this.web) {\r\n            event.ext.web = event.ext.web || {};\r\n            event.ext.web = this.web;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyUserContext = function (event) {\r\n        if (this.user) {\r\n            if (!event.tags) {\r\n                event.tags = [];\r\n            }\r\n            // stays in tags\r\n            if (typeof this.user.accountId === "string") {\r\n                var item = {};\r\n                event.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["CtxTagKeys"].userAccountId] = this.user.accountId;\r\n            }\r\n            // CS 4.0\r\n            if (typeof this.user.id === "string") {\r\n                event.ext.user.id = this.user.id;\r\n            }\r\n            if (typeof this.user.authenticatedId === "string") {\r\n                event.ext.user.authId = this.user.authenticatedId;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.cleanUp = function (event) {\r\n        if (event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].DeviceExt] && Object.keys(event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].DeviceExt]).length === 0) {\r\n            delete event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].DeviceExt];\r\n        }\r\n        if (event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].UserExt] && Object.keys(event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].UserExt]).length === 0) {\r\n            delete event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].UserExt];\r\n        }\r\n        if (event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].WebExt] && Object.keys(event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].WebExt]).length === 0) {\r\n            delete event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].WebExt];\r\n        }\r\n        if (event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].OSExt] && Object.keys(event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].OSExt]).length === 0) {\r\n            delete event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].OSExt];\r\n        }\r\n        if (event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].AppExt] && Object.keys(event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].AppExt]).length === 0) {\r\n            delete event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].AppExt];\r\n        }\r\n        if (event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].TraceExt] && Object.keys(event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].TraceExt]).length === 0) {\r\n            delete event.ext[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_1__["Extensions"].TraceExt];\r\n        }\r\n    };\r\n    return TelemetryContext;\r\n}());\r\n\r\n//# sourceMappingURL=TelemetryContext.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/TelemetryContext.js?')},"./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/applicationinsights-properties-js.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/applicationinsights-properties-js.js ***!
  \*****************************************************************************************************************/
/*! exports provided: PropertiesPlugin, TelemetryTrace, TelemetryContext, Session, SessionManager */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _PropertiesPlugin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PropertiesPlugin */ "./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/PropertiesPlugin.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PropertiesPlugin", function() { return _PropertiesPlugin__WEBPACK_IMPORTED_MODULE_0__["default"]; });\n\n/* harmony import */ var _Context_TelemetryTrace__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Context/TelemetryTrace */ "./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TelemetryTrace", function() { return _Context_TelemetryTrace__WEBPACK_IMPORTED_MODULE_1__["TelemetryTrace"]; });\n\n/* harmony import */ var _TelemetryContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TelemetryContext */ "./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/TelemetryContext.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TelemetryContext", function() { return _TelemetryContext__WEBPACK_IMPORTED_MODULE_2__["TelemetryContext"]; });\n\n/* harmony import */ var _Context_Session__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Context/Session */ "./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Session.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Session", function() { return _Context_Session__WEBPACK_IMPORTED_MODULE_3__["Session"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionManager", function() { return _Context_Session__WEBPACK_IMPORTED_MODULE_3__["_SessionManager"]; });\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=applicationinsights-properties-js.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/applicationinsights-properties-js.js?')},"./node_modules/@microsoft/applicationinsights-web/dist-esm/ApplicationInsightsContainer.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-web/dist-esm/ApplicationInsightsContainer.js ***!
  \**************************************************************************************************/
/*! exports provided: ApplicationInsightsContainer */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationInsightsContainer", function() { return ApplicationInsightsContainer; });\n/* harmony import */ var _ApplicationInsightsDeprecated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ApplicationInsightsDeprecated */ "./node_modules/@microsoft/applicationinsights-web/dist-esm/ApplicationInsightsDeprecated.js");\n/* harmony import */ var _Initialization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Initialization */ "./node_modules/@microsoft/applicationinsights-web/dist-esm/Initialization.js");\n\r\n\r\nvar ApplicationInsightsContainer = /** @class */ (function () {\r\n    function ApplicationInsightsContainer() {\r\n    }\r\n    ApplicationInsightsContainer.getAppInsights = function (snippet, version) {\r\n        var initialization = new _Initialization__WEBPACK_IMPORTED_MODULE_1__["Initialization"](snippet);\r\n        var legacyMode = version !== 2.0 ? true : false;\r\n        // Two target scenarios:\r\n        // 1. Customer runs v1 snippet + runtime. If customer updates just cdn location to new SDK, it will run in compat mode so old apis work\r\n        // 2. Customer updates to new snippet (that uses cdn location to new SDK. This is same as a new customer onboarding\r\n        // and all api signatures are expected to map to new SDK. Note new snippet specifies version\r\n        if (version === 2.0) {\r\n            initialization.updateSnippetDefinitions(snippet);\r\n            initialization.loadAppInsights(legacyMode);\r\n            return initialization; // default behavior with new snippet\r\n        }\r\n        else {\r\n            var legacy = new _ApplicationInsightsDeprecated__WEBPACK_IMPORTED_MODULE_0__["AppInsightsDeprecated"](snippet, initialization); // target scenario old snippet + updated endpoint\r\n            legacy.updateSnippetDefinitions(snippet);\r\n            initialization.loadAppInsights(legacyMode);\r\n            return legacy;\r\n        }\r\n    };\r\n    return ApplicationInsightsContainer;\r\n}());\r\n\r\n//# sourceMappingURL=ApplicationInsightsContainer.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-web/dist-esm/ApplicationInsightsContainer.js?')},"./node_modules/@microsoft/applicationinsights-web/dist-esm/ApplicationInsightsDeprecated.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-web/dist-esm/ApplicationInsightsDeprecated.js ***!
  \***************************************************************************************************/
/*! exports provided: AppInsightsDeprecated */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppInsightsDeprecated", function() { return AppInsightsDeprecated; });\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n\r\n// ToDo: fix properties and measurements once updates are done to common\r\nvar AppInsightsDeprecated = /** @class */ (function () {\r\n    function AppInsightsDeprecated(snippet, appInsightsNew) {\r\n        this._hasLegacyInitializers = false;\r\n        this._queue = [];\r\n        this.config = AppInsightsDeprecated.getDefaultConfig(snippet.config);\r\n        this.appInsightsNew = appInsightsNew;\r\n        this.context = { addTelemetryInitializer: this.addTelemetryInitializers.bind(this) };\r\n    }\r\n    /**\r\n    * The array of telemetry initializers to call before sending each telemetry item.\r\n    */\r\n    AppInsightsDeprecated.prototype.addTelemetryInitializers = function (callBack) {\r\n        var _this = this;\r\n        // Add initializer to current processing only if there is any old telemetry initializer\r\n        if (!this._hasLegacyInitializers) {\r\n            this.appInsightsNew.addTelemetryInitializer(function (item) {\r\n                _this._processLegacyInitializers(item); // setup call back for each legacy processor\r\n            });\r\n            this._hasLegacyInitializers = true;\r\n        }\r\n        this._queue.push(callBack);\r\n    };\r\n    AppInsightsDeprecated.prototype._processLegacyInitializers = function (item) {\r\n        // instead of mapping new to legacy and then back again and repeating in channel, attach callback for channel to call\r\n        item.tags[_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["ProcessLegacy"]] = this._queue;\r\n        return item;\r\n    };\r\n    AppInsightsDeprecated.prototype.startTrackPage = function (name) {\r\n        this.appInsightsNew.startTrackPage(name);\r\n    };\r\n    AppInsightsDeprecated.prototype.stopTrackPage = function (name, url, properties, measurements) {\r\n        this.appInsightsNew.stopTrackPage(name, url, properties); // update\r\n    };\r\n    AppInsightsDeprecated.prototype.trackPageView = function (name, url, properties, measurements, duration) {\r\n        var telemetry = {\r\n            name: name,\r\n            uri: url,\r\n            properties: properties,\r\n            measurements: measurements\r\n        };\r\n        // fix for props, measurements, duration\r\n        this.appInsightsNew.trackPageView(telemetry);\r\n    };\r\n    AppInsightsDeprecated.prototype.trackEvent = function (name, properties, measurements) {\r\n        this.appInsightsNew.trackEvent({ name: name });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackDependency = function (id, method, absoluteUrl, pathName, totalTime, success, resultCode) {\r\n        this.appInsightsNew.trackDependencyData({\r\n            id: id,\r\n            target: absoluteUrl,\r\n            type: pathName,\r\n            duration: totalTime,\r\n            properties: { HttpMethod: method },\r\n            success: success,\r\n            responseCode: resultCode\r\n        });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackException = function (exception, handledAt, properties, measurements, severityLevel) {\r\n        this.appInsightsNew.trackException({\r\n            exception: exception\r\n        });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackMetric = function (name, average, sampleCount, min, max, properties) {\r\n        this.appInsightsNew.trackMetric({ name: name, average: average, sampleCount: sampleCount, min: min, max: max });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackTrace = function (message, properties, severityLevel) {\r\n        this.appInsightsNew.trackTrace({ message: message, severityLevel: severityLevel });\r\n    };\r\n    AppInsightsDeprecated.prototype.flush = function (async) {\r\n        this.appInsightsNew.flush(async);\r\n    };\r\n    AppInsightsDeprecated.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        this.appInsightsNew.context.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);\r\n    };\r\n    AppInsightsDeprecated.prototype.clearAuthenticatedUserContext = function () {\r\n        this.appInsightsNew.context.user.clearAuthenticatedUserContext();\r\n    };\r\n    AppInsightsDeprecated.prototype._onerror = function (message, url, lineNumber, columnNumber, error) {\r\n        this.appInsightsNew._onerror({ message: message, url: url, lineNumber: lineNumber, columnNumber: columnNumber, error: error });\r\n    };\r\n    AppInsightsDeprecated.prototype.startTrackEvent = function (name) {\r\n        this.appInsightsNew.startTrackEvent(name);\r\n    };\r\n    AppInsightsDeprecated.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        this.appInsightsNew.stopTrackEvent(name, properties, measurements);\r\n    };\r\n    AppInsightsDeprecated.prototype.downloadAndSetup = function (config) {\r\n        throw new Error("downloadAndSetup not implemented in web SKU");\r\n    };\r\n    AppInsightsDeprecated.prototype.updateSnippetDefinitions = function (snippet) {\r\n        // apply full appInsights to the global instance\r\n        // Note: This must be called before loadAppInsights is called\r\n        for (var field in this) {\r\n            if (typeof field === \'string\') {\r\n                snippet[field] = this[field];\r\n            }\r\n        }\r\n    };\r\n    // note: these are split into methods to enable unit tests\r\n    AppInsightsDeprecated.prototype.loadAppInsights = function () {\r\n        // initialize global instance of appInsights\r\n        //var appInsights = new Microsoft.ApplicationInsights.AppInsights(this.config);\r\n        var _this = this;\r\n        // implement legacy version of trackPageView for 0.10<\r\n        if (this.config["iKey"]) {\r\n            var originalTrackPageView = this.trackPageView;\r\n            this.trackPageView = function (pagePath, properties, measurements) {\r\n                originalTrackPageView.apply(_this, [null, pagePath, properties, measurements]);\r\n            };\r\n        }\r\n        // implement legacy pageView interface if it is present in the snippet\r\n        var legacyPageView = "logPageView";\r\n        if (typeof this.snippet[legacyPageView] === "function") {\r\n            this[legacyPageView] = function (pagePath, properties, measurements) {\r\n                _this.trackPageView(null, pagePath, properties, measurements);\r\n            };\r\n        }\r\n        // implement legacy event interface if it is present in the snippet\r\n        var legacyEvent = "logEvent";\r\n        if (typeof this.snippet[legacyEvent] === "function") {\r\n            this[legacyEvent] = function (name, props, measurements) {\r\n                _this.trackEvent(name, props, measurements);\r\n            };\r\n        }\r\n        return this;\r\n    };\r\n    AppInsightsDeprecated.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.endpointUrl = config.endpointUrl || "https://dc.services.visualstudio.com/v2/track";\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.maxBatchSizeInBytes = config.maxBatchSizeInBytes > 0 ? config.maxBatchSizeInBytes : 102400; // 100kb\r\n        config.maxBatchInterval = !isNaN(config.maxBatchInterval) ? config.maxBatchInterval : 15000;\r\n        config.enableDebug = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.enableDebug);\r\n        config.disableExceptionTracking = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.disableTelemetry = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.disableTelemetry);\r\n        config.verboseLogging = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.verboseLogging);\r\n        config.emitLineDelimitedJson = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.emitLineDelimitedJson);\r\n        config.diagnosticLogInterval = config.diagnosticLogInterval || 10000;\r\n        config.autoTrackPageVisitTime = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.disableAjaxTracking = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.disableAjaxTracking);\r\n        config.maxAjaxCallsPerView = !isNaN(config.maxAjaxCallsPerView) ? config.maxAjaxCallsPerView : 500;\r\n        config.isBeaconApiDisabled = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.isBeaconApiDisabled, true);\r\n        config.disableCorrelationHeaders = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.disableCorrelationHeaders);\r\n        config.correlationHeaderExcludedDomains = config.correlationHeaderExcludedDomains || [\r\n            "*.blob.core.windows.net",\r\n            "*.blob.core.chinacloudapi.cn",\r\n            "*.blob.core.cloudapi.de",\r\n            "*.blob.core.usgovcloudapi.net"\r\n        ];\r\n        config.disableFlushOnBeforeUnload = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.disableFlushOnBeforeUnload);\r\n        config.enableSessionStorageBuffer = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.enableSessionStorageBuffer, true);\r\n        config.isRetryDisabled = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.isRetryDisabled);\r\n        config.isCookieUseDisabled = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        config.enableCorsCorrelation = _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_0__["Util"].stringToBoolOrDefault(config.enableCorsCorrelation);\r\n        return config;\r\n    };\r\n    return AppInsightsDeprecated;\r\n}());\r\n\r\n//# sourceMappingURL=ApplicationInsightsDeprecated.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-web/dist-esm/ApplicationInsightsDeprecated.js?')},"./node_modules/@microsoft/applicationinsights-web/dist-esm/Initialization.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-web/dist-esm/Initialization.js ***!
  \************************************************************************************/
/*! exports provided: Initialization */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Initialization", function() { return Initialization; });\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n/* harmony import */ var _microsoft_applicationinsights_analytics_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/applicationinsights-analytics-js */ "./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/applicationinsights-analytics-js.js");\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n/* harmony import */ var _microsoft_applicationinsights_channel_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @microsoft/applicationinsights-channel-js */ "./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/applicationinsights-channel-js.js");\n/* harmony import */ var _microsoft_applicationinsights_properties_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @microsoft/applicationinsights-properties-js */ "./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/applicationinsights-properties-js.js");\n/* harmony import */ var _microsoft_applicationinsights_dependencies_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @microsoft/applicationinsights-dependencies-js */ "./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/applicationinsights-dependencies-js.js");\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n\r\n\r\n\r\n\r\n\r\n"use strict";\r\n;\r\n/**\r\n * Application Insights API\r\n * @class Initialization\r\n * @implements {IApplicationInsights}\r\n */\r\nvar Initialization = /** @class */ (function () {\r\n    function Initialization(snippet) {\r\n        // initialize the queue and config in case they are undefined\r\n        snippet.queue = snippet.queue || [];\r\n        snippet.version = snippet.version || 2.0; // Default to new version\r\n        var config = snippet.config || {};\r\n        // ensure instrumentationKey is specified\r\n        if (config && !config.instrumentationKey) {\r\n            config = snippet;\r\n            _microsoft_applicationinsights_analytics_js__WEBPACK_IMPORTED_MODULE_1__["ApplicationInsights"].Version = "2.2.1"; // Not currently used anywhere\r\n        }\r\n        this.appInsights = new _microsoft_applicationinsights_analytics_js__WEBPACK_IMPORTED_MODULE_1__["ApplicationInsights"]();\r\n        this.properties = new _microsoft_applicationinsights_properties_js__WEBPACK_IMPORTED_MODULE_4__["PropertiesPlugin"]();\r\n        this.dependencies = new _microsoft_applicationinsights_dependencies_js__WEBPACK_IMPORTED_MODULE_5__["AjaxPlugin"]();\r\n        this.core = new _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["AppInsightsCore"]();\r\n        this.snippet = snippet;\r\n        this.config = config;\r\n        this.getSKUDefaults();\r\n    }\r\n    // Analytics Plugin\r\n    /**\r\n     * Log a user action or other occurrence.\r\n     * @param {IEventTelemetry} event\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackEvent = function (event, customProperties) {\r\n        this.appInsights.trackEvent(event, customProperties);\r\n    };\r\n    /**\r\n     * Logs that a page, or similar container was displayed to the user.\r\n     * @param {IPageViewTelemetry} pageView\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackPageView = function (pageView) {\r\n        var inPv = pageView || {};\r\n        this.appInsights.trackPageView(inPv);\r\n    };\r\n    /**\r\n     * Log a bag of performance information via the customProperties field.\r\n     * @param {IPageViewPerformanceTelemetry} pageViewPerformance\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackPageViewPerformance = function (pageViewPerformance) {\r\n        var inPvp = pageViewPerformance || {};\r\n        this.appInsights.trackPageViewPerformance(inPvp);\r\n    };\r\n    /**\r\n     * Log an exception that you have caught.\r\n     * @param {IExceptionTelemetry} exception\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackException = function (exception) {\r\n        if (!exception.exception && exception.error) {\r\n            exception.exception = exception.error;\r\n        }\r\n        this.appInsights.trackException(exception);\r\n    };\r\n    /**\r\n     * Manually send uncaught exception telemetry. This method is automatically triggered\r\n     * on a window.onerror event.\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype._onerror = function (exception) {\r\n        this.appInsights._onerror(exception);\r\n    };\r\n    /**\r\n     * Log a diagnostic scenario such entering or leaving a function.\r\n     * @param {ITraceTelemetry} trace\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackTrace = function (trace, customProperties) {\r\n        this.appInsights.trackTrace(trace, customProperties);\r\n    };\r\n    /**\r\n     * Log a numeric value that is not associated with a specific event. Typically used\r\n     * to send regular reports of performance indicators.\r\n     *\r\n     * To send a single measurement, just use the `name` and `average` fields\r\n     * of {@link IMetricTelemetry}.\r\n     *\r\n     * If you take measurements frequently, you can reduce the telemetry bandwidth by\r\n     * aggregating multiple measurements and sending the resulting average and modifying\r\n     * the `sampleCount` field of {@link IMetricTelemetry}.\r\n     * @param {IMetricTelemetry} metric input object argument. Only `name` and `average` are mandatory.\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackMetric = function (metric, customProperties) {\r\n        this.appInsights.trackMetric(metric, customProperties);\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don\'t want to calculate the duration yourself. This method doesn\'t send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    Initialization.prototype.startTrackPage = function (name) {\r\n        this.appInsights.startTrackPage(name);\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    Initialization.prototype.stopTrackPage = function (name, url, customProperties, measurements) {\r\n        this.appInsights.stopTrackPage(name, url, customProperties, measurements);\r\n    };\r\n    Initialization.prototype.startTrackEvent = function (name) {\r\n        this.appInsights.startTrackEvent(name);\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    Initialization.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        this.appInsights.stopTrackEvent(name, properties, measurements); // Todo: Fix to pass measurements once type is updated\r\n    };\r\n    Initialization.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        return this.appInsights.addTelemetryInitializer(telemetryInitializer);\r\n    };\r\n    // Properties Plugin\r\n    /**\r\n     * Set the authenticated user id and the account id. Used for identifying a specific signed-in user. Parameters must not contain whitespace or ,;=|\r\n     *\r\n     * The method will only set the `authenicatedUserId` and `accountId` in the curent page view. To set them for the whole sesion, you should set `storeInCookie = true`\r\n     * @param {string} authenticatedUserId\r\n     * @param {string} [accountId]\r\n     * @param {boolean} [storeInCookie=false]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        this.properties.context.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and account id. The associated cookie is cleared, if present.\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.clearAuthenticatedUserContext = function () {\r\n        this.properties.context.user.clearAuthenticatedUserContext();\r\n    };\r\n    // Dependencies Plugin\r\n    /**\r\n     * Log a dependency call (e.g. ajax)\r\n     * @param {IDependencyTelemetry} dependency\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackDependencyData = function (dependency) {\r\n        this.dependencies.trackDependencyData(dependency);\r\n    };\r\n    // Misc\r\n    /**\r\n     * Manually trigger an immediate send of all telemetry still in the buffer.\r\n     * @param {boolean} [async=true]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.flush = function (async) {\r\n        if (async === void 0) { async = true; }\r\n        this.core.getTransmissionControls().forEach(function (channels) {\r\n            channels.forEach(function (channel) {\r\n                channel.flush(async);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Manually trigger an immediate send of all telemetry still in the buffer using beacon Sender.\r\n     * Fall back to xhr sender if beacon is not supported.\r\n     * @param {boolean} [async=true]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.onunloadFlush = function (async) {\r\n        if (async === void 0) { async = true; }\r\n        this.core.getTransmissionControls().forEach(function (channels) {\r\n            channels.forEach(function (channel) {\r\n                if (channel.onunloadFlush) {\r\n                    channel.onunloadFlush();\r\n                }\r\n                else {\r\n                    channel.flush(async);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Initialize this instance of ApplicationInsights\r\n     * @returns {IApplicationInsights}\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.loadAppInsights = function (legacyMode) {\r\n        if (legacyMode === void 0) { legacyMode = false; }\r\n        // dont allow additional channels/other extensions for legacy mode; legacy mode is only to allow users to switch with no code changes!\r\n        if (legacyMode && this.config.extensions && this.config.extensions.length > 0) {\r\n            throw new Error("Extensions not allowed in legacy mode");\r\n        }\r\n        var extensions = [];\r\n        var appInsightsChannel = new _microsoft_applicationinsights_channel_js__WEBPACK_IMPORTED_MODULE_3__["Sender"]();\r\n        extensions.push(appInsightsChannel);\r\n        extensions.push(this.properties);\r\n        extensions.push(this.dependencies);\r\n        extensions.push(this.appInsights);\r\n        // initialize core\r\n        this.core.initialize(this.config, extensions);\r\n        // Empty queue of all api calls logged prior to sdk download\r\n        this.emptyQueue();\r\n        this.pollInternalLogs();\r\n        this.addHousekeepingBeforeUnload(this);\r\n        this.context = this.properties.context;\r\n        return this;\r\n    };\r\n    /**\r\n     * Overwrite the lazy loaded fields of global window snippet to contain the\r\n     * actual initialized API methods\r\n     * @param {Snippet} snippet\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.updateSnippetDefinitions = function (snippet) {\r\n        // apply full appInsights to the global instance\r\n        // Note: This must be called before loadAppInsights is called\r\n        for (var field in this) {\r\n            if (typeof field === \'string\') {\r\n                snippet[field] = this[field];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Call any functions that were queued before the main script was loaded\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.emptyQueue = function () {\r\n        // call functions that were queued before the main script was loaded\r\n        try {\r\n            if (_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Util"].isArray(this.snippet.queue)) {\r\n                // note: do not check length in the for-loop conditional in case something goes wrong and the stub methods are not overridden.\r\n                var length = this.snippet.queue.length;\r\n                for (var i = 0; i < length; i++) {\r\n                    var call = this.snippet.queue[i];\r\n                    call();\r\n                }\r\n                this.snippet.queue = undefined;\r\n                delete this.snippet.queue;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            var properties = {};\r\n            if (exception && typeof exception.toString === "function") {\r\n                properties.exception = exception.toString();\r\n            }\r\n            // need from core\r\n            // Microsoft.ApplicationInsights._InternalLogging.throwInternal(\r\n            //     LoggingSeverity.WARNING,\r\n            //     _InternalMessageId.FailedToSendQueuedTelemetry,\r\n            //     "Failed to send queued telemetry",\r\n            //     properties);\r\n        }\r\n    };\r\n    Initialization.prototype.pollInternalLogs = function () {\r\n        this.core.pollInternalLogs();\r\n    };\r\n    Initialization.prototype.addHousekeepingBeforeUnload = function (appInsightsInstance) {\r\n        // Add callback to push events when the user navigates away\r\n        if (!appInsightsInstance.appInsights.config.disableFlushOnBeforeUnload && (\'onbeforeunload\' in window)) {\r\n            var performHousekeeping = function () {\r\n                // Adds the ability to flush all data before the page unloads.\r\n                // Note: This approach tries to push an async request with all the pending events onbeforeunload.\r\n                // Firefox does not respect this.Other browsers DO push out the call with < 100% hit rate.\r\n                // Telemetry here will help us analyze how effective this approach is.\r\n                // Another approach would be to make this call sync with a acceptable timeout to reduce the\r\n                // impact on user experience.\r\n                //appInsightsInstance.context._sender.triggerSend();\r\n                appInsightsInstance.onunloadFlush(false);\r\n                // Back up the current session to local storage\r\n                // This lets us close expired sessions after the cookies themselves expire\r\n                var ext = appInsightsInstance.appInsights.core[\'_extensions\'][_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["PropertiesPluginIdentifier"]];\r\n                if (ext && ext.context && ext.context._sessionManager) {\r\n                    ext.context._sessionManager.backup();\r\n                }\r\n            };\r\n            if (!_microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_2__["Util"].addEventHandler(\'beforeunload\', performHousekeeping)) {\r\n                appInsightsInstance.appInsights.core.logger.throwInternal(_microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["LoggingSeverity"].CRITICAL, _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_0__["_InternalMessageId"].FailedToAddHandlerForOnBeforeUnload, \'Could not add handler for beforeunload\');\r\n            }\r\n        }\r\n    };\r\n    Initialization.prototype.getSKUDefaults = function () {\r\n        this.config.diagnosticLogInterval =\r\n            this.config.diagnosticLogInterval && this.config.diagnosticLogInterval > 0 ? this.config.diagnosticLogInterval : 10000;\r\n    };\r\n    return Initialization;\r\n}());\r\n\r\n//# sourceMappingURL=Initialization.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-web/dist-esm/Initialization.js?')},"./node_modules/@microsoft/applicationinsights-web/dist-esm/applicationinsights-web.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@microsoft/applicationinsights-web/dist-esm/applicationinsights-web.js ***!
  \*********************************************************************************************/
/*! exports provided: ApplicationInsights, ApplicationInsightsContainer, AppInsightsCore, LoggingSeverity, _InternalMessageId, Util, SeverityLevel, Event, Exception, Metric, PageView, PageViewPerformance, RemoteDependencyData, Trace, DistributedTracingModes, Sender, ApplicationAnalytics, PropertiesPlugin, DependenciesPlugin */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Initialization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Initialization */ "./node_modules/@microsoft/applicationinsights-web/dist-esm/Initialization.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ApplicationInsights", function() { return _Initialization__WEBPACK_IMPORTED_MODULE_0__["Initialization"]; });\n\n/* harmony import */ var _ApplicationInsightsContainer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ApplicationInsightsContainer */ "./node_modules/@microsoft/applicationinsights-web/dist-esm/ApplicationInsightsContainer.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ApplicationInsightsContainer", function() { return _ApplicationInsightsContainer__WEBPACK_IMPORTED_MODULE_1__["ApplicationInsightsContainer"]; });\n\n/* harmony import */ var _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @microsoft/applicationinsights-core-js */ "./node_modules/@microsoft/applicationinsights-core-js/dist-esm/applicationinsights-core-js.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AppInsightsCore", function() { return _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["AppInsightsCore"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LoggingSeverity", function() { return _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["LoggingSeverity"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_InternalMessageId", function() { return _microsoft_applicationinsights_core_js__WEBPACK_IMPORTED_MODULE_2__["_InternalMessageId"]; });\n\n/* harmony import */ var _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @microsoft/applicationinsights-common */ "./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Util", function() { return _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Util"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SeverityLevel", function() { return _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["SeverityLevel"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Event", function() { return _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Event"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Exception", function() { return _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Exception"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Metric", function() { return _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Metric"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PageView", function() { return _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["PageView"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PageViewPerformance", function() { return _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["PageViewPerformance"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RemoteDependencyData", function() { return _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["RemoteDependencyData"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Trace", function() { return _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["Trace"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DistributedTracingModes", function() { return _microsoft_applicationinsights_common__WEBPACK_IMPORTED_MODULE_3__["DistributedTracingModes"]; });\n\n/* harmony import */ var _microsoft_applicationinsights_channel_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @microsoft/applicationinsights-channel-js */ "./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/applicationinsights-channel-js.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Sender", function() { return _microsoft_applicationinsights_channel_js__WEBPACK_IMPORTED_MODULE_4__["Sender"]; });\n\n/* harmony import */ var _microsoft_applicationinsights_analytics_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @microsoft/applicationinsights-analytics-js */ "./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/applicationinsights-analytics-js.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ApplicationAnalytics", function() { return _microsoft_applicationinsights_analytics_js__WEBPACK_IMPORTED_MODULE_5__["ApplicationInsights"]; });\n\n/* harmony import */ var _microsoft_applicationinsights_properties_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @microsoft/applicationinsights-properties-js */ "./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/applicationinsights-properties-js.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PropertiesPlugin", function() { return _microsoft_applicationinsights_properties_js__WEBPACK_IMPORTED_MODULE_6__["PropertiesPlugin"]; });\n\n/* harmony import */ var _microsoft_applicationinsights_dependencies_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @microsoft/applicationinsights-dependencies-js */ "./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/applicationinsights-dependencies-js.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DependenciesPlugin", function() { return _microsoft_applicationinsights_dependencies_js__WEBPACK_IMPORTED_MODULE_7__["AjaxPlugin"]; });\n\n\r\n\r\n// Re-exports\r\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=applicationinsights-web.js.map\n\n//# sourceURL=webpack:///./node_modules/@microsoft/applicationinsights-web/dist-esm/applicationinsights-web.js?')},"./node_modules/css-loader/dist/cjs.js!./src/Views/css/Template.css":
/*!**************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/Views/css/Template.css ***!
  \**************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);\n// Module\nexports.push([module.i, ".uipath-content {\\r\\n    margin: 150px auto 0px auto;\\r\\n    background-color: white;\\r\\n    width: 480px;\\r\\n    font-family: \'Segoe UI\', Tahoma, Geneva, Verdana, sans-serif;\\r\\n    font-weight: 100;\\r\\n    font-size: 16px;\\r\\n}\\r\\n\\r\\n.uipath-content .uipath-header {\\r\\n    background-color: #4885ed;\\r\\n    color: white;\\r\\n    font-size: 24px;\\r\\n    padding: 5px;\\r\\n}\\r\\n\\r\\n.uipath-content .uipath-header h1 {\\r\\n    font-weight: 100;\\r\\n    font-size: 24px;\\r\\n    margin: 0;\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\n.uipath-content .uipath-header #uipathOverlayclose {\\r\\n    float: right;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.uipath-content .uipath-instructions {\\r\\n    background-color: white;\\r\\n    padding: 5px;\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\n.uipath-content .uipath-instructions h2 {\\r\\n    font-weight: 100;\\r\\n    font-size: 24px;\\r\\n    text-align: center;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.uipath-content .uipath-instructions #uipathConsentcode {\\r\\n    color: #4885ed;\\r\\n    text-align: center;\\r\\n    font-weight: 100;\\r\\n    font-size: 35px;\\r\\n}\\r\\n\\r\\n.uipath-content .uipath-instructions dt {\\r\\n    margin: 10px 0px 5px 5px;\\r\\n}\\r\\n\\r\\n.uipath-content .uipath-instructions dl {\\r\\n    margin-bottom: 0px;\\r\\n}\\r\\n\\r\\n.uipath-small {\\r\\n    width: 410px;\\r\\n}\\r\\n\\r\\n.uipath-content .uipath-instructions button {\\r\\n    width: 100px;\\r\\n    height: 30px;\\r\\n    margin: 5px;\\r\\n    padding: 0px;\\r\\n    border: 0px;\\r\\n}\\r\\n\\r\\n.uipath-content .uipath-instructions .uipath-interactions {\\r\\n    float: right;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.uipath-tryAgain {\\r\\n    background-color: #4885ed;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.uipath-browserPrompt {\\r\\n    width: 280px;\\r\\n    height: auto;\\r\\n}\\r\\n\\r\\n.uipath-consentWindow {\\r\\n    width: 285px;\\r\\n    height: auto;\\r\\n}\\r\\n\\r\\n@media only screen and (min-height: 1300px) {\\r\\n    .uipath-content {\\r\\n        top: 50%;\\r\\n        left: 50%;\\r\\n        transform: translate(-50%, -50%);\\r\\n        position: fixed;\\r\\n        margin-top: 0px;\\r\\n    }\\r\\n}", ""]);\n\n\n//# sourceURL=webpack:///./src/Views/css/Template.css?./node_modules/css-loader/dist/cjs.js')},"./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], "{").concat(content, "}");\n      }\n\n      return content;\n    }).join(\'\');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === \'string\') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \'\']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      // eslint-disable-next-line prefer-destructuring\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = modules[_i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = "(".concat(item[2], ") and (").concat(mediaQuery, ")");\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || \'\'; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === \'function\') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return "/*# sourceURL=".concat(cssMapping.sourceRoot).concat(source, " */");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n  }\n\n  return [content].join(\'\\n\');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n  return "/*# ".concat(data, " */");\n}\n\n//# sourceURL=webpack:///./node_modules/css-loader/dist/runtime/api.js?')},"./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === "function")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError("Generator is already executing.");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === "function" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i["return"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume("next", value); }\r\n    function reject(value) { resume("throw", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/tslib/tslib.es6.js?')},"./src/SDK/uipathRobot.ts":
/*!********************************!*\
  !*** ./src/SDK/uipathRobot.ts ***!
  \********************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError("Generator is already executing.");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar applicationinsights_web_1 = __webpack_require__(/*! @microsoft/applicationinsights-web */ "./node_modules/@microsoft/applicationinsights-web/dist-esm/applicationinsights-web.js");\r\nvar models_1 = __webpack_require__(/*! ../models */ "./src/models/index.ts");\r\nvar Implementation_1 = __webpack_require__(/*! ../requests/Implementation */ "./src/requests/Implementation/index.ts");\r\nvar Utils_1 = __webpack_require__(/*! ../Utils */ "./src/Utils/index.ts");\r\nvar constants_1 = __webpack_require__(/*! ../Utils/constants */ "./src/Utils/constants.ts");\r\n/**\r\n * Browser invocation javascript SDK module. Accessible as UiPathRobot from browser console.\r\n */\r\nvar UiPathRobot;\r\n(function (UiPathRobot) {\r\n    var _this = this;\r\n    UiPathRobot.settings = models_1.Settings;\r\n    var jobStatus = {};\r\n    var appInsights = new applicationinsights_web_1.ApplicationInsights({\r\n        config: {\r\n            instrumentationKey:  false ? undefined : \'45d1ba3e-f027-4fb0-a1cc-d6874a40ec00\',\r\n        },\r\n    });\r\n    var robotInvocationPort = 0;\r\n    var consentCode = 0;\r\n    var portDiscoveryServicePort = constants_1.Constants.DEFAULT_PORT;\r\n    var timeIntervalInMilliSec = constants_1.Constants.POLL_TIMEINTERVAL;\r\n    var LoadAnalytics = function () { return appInsights.loadAppInsights().trackEvent({ name: \'SDK Loaded\' }); };\r\n    /**\r\n    * Trace event method\r\n    * @param name event name\r\n    * @param properties properties to log along with the event.\r\n    */\r\n    var traceEvent = function (name, properties) {\r\n        appInsights.trackEvent({\r\n            name: name,\r\n            properties: properties,\r\n        });\r\n    };\r\n    /**\r\n    * Tracing error\r\n    * @param methodName Method on which error happened.\r\n    * @param error Error to trace.\r\n    */\r\n    var traceError = function (methodName, error) {\r\n        appInsights.trackException({\r\n            properties: { method: methodName },\r\n            exception: new Error(error),\r\n        });\r\n    };\r\n    /**\r\n     * Method to find the port on which local listener is running.\r\n     * @returns Deferred promise of type number which will be resolved/rejected based on http response.\r\n     */\r\n    var getPort = function () { return __awaiter(_this, void 0, void 0, function () {\r\n        var deferredPromise, request, response, result, error_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    deferredPromise = new Utils_1.Deferred();\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 6, , 7]);\r\n                    request = new Implementation_1.PortRequest(portDiscoveryServicePort, consentCode);\r\n                    return [4 /*yield*/, request.GetPort()];\r\n                case 2:\r\n                    response = _a.sent();\r\n                    if (!(response.isUnauthorized && consentCode === 0)) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, askForConsent()];\r\n                case 3:\r\n                    result = _a.sent();\r\n                    deferredPromise.resolve(result);\r\n                    return [3 /*break*/, 5];\r\n                case 4:\r\n                    if (response.isEmpty) {\r\n                        Utils_1.HtmlUtil.ShowErrorOverlay();\r\n                        deferredPromise.reject(new Error(\'Robot Service down\'));\r\n                    }\r\n                    else {\r\n                        response.Resolve(deferredPromise);\r\n                    }\r\n                    _a.label = 5;\r\n                case 5: return [3 /*break*/, 7];\r\n                case 6:\r\n                    error_1 = _a.sent();\r\n                    traceError(constants_1.Constants.GET_PORT, error_1);\r\n                    deferredPromise.reject(error_1);\r\n                    return [3 /*break*/, 7];\r\n                case 7: return [2 /*return*/, deferredPromise.promise];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n    * Polls the given function for 1 min until success.\r\n    * @param fn Function to poll.\r\n    */\r\n    var pollForApprovedConsent = function (fn) { return Utils_1.PollUtil.Poll(fn, constants_1.Constants.POLL_TIMEOUT, constants_1.Constants.POLL_TIMEINTERVAL); };\r\n    /**\r\n     * Generates a random number which will be passed to protocol handler and shown to user to approve as consent.\r\n     * Polls for 60 seconds to determine if user has consented.\r\n     */\r\n    var askForConsent = function () {\r\n        var deferredPromise = new Utils_1.Deferred();\r\n        consentCode = Utils_1.RandomUtil.GetRandomNumber();\r\n        Utils_1.HtmlUtil.ShowConsentOverlay(consentCode);\r\n        pollForApprovedConsent(getPort)\r\n            .then(function (response) {\r\n            Utils_1.HtmlUtil.HideConsentOverlay();\r\n            deferredPromise.resolve(response);\r\n        })\r\n            .catch(function (error) {\r\n            Utils_1.HtmlUtil.HideConsentOverlay();\r\n            deferredPromise.reject(error);\r\n            traceError(constants_1.Constants.GET_PORT, error);\r\n        });\r\n        traceEvent(\'User consent raised\');\r\n        return deferredPromise.promise;\r\n    };\r\n    /**\r\n     * Initialize method that initializes listener port running on local session.\r\n     * @returns Promise.\r\n     */\r\n    var initializePort = function () { return __awaiter(_this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!(robotInvocationPort === 0)) return [3 /*break*/, 2];\r\n                    consentCode = 0;\r\n                    return [4 /*yield*/, getPort()];\r\n                case 1:\r\n                    robotInvocationPort = _a.sent();\r\n                    _a.label = 2;\r\n                case 2: return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * Makes request after user consents access.\r\n     * @param request IRequest to send.\r\n     */\r\n    var resendAfterConsent = function (request) { return __awaiter(_this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, askForConsent()];\r\n                case 1:\r\n                    robotInvocationPort = _a.sent();\r\n                    return [2 /*return*/, request.Set(robotInvocationPort, consentCode).Send()];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n    * Finds port of local listener and sends request. Requests user consent if required.\r\n    * @param request IRequest to send.\r\n    * @param deferredPromise Promise to resolve on completion of request.\r\n    */\r\n    var sendRequest = function (request, deferredPromise) { return __awaiter(_this, void 0, void 0, function () {\r\n        var response;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, initializePort()];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, request.Set(robotInvocationPort, consentCode).Send()];\r\n                case 2:\r\n                    response = _a.sent();\r\n                    if (!response.isUnauthorized) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, resendAfterConsent(request)];\r\n                case 3:\r\n                    response = _a.sent();\r\n                    return [3 /*break*/, 5];\r\n                case 4:\r\n                    if (response.isEmpty) {\r\n                        Utils_1.HtmlUtil.ShowErrorOverlay();\r\n                    }\r\n                    _a.label = 5;\r\n                case 5:\r\n                    response.Resolve(deferredPromise);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * Method to invoke a robot on the local user machine.\r\n     * @param robotProcessId Robot package id to uniquely identify robots present on local user machine.\r\n     * @param data In arguments to be passed to the robot if any.\r\n     * @returns Deferred promise of type job which will be resolved/rejected based on http response.\r\n     */\r\n    var startRobot = function (robotProcessId, data) { return __awaiter(_this, void 0, void 0, function () {\r\n        var deferredPromise;\r\n        return __generator(this, function (_a) {\r\n            if (data) {\r\n                data = JSON.stringify(data);\r\n            }\r\n            deferredPromise = new Utils_1.Deferred();\r\n            try {\r\n                sendRequest(new Implementation_1.InvokeRobotRequest(robotProcessId, data), deferredPromise);\r\n            }\r\n            catch (error) {\r\n                deferredPromise.reject(error);\r\n            }\r\n            return [2 /*return*/, deferredPromise.promise];\r\n        });\r\n    }); };\r\n    /**\r\n     * Method to get job status of any running/completed job.\r\n     * @param job Job object for which status needs to be found.\r\n     * @returns Deferred promise of type JobResult which will be resolved/rejected based on http response.\r\n     */\r\n    var getJobStatus = function (job) { return __awaiter(_this, void 0, void 0, function () {\r\n        var response;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, new Implementation_1.JobStatusRequest(job).Set(robotInvocationPort, consentCode).Send()];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    if (response.isSuccess && response.data) {\r\n                        return [2 /*return*/, response.data];\r\n                    }\r\n                    else {\r\n                        throw new Error(response.statusText);\r\n                    }\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * Captures the latest job status of the executing job.\r\n     * @param job Executing job\r\n     * @param jobResult The latest result of the executing job\r\n     * @param statusChangeCallback Callback method to invoke if job status has changed\r\n     */\r\n    var handleJobResponse = function (job, jobResult, statusChangeCallback) {\r\n        try {\r\n            var isNewStatus = jobStatus[job.jobId] !== jobResult.status;\r\n            if (isNewStatus) {\r\n                jobStatus[job.jobId] = jobResult.status;\r\n                if (statusChangeCallback) {\r\n                    statusChangeCallback(jobResult.status);\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            traceError(\'StatusUpdate\', \'Incorrect callback\');\r\n        }\r\n    };\r\n    /**\r\n     * Polls recursively until completion of currently running robot process job.\r\n     * @param job Job that is currently running.\r\n     * @param statusChangeCallback callback method to call if job status has changed\r\n     * @param deferredPromise Promise to resolve/reject once job completes.\r\n     */\r\n    var jobStatusPoll = function (job, deferredPromise, statusChangeCallback) { return __awaiter(_this, void 0, void 0, function () {\r\n        var jobResponse, error_2;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 3]);\r\n                    return [4 /*yield*/, getJobStatus(job)];\r\n                case 1:\r\n                    jobResponse = _a.sent();\r\n                    handleJobResponse(job, jobResponse, statusChangeCallback);\r\n                    if (jobResponse.isExecuting) {\r\n                        setTimeout(function () { return jobStatusPoll(job, deferredPromise, statusChangeCallback); }, timeIntervalInMilliSec);\r\n                    }\r\n                    else {\r\n                        deferredPromise.resolve(jobResponse);\r\n                    }\r\n                    return [3 /*break*/, 3];\r\n                case 2:\r\n                    error_2 = _a.sent();\r\n                    deferredPromise.reject(error_2);\r\n                    traceError(constants_1.Constants.JOB_STATUS_POLL, error_2);\r\n                    return [3 /*break*/, 3];\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * Init method to set SDK settings\r\n     * @param sdkSettings Settings object\r\n     */\r\n    UiPathRobot.init = function (sdkSettings) {\r\n        if (sdkSettings) {\r\n            timeIntervalInMilliSec = sdkSettings.pollTimeInterval || constants_1.Constants.POLL_TIMEINTERVAL;\r\n            portDiscoveryServicePort = sdkSettings.portNumber || constants_1.Constants.DEFAULT_PORT;\r\n        }\r\n        traceEvent(constants_1.Constants.INIT);\r\n    };\r\n    /**\r\n     * Method to retrieve all published robot processes on users local machine.\r\n     * @returns Deferred promise of type RobotProcess[] which will be resolved/rejected based on http response.\r\n     */\r\n    UiPathRobot.getRobotProcesses = function () {\r\n        traceEvent(constants_1.Constants.GET_ROBOT_PROCESSES);\r\n        var deferredPromise = new Utils_1.Deferred();\r\n        try {\r\n            sendRequest(new Implementation_1.RobotProcessRequest(), deferredPromise);\r\n        }\r\n        catch (error) {\r\n            deferredPromise.reject(error);\r\n            traceError(constants_1.Constants.GET_ROBOT_PROCESSES, error);\r\n        }\r\n        return deferredPromise.promise;\r\n    };\r\n    /**\r\n     * Method to invoke a robot process on the local user machine.\r\n     * @param robotProcessId Robot process id to uniquely identify robot process present on local user machine.\r\n     * @param data JSON object. In arguments to be passed to the robot if any.\r\n     * @param statusChangeCallback Callback method called every time current running robot process changes status.\r\n     * @returns Deferred promise of type job result which will be resolved/rejected based on http response.\r\n     */\r\n    UiPathRobot.runProcess = function (robotProcessId, data, statusChangeCallback) { return __awaiter(_this, void 0, void 0, function () {\r\n        var deferredPromise, job;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    traceEvent(constants_1.Constants.RUN_ROBOT);\r\n                    deferredPromise = new Utils_1.Deferred();\r\n                    return [4 /*yield*/, startRobot(robotProcessId, data)];\r\n                case 1:\r\n                    job = _a.sent();\r\n                    jobStatus[job.jobId] = \'\';\r\n                    jobStatusPoll(job, deferredPromise, statusChangeCallback);\r\n                    return [2 /*return*/, deferredPromise.promise];\r\n            }\r\n        });\r\n    }); };\r\n    document.addEventListener(\'readystatechange\', function () {\r\n        if (document.readyState === \'complete\') {\r\n            LoadAnalytics();\r\n        }\r\n    });\r\n})(UiPathRobot = exports.UiPathRobot || (exports.UiPathRobot = {}));\r\nwindow.UiPathRobot = UiPathRobot;\r\n\n\n//# sourceURL=webpack:///./src/SDK/uipathRobot.ts?')},"./src/Utils/constants.ts":
/*!********************************!*\
  !*** ./src/Utils/constants.ts ***!
  \********************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants = /** @class */ (function () {\r\n    function Constants() {\r\n    }\r\n    Constants.GET_PORT = 'GetPort';\r\n    Constants.GET_ROBOT_PROCESSES = 'RobotProcesses';\r\n    Constants.GET_JOB_STATUS = 'JobStatus';\r\n    Constants.INVOKE_ROBOT = 'InvokeRobot';\r\n    Constants.REPORT_STATUS = 'ReportStatus';\r\n    Constants.UIPATH_EDITION = 'UiPathEdition';\r\n    Constants.DEFAULT_ROBOT_INVOKE_DOMAIN = 'http://127.0.0.1';\r\n    Constants.DEFAULT_PORT_DISCOVERY_DOMAIN = 'http://127.0.0.1';\r\n    Constants.DEFAULT_PORT = 2323;\r\n    Constants.UIPATH_PROTOCOL = 'uipath-web';\r\n    Constants.POLL_TIMEOUT = 60000;\r\n    Constants.POLL_TIMEINTERVAL = 250;\r\n    Constants.HTTP_UNAUTHORIZED = 401;\r\n    Constants.UIPATH_CONSENTOVERLAY_ID = 'uipathConsentOverlay';\r\n    Constants.UIPATH_CONSENTDIALOG_ID = 'uipathConsentFrame';\r\n    Constants.INIT = 'Init';\r\n    Constants.RUN_ROBOT = 'Run Robot';\r\n    Constants.ROBOT_PROCESSES = 'Get Robot Processes';\r\n    Constants.JOB_STATUS_POLL = 'Job Status Poll';\r\n    return Constants;\r\n}());\r\nexports.Constants = Constants;\r\n\n\n//# sourceURL=webpack:///./src/Utils/constants.ts?")},"./src/Utils/deferred.ts":
/*!*******************************!*\
  !*** ./src/Utils/deferred.ts ***!
  \*******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n/**\r\n * Deferred promise class.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.resolve = function (value) { return _this._resolve(value); };\r\n        this.reject = function (reason) { return _this._reject(reason); };\r\n        this._promise = new Promise(function (resolve, reject) {\r\n            _this._resolve = resolve;\r\n            _this._reject = reject;\r\n        });\r\n    }\r\n    Object.defineProperty(Deferred.prototype, "promise", {\r\n        get: function () {\r\n            return this._promise;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Deferred;\r\n}());\r\nexports.Deferred = Deferred;\r\n\n\n//# sourceURL=webpack:///./src/Utils/deferred.ts?')},"./src/Utils/htmlUtil.ts":
/*!*******************************!*\
  !*** ./src/Utils/htmlUtil.ts ***!
  \*******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar Error_html_1 = __importDefault(__webpack_require__(/*! ../Views/Error.html */ "./src/Views/Error.html"));\r\nvar Template_html_1 = __importDefault(__webpack_require__(/*! ../Views/Template.html */ "./src/Views/Template.html"));\r\nvar constants_1 = __webpack_require__(/*! ./constants */ "./src/Utils/constants.ts");\r\n/**\r\n * Html Utility to build consent help overlay.\r\n */\r\nvar HtmlUtil = /** @class */ (function () {\r\n    function HtmlUtil() {\r\n    }\r\n    /**\r\n     * Creates a blob URL\r\n     * @param code Content to be stored in blob\r\n     * @param type Type of blob object to create\r\n     * @returns Source to load as blob url.\r\n     */\r\n    HtmlUtil.GetBlobURL = function (code, type) {\r\n        var blob = new Blob([code], { type: type });\r\n        return URL.createObjectURL(blob);\r\n    };\r\n    /**\r\n     * Returns complete html page as string\r\n     * @param param0 Object containing the css, cssURL and html to show as string\r\n     * @returns Complete html page as string\r\n     */\r\n    HtmlUtil.GetCompleteHtml = function (_a) {\r\n        var html = _a.html, css = _a.css, cssURL = _a.cssURL;\r\n        return "\\n          <html>\\n            <head>\\n              " + (css && "<link rel=\\"stylesheet\\" type=\\"text/css\\" href=\\"" + cssURL + "\\" />") + "\\n            </head>\\n            <body>\\n              " + (html || \'\') + "\\n            </body>\\n          </html>\\n        ";\r\n    };\r\n    /**\r\n     * Loads the Iframe with overlay content\r\n     * @param iframe Iframe on which overlay content will be loaded\r\n     * @param html Html content to load\r\n     * @param css Css to bind to the html\r\n     */\r\n    HtmlUtil.LoadIFrame = function (iframe, html, css) {\r\n        if (navigator.userAgent.indexOf(\'MSIE\') !== -1 ||\r\n            navigator.appVersion.indexOf(\'Trident/\') > -1) {\r\n            /**\r\n                IE11 does not support Blob URLs for type text/html\r\n            */\r\n            var doc = iframe.contentWindow.document;\r\n            doc.open();\r\n            doc.write(HtmlUtil.GetCompleteHtml({\r\n                html: html,\r\n                css: HtmlUtil.cssToBind,\r\n                cssURL: HtmlUtil.GetBlobURL(css, \'text/css\'),\r\n            }));\r\n            doc.close();\r\n        }\r\n        else {\r\n            iframe.src = HtmlUtil.GeneratePageURL({\r\n                html: html,\r\n                css: css,\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Shows the overlay with the consent help dialog. Html is loaded on iframe with blob url as source.\r\n     * @param consentCode Consent code generated which will be shown to user on the overlay.\r\n     */\r\n    HtmlUtil.ShowConsentOverlay = function (consentCode) {\r\n        HtmlUtil.BuildConsentHelpHtml();\r\n        var url = constants_1.Constants.UIPATH_PROTOCOL + "://consentCode=" + consentCode + "&Origin=" + window.location.origin;\r\n        var consentDiv = document.querySelector("#" + constants_1.Constants.UIPATH_CONSENTOVERLAY_ID);\r\n        var iframe = document.querySelector("#" + constants_1.Constants.UIPATH_CONSENTDIALOG_ID);\r\n        HtmlUtil.LoadIFrame(iframe, Template_html_1.default.replace(HtmlUtil.token, consentCode.toString()), HtmlUtil.cssToBind);\r\n        window.location.href = url;\r\n        consentDiv.hidden = false;\r\n    };\r\n    /**\r\n     * Hides overlay\r\n     */\r\n    HtmlUtil.HideConsentOverlay = function () {\r\n        var consentDiv = document.querySelector(\'#uipathConsentOverlay\');\r\n        if (consentDiv) {\r\n            consentDiv.hidden = true;\r\n        }\r\n    };\r\n    /**\r\n    * Show error overlay\r\n    */\r\n    HtmlUtil.ShowErrorOverlay = function () {\r\n        HtmlUtil.BuildConsentHelpHtml();\r\n        var consentDiv = document.querySelector("#" + constants_1.Constants.UIPATH_CONSENTOVERLAY_ID);\r\n        var iframe = document.querySelector("#" + constants_1.Constants.UIPATH_CONSENTDIALOG_ID);\r\n        HtmlUtil.LoadIFrame(iframe, Error_html_1.default, HtmlUtil.cssToBind);\r\n        consentDiv.hidden = false;\r\n    };\r\n    HtmlUtil.cssToBind = __webpack_require__(/*! ../Views/css/Template.css */ "./src/Views/css/Template.css").toString();\r\n    HtmlUtil.token = \'tokenToShow\';\r\n    /**\r\n     * Adds an overlay div to html body.\r\n     */\r\n    HtmlUtil.BuildConsentHelpHtml = function () {\r\n        var consentDiv = document.querySelector("#" + constants_1.Constants.UIPATH_CONSENTOVERLAY_ID);\r\n        if (!consentDiv) {\r\n            consentDiv = document.createElement(\'div\');\r\n            consentDiv.setAttribute(\'id\', "" + constants_1.Constants.UIPATH_CONSENTOVERLAY_ID);\r\n            consentDiv.style.cssText = \'position: fixed;width: 100%;height: 100%;top: 0;left: 0;right: 0;bottom: 0;background-color: rgba(0,0,0,0.5);z-index: 999999;cursor: pointer;\';\r\n            var consentIFrame = document.createElement(\'iframe\');\r\n            consentIFrame.setAttribute(\'id\', "" + constants_1.Constants.UIPATH_CONSENTDIALOG_ID);\r\n            consentIFrame.style.cssText = \'position: fixed;width: 100%;height: 100%;top: 0;left: 0;right: 0;bottom: 0;\';\r\n            consentDiv.appendChild(consentIFrame);\r\n            document.body.appendChild(consentDiv);\r\n        }\r\n    };\r\n    /**\r\n     * Constructs a html page to be loaded.\r\n     * @param param0 Object containing the css and html to show as string\r\n     * @returns Source to load as blob url.\r\n     */\r\n    HtmlUtil.GeneratePageURL = function (_a) {\r\n        var html = _a.html, css = _a.css;\r\n        var source = HtmlUtil.GetCompleteHtml({\r\n            html: html,\r\n            css: HtmlUtil.cssToBind,\r\n            cssURL: HtmlUtil.GetBlobURL(css, \'text/css\'),\r\n        });\r\n        return HtmlUtil.GetBlobURL(source, \'text/html\');\r\n    };\r\n    return HtmlUtil;\r\n}());\r\nexports.HtmlUtil = HtmlUtil;\r\n\n\n//# sourceURL=webpack:///./src/Utils/htmlUtil.ts?')},"./src/Utils/httpUtil.ts":
/*!*******************************!*\
  !*** ./src/Utils/httpUtil.ts ***!
  \*******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * XMLHttpRequest module used to send Http requests to listeners.\r\n */\r\nvar response_1 = __webpack_require__(/*! ../models/response */ \"./src/models/response.ts\");\r\nvar HttpUtil = /** @class */ (function () {\r\n    function HttpUtil() {\r\n    }\r\n    /**\r\n     * HttpGet method.\r\n     * @param url Endpoint to hit.\r\n     * @param transform Method to transform http response string to desired object.\r\n     */\r\n    HttpUtil.Get = function (url, transform) {\r\n        return HttpUtil.HttpRequest(url, transform, 'GET');\r\n    };\r\n    /**\r\n     * HttpPost method.\r\n     * @param url Endpoint to hit.\r\n     * @param transform Method to transform http response string to desired object.\r\n     * @param data Data to post.\r\n     */\r\n    HttpUtil.Post = function (url, transform, data) {\r\n        return HttpUtil.HttpRequest(url, transform, 'POST', data);\r\n    };\r\n    HttpUtil.HttpRequest = function (url, transform, method, data) {\r\n        var request = new XMLHttpRequest();\r\n        return new Promise(function (resolve, reject) {\r\n            request.onreadystatechange = function () {\r\n                if (request.readyState !== 4) {\r\n                    return;\r\n                }\r\n                resolve(new response_1.Response(request.status, request.statusText, transform(this.response)));\r\n            };\r\n            request.onerror = function () {\r\n                reject(new response_1.Response(request.status, request.statusText));\r\n            };\r\n            request.open(method, url, true);\r\n            request.withCredentials = true;\r\n            if (data) {\r\n                request.send(data);\r\n            }\r\n            else {\r\n                request.send();\r\n            }\r\n        });\r\n    };\r\n    return HttpUtil;\r\n}());\r\nexports.HttpUtil = HttpUtil;\r\n\n\n//# sourceURL=webpack:///./src/Utils/httpUtil.ts?")},"./src/Utils/index.ts":
/*!****************************!*\
  !*** ./src/Utils/index.ts ***!
  \****************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n__export(__webpack_require__(/*! ./deferred */ "./src/Utils/deferred.ts"));\r\n__export(__webpack_require__(/*! ./htmlUtil */ "./src/Utils/htmlUtil.ts"));\r\n__export(__webpack_require__(/*! ./httpUtil */ "./src/Utils/httpUtil.ts"));\r\n__export(__webpack_require__(/*! ./pollUtil */ "./src/Utils/pollUtil.ts"));\r\n__export(__webpack_require__(/*! ./randomUtil */ "./src/Utils/randomUtil.ts"));\r\n__export(__webpack_require__(/*! ./urlUtil */ "./src/Utils/urlUtil.ts"));\r\n\n\n//# sourceURL=webpack:///./src/Utils/index.ts?')},"./src/Utils/pollUtil.ts":
/*!*******************************!*\
  !*** ./src/Utils/pollUtil.ts ***!
  \*******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Poll a particular function until a specified interval/timeout.\r\n */\r\nvar PollUtil = /** @class */ (function () {\r\n    function PollUtil() {\r\n    }\r\n    /**\r\n     * Method used for polling.\r\n     * @param fn Function that needs to be polled.\r\n     * @param timeout Time after which the polling will stop.\r\n     * @param interval Time difference between calls while polling.\r\n     */\r\n    PollUtil.Poll = function (fn, timeout, interval) {\r\n        var endTime = Number(new Date()) + (timeout || 2000);\r\n        interval = interval || 1000;\r\n        var checkCondition = function (resolve, reject) {\r\n            fn()\r\n                .then(function (response) {\r\n                resolve(response);\r\n            })\r\n                .catch(function (error) {\r\n                if (Number(new Date()) < endTime) {\r\n                    setTimeout(checkCondition, interval, resolve, reject);\r\n                }\r\n                else {\r\n                    reject(new Error('Timed out'));\r\n                }\r\n            });\r\n        };\r\n        return new Promise(checkCondition);\r\n    };\r\n    return PollUtil;\r\n}());\r\nexports.PollUtil = PollUtil;\r\n\n\n//# sourceURL=webpack:///./src/Utils/pollUtil.ts?")},"./src/Utils/randomUtil.ts":
/*!*********************************!*\
  !*** ./src/Utils/randomUtil.ts ***!
  \*********************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n/**\r\n * Module to generate a random number.\r\n */\r\nvar RandomUtil = /** @class */ (function () {\r\n    function RandomUtil() {\r\n    }\r\n    /**\r\n     * Function to generate a random number. Range if not specified is capped between 100001-999999.\r\n     * @param min Min value (included) which the random number can take.\r\n     * @param max Max value (included) which the random number can take.\r\n     */\r\n    RandomUtil.GetRandomNumber = function (min, max) {\r\n        min = min || 100001;\r\n        max = max || 999999;\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    };\r\n    return RandomUtil;\r\n}());\r\nexports.RandomUtil = RandomUtil;\r\n\n\n//# sourceURL=webpack:///./src/Utils/randomUtil.ts?')},"./src/Utils/urlUtil.ts":
/*!******************************!*\
  !*** ./src/Utils/urlUtil.ts ***!
  \******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n/**\r\n * Url utility that adds consent code to url as query parameter.\r\n */\r\nvar UrlUtil = /** @class */ (function () {\r\n    function UrlUtil() {\r\n    }\r\n    /**\r\n     * Method that adds consent code to url as query parameter if needed.\r\n     * @param url URL to which the consent code query parameter needs to be appended.\r\n     * @param consentCode consent code that was randomly generated.\r\n     */\r\n    UrlUtil.AppendConsentCode = function (url, consentCode) {\r\n        return consentCode !== 0 ?\r\n            url.indexOf(\'?\') > 0 ? url + "&consentCode=" + consentCode : url + "?consentCode=" + consentCode :\r\n            url;\r\n    };\r\n    return UrlUtil;\r\n}());\r\nexports.UrlUtil = UrlUtil;\r\n\n\n//# sourceURL=webpack:///./src/Utils/urlUtil.ts?')},"./src/Views/Error.html":
/*!******************************!*\
  !*** ./src/Views/Error.html ***!
  \******************************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = ("<div class=\\"uipath-content uipath-small\\">\\r\\n    <div class=\\"uipath-header\\">\\r\\n        <h1>Grant Robot Access</h1>\\r\\n        <div id=\\"uipathOverlayclose\\" onclick=\\"window.parent.document.getElementById(\'uipathConsentOverlay\').hidden=true\\">&times;</div>\\r\\n    </div>\\r\\n    <div class=\\"uipath-instructions\\">\\r\\n        <h2>Unable to get Robot access</h2>\\r\\n        <div class=\\"uipath-explanation\\">Make sure that you have the <a href=\\"https://insiderpreview.uipath.com/portal\\">Robot Embedding Utility</a> installed on your machine and that it has not been disabled. <a href=\\"https://insiderpreview.uipath.com/portal\\">Learn more.</a></div>\\r\\n        <div class=\\"uipath-interactions\\">\\r\\n            <button class=\\"uipath-tryAgain\\" onclick=\\"\\" type=\\"button\\">Try Again</button><button type=\\"button\\" onclick=\\"window.parent.document.getElementById(\'uipathConsentOverlay\').hidden=true\\">Cancel</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>");\n\n//# sourceURL=webpack:///./src/Views/Error.html?')},"./src/Views/Template.html":
/*!*********************************!*\
  !*** ./src/Views/Template.html ***!
  \*********************************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = ("<div class=\\"uipath-content\\">\\r\\n    <div class=\\"uipath-header\\">\\r\\n        <h1>Grant Robot Access</h1>\\r\\n        <div id=\\"uipathOverlayclose\\" onclick=\\"window.parent.document.getElementById(\'uipathConsentOverlay\').hidden=true\\">&times;\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\"uipath-instructions\\">\\r\\n        <h2>Robot Access Code</h2>\\r\\n        <div id=\\"uipathConsentcode\\">tokenToShow</div>\\r\\n        <dl>\\r\\n            <dt>Step 1: Allow UiPath Robot application to run</dt>\\r\\n            <dd>\\r\\n                <image class=\\"uipath-browserPrompt\\" src=\\"http://127.0.0.1:2323/BrowserPrompt.png\\" />\\r\\n            </dd>\\r\\n            <dt>Step 2: Verify your access code matches what you see in this window</dt>\\r\\n            <dd>\\r\\n                <image class=\\"uipath-consentWindow\\" src=\\"http://127.0.0.1:2323/ConsentWindow.png\\" />\\r\\n            </dd>\\r\\n            <dt>Step 3: Click \'Allow\'</dt>\\r\\n        </dl>\\r\\n    </div>\\r\\n</div>");\n\n//# sourceURL=webpack:///./src/Views/Template.html?')},"./src/Views/css/Template.css":
/*!************************************!*\
  !*** ./src/Views/css/Template.css ***!
  \************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('\n        var result = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js!./Template.css */ "./node_modules/css-loader/dist/cjs.js!./src/Views/css/Template.css");\n\n        if (typeof result === "string") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n//# sourceURL=webpack:///./src/Views/css/Template.css?')},"./src/enums/jobState.ts":
/*!*******************************!*\
  !*** ./src/enums/jobState.ts ***!
  \*******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n/**\r\n * Job state enum\r\n */\r\nvar JobState;\r\n(function (JobState) {\r\n    JobState[JobState["Executing"] = 0] = "Executing";\r\n    JobState[JobState["Closed"] = 1] = "Closed";\r\n    JobState[JobState["Canceled"] = 2] = "Canceled";\r\n    JobState[JobState["Faulted"] = 3] = "Faulted";\r\n})(JobState = exports.JobState || (exports.JobState = {}));\r\n\n\n//# sourceURL=webpack:///./src/enums/jobState.ts?')},"./src/models/index.ts":
/*!*****************************!*\
  !*** ./src/models/index.ts ***!
  \*****************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n__export(__webpack_require__(/*! ./job */ "./src/models/job.ts"));\r\n__export(__webpack_require__(/*! ./jobResult */ "./src/models/jobResult.ts"));\r\n__export(__webpack_require__(/*! ./response */ "./src/models/response.ts"));\r\n__export(__webpack_require__(/*! ./robotProcess */ "./src/models/robotProcess.ts"));\r\n__export(__webpack_require__(/*! ./settings */ "./src/models/settings.ts"));\r\n\n\n//# sourceURL=webpack:///./src/models/index.ts?')},"./src/models/job.ts":
/*!***************************!*\
  !*** ./src/models/job.ts ***!
  \***************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n/**\r\n * Job model used to identify a running/completed Robot process\r\n */\r\nvar Job = /** @class */ (function () {\r\n    function Job(jobId) {\r\n        this.jobId = jobId;\r\n    }\r\n    return Job;\r\n}());\r\nexports.Job = Job;\r\n\n\n//# sourceURL=webpack:///./src/models/job.ts?')},"./src/models/jobResult.ts":
/*!*********************************!*\
  !*** ./src/models/jobResult.ts ***!
  \*********************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n/**\r\n * Job result model containings details of the executing/completed job.\r\n */\r\nvar JobResult = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param state Current state of the job\r\n     * @param status Current status of the job\r\n     * @param output Output of the job if any\r\n     * @param exception Exception from the job if any\r\n     */\r\n    function JobResult(state, status, output, exception) {\r\n        this.state = state;\r\n        this.status = status;\r\n        this.output = output;\r\n        this.exception = exception;\r\n        this.output = output || undefined;\r\n        this.exception = exception || undefined;\r\n    }\r\n    Object.defineProperty(JobResult.prototype, "isExecuting", {\r\n        get: function () { return this.state === \'Executing\'; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return JobResult;\r\n}());\r\nexports.JobResult = JobResult;\r\n\n\n//# sourceURL=webpack:///./src/models/jobResult.ts?')},"./src/models/response.ts":
/*!********************************!*\
  !*** ./src/models/response.ts ***!
  \********************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n/**\r\n * Generic response model\r\n */\r\nvar Response = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param httpStatus Http status of the response\r\n     * @param statusText Http status text of the response\r\n     * @param data response data if any\r\n     */\r\n    function Response(httpStatus, statusText, data) {\r\n        var _this = this;\r\n        this.httpStatus = httpStatus;\r\n        this.statusText = statusText;\r\n        this.data = data;\r\n        /**\r\n         * Resolve promise if its a successful response. Throws error if response was unsuccessful.\r\n         * @param promise promise which will be resolved if response was successful.\r\n         */\r\n        this.Resolve = function (promise) {\r\n            if (_this.isSuccess) {\r\n                promise.resolve(_this.data);\r\n            }\r\n            else {\r\n                throw new Error(_this.statusText);\r\n            }\r\n        };\r\n        this.data = data || undefined;\r\n    }\r\n    Object.defineProperty(Response.prototype, "isSuccess", {\r\n        get: function () { return this.httpStatus >= 200 && this.httpStatus < 300; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Response.prototype, "isUnauthorized", {\r\n        get: function () { return this.httpStatus === 401; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Response.prototype, "isForbidden", {\r\n        get: function () { return this.httpStatus === 403; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Response.prototype, "isEmpty", {\r\n        get: function () { return this.httpStatus === 0; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Response.prototype, "isNotFound", {\r\n        get: function () { return this.httpStatus === 404; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Response;\r\n}());\r\nexports.Response = Response;\r\n\n\n//# sourceURL=webpack:///./src/models/response.ts?')},"./src/models/robotProcess.ts":
/*!************************************!*\
  !*** ./src/models/robotProcess.ts ***!
  \************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n/**\r\n * Robot process model containing details of the robot process available in current system\r\n */\r\nvar RobotProcess = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param id Unique id of the robot process\r\n     * @param name Robot Process name\r\n     */\r\n    function RobotProcess(id, name) {\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n    return RobotProcess;\r\n}());\r\nexports.RobotProcess = RobotProcess;\r\n\n\n//# sourceURL=webpack:///./src/models/robotProcess.ts?')},"./src/models/settings.ts":
/*!********************************!*\
  !*** ./src/models/settings.ts ***!
  \********************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n/**\r\n * Settings class used to change default settings of Js SDK\r\n */\r\nvar Settings = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param portNumber Port number of the Http listener\r\n     * @param pollTimeInterval Poll interval time.\r\n     */\r\n    function Settings(portNumber, pollTimeInterval) {\r\n        this.portNumber = portNumber;\r\n        this.pollTimeInterval = pollTimeInterval;\r\n    }\r\n    return Settings;\r\n}());\r\nexports.Settings = Settings;\r\n\n\n//# sourceURL=webpack:///./src/models/settings.ts?')},"./src/requests/Implementation/index.ts":
/*!**********************************************!*\
  !*** ./src/requests/Implementation/index.ts ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n__export(__webpack_require__(/*! ./invokeRobotRequest */ "./src/requests/Implementation/invokeRobotRequest.ts"));\r\n__export(__webpack_require__(/*! ./jobStatusRequest */ "./src/requests/Implementation/jobStatusRequest.ts"));\r\n__export(__webpack_require__(/*! ./portRequest */ "./src/requests/Implementation/portRequest.ts"));\r\n__export(__webpack_require__(/*! ./robotProcessRequest */ "./src/requests/Implementation/robotProcessRequest.ts"));\r\n\n\n//# sourceURL=webpack:///./src/requests/Implementation/index.ts?')},"./src/requests/Implementation/invokeRobotRequest.ts":
/*!***********************************************************!*\
  !*** ./src/requests/Implementation/invokeRobotRequest.ts ***!
  \***********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar index_1 = __webpack_require__(/*! ../../models/index */ "./src/models/index.ts");\r\nvar utils_1 = __webpack_require__(/*! ../../utils */ "./src/utils/index.ts");\r\nvar constants_1 = __webpack_require__(/*! ../../utils/constants */ "./src/utils/constants.ts");\r\n/**\r\n * Request class to invoke any robot from local system.\r\n */\r\nvar InvokeRobotRequest = /** @class */ (function () {\r\n    /**\r\n     * Default constructor.\r\n     * @param robotProcessId PackageId of the robot to run.\r\n     * @param data Data to be passed as in arguments to robot process on start. Optional parameter.\r\n     */\r\n    function InvokeRobotRequest(robotProcessId, data) {\r\n        var _this = this;\r\n        this.robotProcessId = robotProcessId;\r\n        this.data = data;\r\n        /**\r\n         * Method that sends the request to invoke a robot.\r\n         * @returns Promise of Response model type.\r\n         */\r\n        this.Send = function () { return utils_1.HttpUtil.Post(_this.url, _this.ConvertToJob, _this.data); };\r\n        this.url = \'\';\r\n    }\r\n    /**\r\n     * Set the port to which the request should be sent along with the consent code.\r\n     * @param robotInvocationPort Port on which local listener is running.\r\n     * @param consentCode User consented code.\r\n     */\r\n    InvokeRobotRequest.prototype.Set = function (robotInvocationPort, consentCode) {\r\n        this.url = this.GetURL(robotInvocationPort, consentCode);\r\n        return this;\r\n    };\r\n    /**\r\n     * Mapper method used to convert string response to desired Job model.\r\n     * @param data HttpResponse data sent from listener.\r\n     * @returns Job to uniquely identify this robot process execution.\r\n     */\r\n    InvokeRobotRequest.prototype.ConvertToJob = function (data) {\r\n        if (data) {\r\n            var jsonResponse = JSON.parse(data).response;\r\n            return new index_1.Job(jsonResponse.JobId);\r\n        }\r\n        return new index_1.Job(\'\');\r\n    };\r\n    /**\r\n     * Method that returns the request endpoint to which request will be sent.\r\n     * @param robotInvocationPort Port of local listener to which request should be sent.\r\n     * @param consentCode User approved consent code if any.\r\n     */\r\n    InvokeRobotRequest.prototype.GetURL = function (robotInvocationPort, consentCode) {\r\n        var url = constants_1.Constants.DEFAULT_ROBOT_INVOKE_DOMAIN + ":" + robotInvocationPort + "/" + constants_1.Constants.INVOKE_ROBOT + "?robotProcessId=" + this.robotProcessId;\r\n        return utils_1.UrlUtil.AppendConsentCode(url, consentCode);\r\n    };\r\n    return InvokeRobotRequest;\r\n}());\r\nexports.InvokeRobotRequest = InvokeRobotRequest;\r\n\n\n//# sourceURL=webpack:///./src/requests/Implementation/invokeRobotRequest.ts?')},"./src/requests/Implementation/jobStatusRequest.ts":
/*!*********************************************************!*\
  !*** ./src/requests/Implementation/jobStatusRequest.ts ***!
  \*********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar jobState_1 = __webpack_require__(/*! ../../enums/jobState */ "./src/enums/jobState.ts");\r\nvar index_1 = __webpack_require__(/*! ../../models/index */ "./src/models/index.ts");\r\nvar constants_1 = __webpack_require__(/*! ../../utils/constants */ "./src/utils/constants.ts");\r\nvar httpUtil_1 = __webpack_require__(/*! ../../utils/httpUtil */ "./src/utils/httpUtil.ts");\r\nvar urlUtil_1 = __webpack_require__(/*! ../../utils/urlUtil */ "./src/utils/urlUtil.ts");\r\n/**\r\n * Request class to get status of any running/completed job.\r\n */\r\nvar JobStatusRequest = /** @class */ (function () {\r\n    /**\r\n     * Default constructor.\r\n     * @param job Job object whose status we want to request\r\n     */\r\n    function JobStatusRequest(job) {\r\n        var _this = this;\r\n        this.job = job;\r\n        /**\r\n         * Method that sends the request to get status of running/completed job.\r\n         * @returns Promise of Response model type.\r\n         */\r\n        this.Send = function () { return httpUtil_1.HttpUtil.Get(_this.url, _this.ConvertToJobResult); };\r\n        /**\r\n         * Method that returns the request endpoint to which request will be sent.\r\n         * @param robotInvocationPort Port of local listener to which request should be sent.\r\n         * @param consentCode User approved consent code if any.\r\n         * @param job Job for which the result is to be found.\r\n         */\r\n        this.GetURL = function (robotInvocationPort, consentCode, job) {\r\n            var url = constants_1.Constants.DEFAULT_ROBOT_INVOKE_DOMAIN + ":" + robotInvocationPort + "/" + constants_1.Constants.GET_JOB_STATUS + "?jobId=" + job.jobId;\r\n            return urlUtil_1.UrlUtil.AppendConsentCode(url, consentCode);\r\n        };\r\n        this.url = \'\';\r\n    }\r\n    /**\r\n     * Set the port to which the request should be sent along with the consent code.\r\n     * @param robotInvocationPort Port on which local listener is running.\r\n     * @param consentCode User consented code.\r\n     */\r\n    JobStatusRequest.prototype.Set = function (robotInvocationPort, consentCode) {\r\n        this.url = this.GetURL(robotInvocationPort, consentCode, this.job);\r\n        return this;\r\n    };\r\n    /**\r\n     * Mapper method used to convert string response to desired Job result model.\r\n     * @param data HttpResponse sent from listener.\r\n     * @returns Job result of the completed/errored job.\r\n     */\r\n    JobStatusRequest.prototype.ConvertToJobResult = function (data) {\r\n        if (data) {\r\n            var jsonResponse = JSON.parse(data).response;\r\n            return new index_1.JobResult(jobState_1.JobState[jsonResponse.State], jsonResponse.Status, jsonResponse.Output, jsonResponse.Error);\r\n        }\r\n        return new index_1.JobResult(\'\', \'\', undefined, undefined);\r\n    };\r\n    return JobStatusRequest;\r\n}());\r\nexports.JobStatusRequest = JobStatusRequest;\r\n\n\n//# sourceURL=webpack:///./src/requests/Implementation/jobStatusRequest.ts?')},"./src/requests/Implementation/portRequest.ts":
/*!****************************************************!*\
  !*** ./src/requests/Implementation/portRequest.ts ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar utils_1 = __webpack_require__(/*! ../../utils */ "./src/utils/index.ts");\r\nvar constants_1 = __webpack_require__(/*! ../../utils/constants */ "./src/utils/constants.ts");\r\n/**\r\n * Request class to get port of listener running on local user session.\r\n */\r\nvar PortRequest = /** @class */ (function () {\r\n    /**\r\n     * Default constructor\r\n     * @param listenerPort Port of listener running on session 0.\r\n     * @param consentCode User approved consent code if any.\r\n     */\r\n    function PortRequest(listenerPort, consentCode) {\r\n        var _this = this;\r\n        /**\r\n        * Method that sends the request to get port of listener running on local user session.\r\n        * @returns Promise of Response model type.\r\n        */\r\n        this.GetPort = function () { return utils_1.HttpUtil.Get(_this.url, _this.ConvertToPort); };\r\n        /**\r\n         * Mapper method used to convert string response to number.\r\n         * @param response HttpResponse sent from listener.\r\n         * @returns Port number.\r\n         */\r\n        this.ConvertToPort = function (response) {\r\n            if (response) {\r\n                var portResponse = JSON.parse(response);\r\n                return portResponse.Port;\r\n            }\r\n            return 0;\r\n        };\r\n        /**\r\n         * Method that sets the request endpoint to which request will be sent.\r\n         * @param listenerEndpoint Endpoint to which request will be sent\r\n         * @param consentCode randomly generated consent code.\r\n         */\r\n        this.SetURL = function (listenerEndpoint, consentCode) { return utils_1.UrlUtil.AppendConsentCode(listenerEndpoint + "/" + constants_1.Constants.GET_PORT, consentCode); };\r\n        var listenerEndpoint = constants_1.Constants.DEFAULT_PORT_DISCOVERY_DOMAIN + ":" + listenerPort;\r\n        this.url = this.SetURL(listenerEndpoint, consentCode);\r\n    }\r\n    return PortRequest;\r\n}());\r\nexports.PortRequest = PortRequest;\r\n\n\n//# sourceURL=webpack:///./src/requests/Implementation/portRequest.ts?')},"./src/requests/Implementation/robotProcessRequest.ts":
/*!************************************************************!*\
  !*** ./src/requests/Implementation/robotProcessRequest.ts ***!
  \************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar models_1 = __webpack_require__(/*! ../../models */ "./src/models/index.ts");\r\nvar utils_1 = __webpack_require__(/*! ../../utils */ "./src/utils/index.ts");\r\nvar constants_1 = __webpack_require__(/*! ../../utils/constants */ "./src/utils/constants.ts");\r\nvar RobotProcessRequest = /** @class */ (function () {\r\n    /**\r\n     * Default constructor\r\n     */\r\n    function RobotProcessRequest() {\r\n        var _this = this;\r\n        /**\r\n         * Request method to get all published robots in local machine.\r\n         * @returns Promise of type Response.\r\n         */\r\n        this.Send = function () { return utils_1.HttpUtil.Get(_this.url, _this.ConvertToRobotProcesses); };\r\n        /**\r\n         * Set the port to which the request should be sent along with the consent code.\r\n         * @param robotInvocationPort Port on which local listener is running.\r\n         * @param consentCode User consented code.\r\n         */\r\n        this.Set = function (robotInvocationPort, consentCode) {\r\n            _this.url = _this.GetURL(robotInvocationPort, consentCode);\r\n            return _this;\r\n        };\r\n        this.ConvertToRobotProcesses = function (httpResponse) {\r\n            if (httpResponse) {\r\n                var jsonResponse = JSON.parse(httpResponse).response;\r\n                if (jsonResponse && jsonResponse.length) {\r\n                    return jsonResponse.map(function (r) { return new models_1.RobotProcess(r.Key, r.Name); });\r\n                }\r\n            }\r\n            return [];\r\n        };\r\n        this.url = \'\';\r\n    }\r\n    /**\r\n     * Method that returns the request endpoint to which request will be sent.\r\n     * @param robotInvocationPort Port of local listener to which request should be sent.\r\n     * @param consentCode User approved consent code if any.\r\n     */\r\n    RobotProcessRequest.prototype.GetURL = function (robotInvocationPort, consentCode) {\r\n        var url = constants_1.Constants.DEFAULT_ROBOT_INVOKE_DOMAIN + ":" + robotInvocationPort + "/" + constants_1.Constants.GET_ROBOT_PROCESSES;\r\n        return utils_1.UrlUtil.AppendConsentCode(url, consentCode);\r\n    };\r\n    return RobotProcessRequest;\r\n}());\r\nexports.RobotProcessRequest = RobotProcessRequest;\r\n\n\n//# sourceURL=webpack:///./src/requests/Implementation/robotProcessRequest.ts?')},"./src/utils/constants.ts":
/*!********************************!*\
  !*** ./src/utils/constants.ts ***!
  \********************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants = /** @class */ (function () {\r\n    function Constants() {\r\n    }\r\n    Constants.GET_PORT = 'GetPort';\r\n    Constants.GET_ROBOT_PROCESSES = 'RobotProcesses';\r\n    Constants.GET_JOB_STATUS = 'JobStatus';\r\n    Constants.INVOKE_ROBOT = 'InvokeRobot';\r\n    Constants.REPORT_STATUS = 'ReportStatus';\r\n    Constants.UIPATH_EDITION = 'UiPathEdition';\r\n    Constants.DEFAULT_ROBOT_INVOKE_DOMAIN = 'http://127.0.0.1';\r\n    Constants.DEFAULT_PORT_DISCOVERY_DOMAIN = 'http://127.0.0.1';\r\n    Constants.DEFAULT_PORT = 2323;\r\n    Constants.UIPATH_PROTOCOL = 'uipath-web';\r\n    Constants.POLL_TIMEOUT = 60000;\r\n    Constants.POLL_TIMEINTERVAL = 250;\r\n    Constants.HTTP_UNAUTHORIZED = 401;\r\n    Constants.UIPATH_CONSENTOVERLAY_ID = 'uipathConsentOverlay';\r\n    Constants.UIPATH_CONSENTDIALOG_ID = 'uipathConsentFrame';\r\n    Constants.INIT = 'Init';\r\n    Constants.RUN_ROBOT = 'Run Robot';\r\n    Constants.ROBOT_PROCESSES = 'Get Robot Processes';\r\n    Constants.JOB_STATUS_POLL = 'Job Status Poll';\r\n    return Constants;\r\n}());\r\nexports.Constants = Constants;\r\n\n\n//# sourceURL=webpack:///./src/utils/constants.ts?")},"./src/utils/deferred.ts":
/*!*******************************!*\
  !*** ./src/utils/deferred.ts ***!
  \*******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n/**\r\n * Deferred promise class.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.resolve = function (value) { return _this._resolve(value); };\r\n        this.reject = function (reason) { return _this._reject(reason); };\r\n        this._promise = new Promise(function (resolve, reject) {\r\n            _this._resolve = resolve;\r\n            _this._reject = reject;\r\n        });\r\n    }\r\n    Object.defineProperty(Deferred.prototype, "promise", {\r\n        get: function () {\r\n            return this._promise;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Deferred;\r\n}());\r\nexports.Deferred = Deferred;\r\n\n\n//# sourceURL=webpack:///./src/utils/deferred.ts?')},"./src/utils/htmlUtil.ts":
/*!*******************************!*\
  !*** ./src/utils/htmlUtil.ts ***!
  \*******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar Error_html_1 = __importDefault(__webpack_require__(/*! ../Views/Error.html */ "./src/Views/Error.html"));\r\nvar Template_html_1 = __importDefault(__webpack_require__(/*! ../Views/Template.html */ "./src/Views/Template.html"));\r\nvar constants_1 = __webpack_require__(/*! ./constants */ "./src/utils/constants.ts");\r\n/**\r\n * Html Utility to build consent help overlay.\r\n */\r\nvar HtmlUtil = /** @class */ (function () {\r\n    function HtmlUtil() {\r\n    }\r\n    /**\r\n     * Creates a blob URL\r\n     * @param code Content to be stored in blob\r\n     * @param type Type of blob object to create\r\n     * @returns Source to load as blob url.\r\n     */\r\n    HtmlUtil.GetBlobURL = function (code, type) {\r\n        var blob = new Blob([code], { type: type });\r\n        return URL.createObjectURL(blob);\r\n    };\r\n    /**\r\n     * Returns complete html page as string\r\n     * @param param0 Object containing the css, cssURL and html to show as string\r\n     * @returns Complete html page as string\r\n     */\r\n    HtmlUtil.GetCompleteHtml = function (_a) {\r\n        var html = _a.html, css = _a.css, cssURL = _a.cssURL;\r\n        return "\\n          <html>\\n            <head>\\n              " + (css && "<link rel=\\"stylesheet\\" type=\\"text/css\\" href=\\"" + cssURL + "\\" />") + "\\n            </head>\\n            <body>\\n              " + (html || \'\') + "\\n            </body>\\n          </html>\\n        ";\r\n    };\r\n    /**\r\n     * Loads the Iframe with overlay content\r\n     * @param iframe Iframe on which overlay content will be loaded\r\n     * @param html Html content to load\r\n     * @param css Css to bind to the html\r\n     */\r\n    HtmlUtil.LoadIFrame = function (iframe, html, css) {\r\n        if (navigator.userAgent.indexOf(\'MSIE\') !== -1 ||\r\n            navigator.appVersion.indexOf(\'Trident/\') > -1) {\r\n            /**\r\n                IE11 does not support Blob URLs for type text/html\r\n            */\r\n            var doc = iframe.contentWindow.document;\r\n            doc.open();\r\n            doc.write(HtmlUtil.GetCompleteHtml({\r\n                html: html,\r\n                css: HtmlUtil.cssToBind,\r\n                cssURL: HtmlUtil.GetBlobURL(css, \'text/css\'),\r\n            }));\r\n            doc.close();\r\n        }\r\n        else {\r\n            iframe.src = HtmlUtil.GeneratePageURL({\r\n                html: html,\r\n                css: css,\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Shows the overlay with the consent help dialog. Html is loaded on iframe with blob url as source.\r\n     * @param consentCode Consent code generated which will be shown to user on the overlay.\r\n     */\r\n    HtmlUtil.ShowConsentOverlay = function (consentCode) {\r\n        HtmlUtil.BuildConsentHelpHtml();\r\n        var url = constants_1.Constants.UIPATH_PROTOCOL + "://consentCode=" + consentCode + "&Origin=" + window.location.origin;\r\n        var consentDiv = document.querySelector("#" + constants_1.Constants.UIPATH_CONSENTOVERLAY_ID);\r\n        var iframe = document.querySelector("#" + constants_1.Constants.UIPATH_CONSENTDIALOG_ID);\r\n        HtmlUtil.LoadIFrame(iframe, Template_html_1.default.replace(HtmlUtil.token, consentCode.toString()), HtmlUtil.cssToBind);\r\n        window.location.href = url;\r\n        consentDiv.hidden = false;\r\n    };\r\n    /**\r\n     * Hides overlay\r\n     */\r\n    HtmlUtil.HideConsentOverlay = function () {\r\n        var consentDiv = document.querySelector(\'#uipathConsentOverlay\');\r\n        if (consentDiv) {\r\n            consentDiv.hidden = true;\r\n        }\r\n    };\r\n    /**\r\n    * Show error overlay\r\n    */\r\n    HtmlUtil.ShowErrorOverlay = function () {\r\n        HtmlUtil.BuildConsentHelpHtml();\r\n        var consentDiv = document.querySelector("#" + constants_1.Constants.UIPATH_CONSENTOVERLAY_ID);\r\n        var iframe = document.querySelector("#" + constants_1.Constants.UIPATH_CONSENTDIALOG_ID);\r\n        HtmlUtil.LoadIFrame(iframe, Error_html_1.default, HtmlUtil.cssToBind);\r\n        consentDiv.hidden = false;\r\n    };\r\n    HtmlUtil.cssToBind = __webpack_require__(/*! ../Views/css/Template.css */ "./src/Views/css/Template.css").toString();\r\n    HtmlUtil.token = \'tokenToShow\';\r\n    /**\r\n     * Adds an overlay div to html body.\r\n     */\r\n    HtmlUtil.BuildConsentHelpHtml = function () {\r\n        var consentDiv = document.querySelector("#" + constants_1.Constants.UIPATH_CONSENTOVERLAY_ID);\r\n        if (!consentDiv) {\r\n            consentDiv = document.createElement(\'div\');\r\n            consentDiv.setAttribute(\'id\', "" + constants_1.Constants.UIPATH_CONSENTOVERLAY_ID);\r\n            consentDiv.style.cssText = \'position: fixed;width: 100%;height: 100%;top: 0;left: 0;right: 0;bottom: 0;background-color: rgba(0,0,0,0.5);z-index: 999999;cursor: pointer;\';\r\n            var consentIFrame = document.createElement(\'iframe\');\r\n            consentIFrame.setAttribute(\'id\', "" + constants_1.Constants.UIPATH_CONSENTDIALOG_ID);\r\n            consentIFrame.style.cssText = \'position: fixed;width: 100%;height: 100%;top: 0;left: 0;right: 0;bottom: 0;\';\r\n            consentDiv.appendChild(consentIFrame);\r\n            document.body.appendChild(consentDiv);\r\n        }\r\n    };\r\n    /**\r\n     * Constructs a html page to be loaded.\r\n     * @param param0 Object containing the css and html to show as string\r\n     * @returns Source to load as blob url.\r\n     */\r\n    HtmlUtil.GeneratePageURL = function (_a) {\r\n        var html = _a.html, css = _a.css;\r\n        var source = HtmlUtil.GetCompleteHtml({\r\n            html: html,\r\n            css: HtmlUtil.cssToBind,\r\n            cssURL: HtmlUtil.GetBlobURL(css, \'text/css\'),\r\n        });\r\n        return HtmlUtil.GetBlobURL(source, \'text/html\');\r\n    };\r\n    return HtmlUtil;\r\n}());\r\nexports.HtmlUtil = HtmlUtil;\r\n\n\n//# sourceURL=webpack:///./src/utils/htmlUtil.ts?')},"./src/utils/httpUtil.ts":
/*!*******************************!*\
  !*** ./src/utils/httpUtil.ts ***!
  \*******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * XMLHttpRequest module used to send Http requests to listeners.\r\n */\r\nvar response_1 = __webpack_require__(/*! ../models/response */ \"./src/models/response.ts\");\r\nvar HttpUtil = /** @class */ (function () {\r\n    function HttpUtil() {\r\n    }\r\n    /**\r\n     * HttpGet method.\r\n     * @param url Endpoint to hit.\r\n     * @param transform Method to transform http response string to desired object.\r\n     */\r\n    HttpUtil.Get = function (url, transform) {\r\n        return HttpUtil.HttpRequest(url, transform, 'GET');\r\n    };\r\n    /**\r\n     * HttpPost method.\r\n     * @param url Endpoint to hit.\r\n     * @param transform Method to transform http response string to desired object.\r\n     * @param data Data to post.\r\n     */\r\n    HttpUtil.Post = function (url, transform, data) {\r\n        return HttpUtil.HttpRequest(url, transform, 'POST', data);\r\n    };\r\n    HttpUtil.HttpRequest = function (url, transform, method, data) {\r\n        var request = new XMLHttpRequest();\r\n        return new Promise(function (resolve, reject) {\r\n            request.onreadystatechange = function () {\r\n                if (request.readyState !== 4) {\r\n                    return;\r\n                }\r\n                resolve(new response_1.Response(request.status, request.statusText, transform(this.response)));\r\n            };\r\n            request.onerror = function () {\r\n                reject(new response_1.Response(request.status, request.statusText));\r\n            };\r\n            request.open(method, url, true);\r\n            request.withCredentials = true;\r\n            if (data) {\r\n                request.send(data);\r\n            }\r\n            else {\r\n                request.send();\r\n            }\r\n        });\r\n    };\r\n    return HttpUtil;\r\n}());\r\nexports.HttpUtil = HttpUtil;\r\n\n\n//# sourceURL=webpack:///./src/utils/httpUtil.ts?")},"./src/utils/index.ts":
/*!****************************!*\
  !*** ./src/utils/index.ts ***!
  \****************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n__export(__webpack_require__(/*! ./deferred */ "./src/utils/deferred.ts"));\r\n__export(__webpack_require__(/*! ./htmlUtil */ "./src/utils/htmlUtil.ts"));\r\n__export(__webpack_require__(/*! ./httpUtil */ "./src/utils/httpUtil.ts"));\r\n__export(__webpack_require__(/*! ./pollUtil */ "./src/utils/pollUtil.ts"));\r\n__export(__webpack_require__(/*! ./randomUtil */ "./src/utils/randomUtil.ts"));\r\n__export(__webpack_require__(/*! ./urlUtil */ "./src/utils/urlUtil.ts"));\r\n\n\n//# sourceURL=webpack:///./src/utils/index.ts?')},"./src/utils/pollUtil.ts":
/*!*******************************!*\
  !*** ./src/utils/pollUtil.ts ***!
  \*******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Poll a particular function until a specified interval/timeout.\r\n */\r\nvar PollUtil = /** @class */ (function () {\r\n    function PollUtil() {\r\n    }\r\n    /**\r\n     * Method used for polling.\r\n     * @param fn Function that needs to be polled.\r\n     * @param timeout Time after which the polling will stop.\r\n     * @param interval Time difference between calls while polling.\r\n     */\r\n    PollUtil.Poll = function (fn, timeout, interval) {\r\n        var endTime = Number(new Date()) + (timeout || 2000);\r\n        interval = interval || 1000;\r\n        var checkCondition = function (resolve, reject) {\r\n            fn()\r\n                .then(function (response) {\r\n                resolve(response);\r\n            })\r\n                .catch(function (error) {\r\n                if (Number(new Date()) < endTime) {\r\n                    setTimeout(checkCondition, interval, resolve, reject);\r\n                }\r\n                else {\r\n                    reject(new Error('Timed out'));\r\n                }\r\n            });\r\n        };\r\n        return new Promise(checkCondition);\r\n    };\r\n    return PollUtil;\r\n}());\r\nexports.PollUtil = PollUtil;\r\n\n\n//# sourceURL=webpack:///./src/utils/pollUtil.ts?")},"./src/utils/randomUtil.ts":
/*!*********************************!*\
  !*** ./src/utils/randomUtil.ts ***!
  \*********************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n/**\r\n * Module to generate a random number.\r\n */\r\nvar RandomUtil = /** @class */ (function () {\r\n    function RandomUtil() {\r\n    }\r\n    /**\r\n     * Function to generate a random number. Range if not specified is capped between 100001-999999.\r\n     * @param min Min value (included) which the random number can take.\r\n     * @param max Max value (included) which the random number can take.\r\n     */\r\n    RandomUtil.GetRandomNumber = function (min, max) {\r\n        min = min || 100001;\r\n        max = max || 999999;\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    };\r\n    return RandomUtil;\r\n}());\r\nexports.RandomUtil = RandomUtil;\r\n\n\n//# sourceURL=webpack:///./src/utils/randomUtil.ts?')},"./src/utils/urlUtil.ts":
/*!******************************!*\
  !*** ./src/utils/urlUtil.ts ***!
  \******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\n/**\r\n * Url utility that adds consent code to url as query parameter.\r\n */\r\nvar UrlUtil = /** @class */ (function () {\r\n    function UrlUtil() {\r\n    }\r\n    /**\r\n     * Method that adds consent code to url as query parameter if needed.\r\n     * @param url URL to which the consent code query parameter needs to be appended.\r\n     * @param consentCode consent code that was randomly generated.\r\n     */\r\n    UrlUtil.AppendConsentCode = function (url, consentCode) {\r\n        return consentCode !== 0 ?\r\n            url.indexOf(\'?\') > 0 ? url + "&consentCode=" + consentCode : url + "?consentCode=" + consentCode :\r\n            url;\r\n    };\r\n    return UrlUtil;\r\n}());\r\nexports.UrlUtil = UrlUtil;\r\n\n\n//# sourceURL=webpack:///./src/utils/urlUtil.ts?')}});